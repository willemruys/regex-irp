[{"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "((?:\\d+\\.){1,5})", "exceptionStackTrace": null, "matches": ["0.0.0.0.0.0.", "0.0.0.0.0.", "00.", "0."], "nonMatches": ["", "."]}, {"regex": "(?<!^)(?=[A-Z])", "exceptionStackTrace": null, "matches": [], "nonMatches": [""]}, {"regex": "^((Bob)|(John)|(Mary)).*$(?<!White)", "exceptionStackTrace": null, "matches": ["BobeVil", "BobEVIL", "Bobev_il", "Bobev il", "Bobev4il", "Bobe", "Bob ", "Bob6", "Bob_", "Mary", "John", "Bob", "Maryevil", "Johnevil", "Bobevil"], "nonMatches": []}, {"regex": "^[0-9]{4}\\s{0,2}[a-zA-z]{2}$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^(?i:(?<local_part>[a-z0-9!#$%^&*{}&#39;`+=-_|/?]+(?:\\.[a-z0-9!#$%^&*{}&#39;`+=-_|/?]+)*)@(?<labels>[a-z0-9]+\\z?.*[a-z0-9-_]+)*(?<tld>\\.[a-z0-9]{2,}))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "^([A-Za-z0-9]+[A-Za-z0-9-_]*\\.)*(([A-Za-z0-9]+[A-Za-z0-9-_]*){3,}\\.)+([A-Za-z0-9]{2,4}\\.?)+)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unbalanced parenthesis"}, "matches": []}, {"regex": "^[1-9]{1}[0-9]{0,2}([\\.\\,]?[0-9]{3})*$", "exceptionStackTrace": null, "matches": ["10,000,000", "10", "10000", "10.000", "1000,000", "100,000", "1,000", "110,000", "1", "10,000"], "nonMatches": ["10,0000", "10,00", "10,,000", "0,000", "00,000"]}, {"regex": "^([+]39)?((38[{8,9}|0])|(34[{7-9}|0])|(36[6|8|0])|(33[{3-9}|0])|(32[{8,9}]))([\\d]{7})$", "exceptionStackTrace": null, "matches": ["+3932{0000000", "+393290000000", "+393280000000", "+3932,0000000", "+3933}0000000", "+3933|0000000", "+3933{0000000", "+393330000000", "+3936|0000000", "+393680000000", "+393660000000", "+3934}0000000", "+3934|0000000", "+3934{0000000", "+393470000000", "+3938}0000000", "+3938|0000000", "+3938{0000000", "+393890000000", "+393880000000", "+3938,0000000", "32}0000000", "3300000000", "3600000000", "3400000000", "3800000000", "+3932}0000000", "+393300000000", "+393600000000", "+393400000000", "+393800000000"], "nonMatches": ["+393200000000", "+393310000000", "+393610000000", "+393410000000", "+3938000000000", "+39380000000", "+393810000000", "+39+393800000000"]}, {"regex": "^(LDAP://([\\w]+/)?(CN=[&#39;\\w\\s\\-\\&amp;]+,)*(OU=[&#39;\\w\\s\\-\\&amp;]+,)*(DC=[&#39;\\w\\s\\-\\&amp;]+[,]*)+)$", "exceptionStackTrace": null, "matches": ["LDAP://evil/CN=evil,OU=evil,DC=evil,DC=evil,", "LDAP://evil/CN=evil,OU=evil,DC=evil,,", "LDAP://evil/CN=evil,OU=evil,DC=evil", "LDAP://evil/CN=evil,OU=evil,DC=;,", "LDAP://evil/CN=evil,OU=evil,DC=-,", "LDAP://evil/CN=evil,OU=evil,DC=&,", "LDAP://evil/CN=evil,OU=evil,DC=#,", "LDAP://evil/CN=evil,OU=evil,DC=eVil,", "LDAP://evil/CN=evil,OU=evil,DC=EVIL,", "LDAP://evil/CN=evil,OU=evil,DC=ev_il,", "LDAP://evil/CN=evil,OU=evil,DC=ev il,", "LDAP://evil/CN=evil,OU=evil,DC=ev4il,", "LDAP://evil/CN=evil,OU=evil,DC=e,", "LDAP://evil/CN=evil,OU=evil,DC= ,", "LDAP://evil/CN=evil,OU=evil,DC=6,", "LDAP://evil/CN=evil,OU=evil,DC=_,", "LDAP://evil/CN=evil,OU=evil,OU=evil,DC=evil,", "LDAP://evil/CN=evil,DC=evil,", "LDAP://evil/CN=evil,OU=;,DC=evil,", "LDAP://evil/CN=evil,OU=-,DC=evil,", "LDAP://evil/CN=evil,OU=&,DC=evil,", "LDAP://evil/CN=evil,OU=#,DC=evil,", "LDAP://evil/CN=evil,OU=eVil,DC=evil,", "LDAP://evil/CN=evil,OU=EVIL,DC=evil,", "LDAP://evil/CN=evil,OU=ev_il,DC=evil,", "LDAP://evil/CN=evil,OU=ev il,DC=evil,", "LDAP://evil/CN=evil,OU=ev4il,DC=evil,", "LDAP://evil/CN=evil,OU=e,DC=evil,", "LDAP://evil/CN=evil,OU= ,DC=evil,", "LDAP://evil/CN=evil,OU=6,DC=evil,", "LDAP://evil/CN=evil,OU=_,DC=evil,", "LDAP://evil/CN=evil,CN=evil,OU=evil,DC=evil,", "LDAP://evil/OU=evil,DC=evil,", "LDAP://evil/CN=;,OU=evil,DC=evil,", "LDAP://evil/CN=-,OU=evil,DC=evil,", "LDAP://evil/CN=&,OU=evil,DC=evil,", "LDAP://evil/CN=#,OU=evil,DC=evil,", "LDAP://evil/CN=eVil,OU=evil,DC=evil,", "LDAP://evil/CN=EVIL,OU=evil,DC=evil,", "LDAP://evil/CN=ev_il,OU=evil,DC=evil,", "LDAP://evil/CN=ev il,OU=evil,DC=evil,", "LDAP://evil/CN=ev4il,OU=evil,DC=evil,", "LDAP://evil/CN=e,OU=evil,DC=evil,", "LDAP://evil/CN= ,OU=evil,DC=evil,", "LDAP://evil/CN=6,OU=evil,DC=evil,", "LDAP://evil/CN=_,OU=evil,DC=evil,", "LDAP://CN=evil,OU=evil,DC=evil,", "LDAP://eVil/CN=evil,OU=evil,DC=evil,", "LDAP://EVIL/CN=evil,OU=evil,DC=evil,", "LDAP://ev_il/CN=evil,OU=evil,DC=evil,", "LDAP://ev4il/CN=evil,OU=evil,DC=evil,", "LDAP://e/CN=evil,OU=evil,DC=evil,", "LDAP://6/CN=evil,OU=evil,DC=evil,", "LDAP://_/CN=evil,OU=evil,DC=evil,", "LDAP://DC=evil", "LDAP://evil/CN=evil,OU=evil,DC=evil,"], "nonMatches": ["LDAP://evil/CN=evil,OU=evil,", "LDAP://evil/CN=evil,OU=evil,DC==,", "LDAP://evil/CN=evil,OU=evil,DC=:,", "LDAP://evil/CN=evil,OU=evil,DC=/,", "LDAP://evil/CN=evil,OU=evil,DC=,,", "LDAP://evil/CN=evil,OU=evil,DC=,", "LDAP://evil/CN=evil,OU==,DC=evil,", "LDAP://evil/CN=evil,OU=:,DC=evil,", "LDAP://evil/CN=evil,OU=/,DC=evil,", "LDAP://evil/CN=evil,OU=,,DC=evil,", "LDAP://evil/CN=evil,OU=,DC=evil,", "LDAP://evil/CN==,OU=evil,DC=evil,", "LDAP://evil/CN=:,OU=evil,DC=evil,", "LDAP://evil/CN=/,OU=evil,DC=evil,", "LDAP://evil/CN=,,OU=evil,DC=evil,", "LDAP://evil/CN=,OU=evil,DC=evil,", "LDAP://evil/evil/CN=evil,OU=evil,DC=evil,", "LDAP://ev il/CN=evil,OU=evil,DC=evil,", "LDAP:// /CN=evil,OU=evil,DC=evil,", "LDAP:///CN=evil,OU=evil,DC=evil,"]}, {"regex": "^(([A-Z]{1}[a-z]+([\\-][A-Z]{1}[a-z]+)?)([ ]([A-Z]\\.)){0,2}[ ](([A-Z]{1}[a-z]*)|([O]{1}[\\&#39;]{1}[A-Z][a-z]{2,}))([ ](Jr\\.|Sr\\.|IV|III|II))?)$", "exceptionStackTrace": null, "matches": ["Aevil-Aevil A. O9Aaa Jr.", "Aevil-Aevil A. O3Aaa Jr.", "Aevil-Aevil A. O&Aaa Jr.", "Aevil-Aevil A. O#Aaa Jr.", "Aevil-Aevil A. Aevil", "Aevil-Aevil A. Ae Jr.", "Aevil-Aevil A. A Jr.", "Aevil-Aevil A. A. Aevil Jr.", "Aevil-Aevil Aevil Jr.", "Aevil A. Aevil Jr.", "Aevil-Ae A. Aevil Jr.", "Ae-Aevil A. Aevil Jr.", "Aevil O;Aaa", "Aevil A", "Aevil-Aevil A. O;Aaa Jr.", "Aevil-Aevil A. Aevil II", "Aevil-Aevil A. Aevil III", "Aevil-Aevil A. Aevil IV", "Aevil-Aevil A. Aevil Sr.", "Aevil-Aevil A. Aevil Jr."], "nonMatches": ["Aevil-Aevil A. O;Aa Jr.", "Aevil-Aevil A. O;;Aaa Jr.", "Aevil-Aevil A. OAaa Jr.", "Aevil-Aevil A. O0Aaa Jr.", "Aevil-Aevil A. OO;Aaa Jr.", "Aevil-Aevil A. ;Aaa Jr.", "Aevil-Aevil A. Aevil Jr. Jr.", "Aevil-Aevil A. AeVil Jr.", "Aevil-Aevil A. AEVIL Jr.", "Aevil-Aevil A. Aev_il Jr.", "Aevil-Aevil A. Aev il Jr.", "Aevil-Aevil A. Aev4il Jr.", "Aevil-Aevil A. A  Jr.", "Aevil-Aevil A. A6 Jr.", "Aevil-Aevil A. A_ Jr.", "Aevil-Aevil A. AAevil Jr.", "Aevil-Aevil A. evil Jr.", "Aevil-Aevil A. A. A. Aevil Jr.", "Aevil-Aevil-Aevil A. Aevil Jr.", "Aevil-AeVil A. Aevil Jr.", "Aevil-AEVIL A. Aevil Jr.", "Aevil-Aev_il A. Aevil Jr.", "Aevil-Aev il A. Aevil Jr.", "Aevil-Aev4il A. Aevil Jr.", "Aevil-A  A. Aevil Jr.", "Aevil-A6 A. Aevil Jr.", "Aevil-A_ A. Aevil Jr.", "Aevil-A A. Aevil Jr.", "Aevil-AAevil A. Aevil Jr.", "Aevil-evil A. Aevil Jr.", "AeVil-Aevil A. Aevil Jr.", "AEVIL-Aevil A. Aevil Jr.", "Aev_il-Aevil A. Aevil Jr.", "Aev il-Aevil A. Aevil Jr.", "Aev4il-Aevil A. Aevil Jr.", "A -Aevil A. Aevil Jr.", "A6-Aevil A. Aevil Jr.", "A_-Aevil A. Aevil Jr.", "A-Aevil A. Aevil Jr.", "AAevil-Aevil A. Aevil Jr.", "evil-Aevil A. Aevil Jr."]}, {"regex": "if(!isValidURL($_POST[&#39;url&#39;]){ echo &quot;do something&quot;; }", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "missing ), unterminated subpattern"}, "matches": []}, {"regex": "^1?[1-2]$|^[1-9]$|^[1]0$", "exceptionStackTrace": null, "matches": ["10", "1", "11"], "nonMatches": ["0", "111"]}, {"regex": "^[\\w\\W]{1,1500}$", "exceptionStackTrace": null, "matchesa", "_", "A", "0", " ", ";"], "nonMatches}, {"regex": "^(?n:(?<Apellidos>(?-i:[A-Z]\\&#39;?(\\w+?|\\.)\\ ??){1,4})?[\\s,\\s]*(?<Nombres>(?-i:[A-Z]\\&#39;?(\\w+?|\\.)\\ ??){1,4})?)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?n"}, "matches": []}, {"regex": "(?=^.{6,51}$)([A-Za-z]{1})([A-Za-z0-9!@#$%_\\^\\&amp;\\*\\-\\.\\?]{5,49})$", "exceptionStackTrace": null, "matches": ["a?????????????????????????????????????????????????", "ap????", "am????", "ab????", "aa????", "a_????", "a^????", "aA????", "a@????", "a;????", "a0????", "a.????", "a-????", "a*????", "a&????", "a%????", "a$????", "a#????", "a!????", "aa?????", "A?????", "a?????"], "nonMatches": ["a??????????????????????????????????????????????????", "a????", "?????"]}, {"regex": "\\d{5}\\-\\d{3}", "exceptionStackTrace": null, "matches": ["00000-0000", "000000-000", "00000-000"], "nonMatches": ["00000-00", "0000-000"]}, {"regex": "Buy WoW Gold", "exceptionStackTrace": null, "matches": ["Buy WoW Gold"], "nonMatches": []}, {"regex": "World of Warcraft Powerleveling", "exceptionStackTrace": null, "matches": ["World of Warcraft Powerleveling"], "nonMatches": []}, {"regex": " WOW Gold", "exceptionStackTrace": null, "matches": [" WOW Gold"], "nonMatches": []}, {"regex": "wow gold ", "exceptionStackTrace": null, "matches": ["wow gold "], "nonMatches": []}, {"regex": "^[0-9]*$", "exceptionStackTrace": null, "matches": ["00", "", "0"], "nonMatches": []}, {"regex": "^([0-9]{1,2},([0-9]{2},)*[0-9]{3}|[0-9]+)$", "exceptionStackTrace": null, "matches": ["00", "0,00,00,000", "00,00,000", "0,000", "0", "0,00,000"], "nonMatches": ["", "0,00,0000", "0,00,00", "0,000,000", "0,0,000", "000,00,000", ",00,000"]}, {"regex": "[+-]*[0-9]+[,]*[0-9]*|[+-]*[0-9]*[,]+[0-9]*", "exceptionStackTrace": null, "matches": ["-0,00", "-0,", "-0,,0", "-00", "-00,0", "-,0", "--0,0", "0,0", "+0,0", ",", "0", "-0,0"], "nonMatches": []}, {"regex": "^((CN=([&#39;\\w\\d\\s\\-\\&amp;\\.]+(\\\\/)*(\\\\,)*)+,\\s*)*(OU=([&#39;\\w\\d\\s\\-\\&amp;\\.]+(\\\\/)*(\\\\,)*)+,\\s*)*(DC=[&#39;\\w\\d\\s\\-\\&amp;]+[,]*\\s*){1,}(DC=[&#39;\\w\\d\\s\\-\\&amp;]+\\s*){1})$", "exceptionStackTrace": null, "matches": ["CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil  ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=; ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=- ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=& ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=# ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=eVil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=EVIL ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=ev_il ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=ev il ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=ev4il ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=e ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=  ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=6 ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=_ ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC= ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil,  DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil,DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil,, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=;, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=-, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=&, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=#, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=eVil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=EVIL, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=ev_il, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=ev il, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=ev4il, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=e, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC= , DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=6, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=_, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,,  DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,,DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=evil\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=;\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=.\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=-\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=&\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=#\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=eVil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=EVIL\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=ev_il\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=ev il\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=ev4il\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=e\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU= \\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=6\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=_\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,,  OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,,OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=evil\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=;\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=.\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=-\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=&\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=#\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=eVil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=EVIL\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=ev_il\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=ev il\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=ev4il\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=e\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN= \\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=6\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=_\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "DC=evilDC=evil", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil "], "nonMatches": ["CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=\\ ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC== ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=/ ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=. ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil, DC=, ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=\\, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC==, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=/, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=., DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=,, DC=evil ", "CN=evil\\/\\,, OU=evil\\/\\,, DC=, DC=evil ", "CN=evil\\/\\,, OU=, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=\\\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU==\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=/\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=,\\/\\,, DC=evil, DC=evil ", "CN=evil\\/\\,, OU=\\/\\,, DC=evil, DC=evil ", "CN=, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=\\\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN==\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=/\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=,\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil ", "CN=\\/\\,, OU=evil\\/\\,, DC=evil, DC=evil "]}, {"regex": "^[a-z0-9_.-]*@[a-z0-9-]+(.[a-z]{2,4})+$", "exceptionStackTrace": null, "matches": ["evil@evil", "evil@evilaaaaaa", "evil@evilaaaaa", "evil@evilaa", "evil@evil_aa", "evil@evilAaa", "evil@evil@aa", "evil@evil0aa", "evil@evil.aa", "evil@evil-aa", "evil@evil aa", "evil@-aaa", "evil@eVilaaa", "evil@ev_ilaaa", "evil@ev ilaaa", "evil@ev4ilaaa", "evil@eaaa", "evil@6aaa", ".@evilaaa", "-@evilaaa", "ev_il@evilaaa", "ev4il@evilaaa", "e@evilaaa", "6@evilaaa", "_@evilaaa", "@evilaaa", "evil@evilaaa"], "nonMatches": ["evil@@aaa", "evil@.aaa", "evil@EVILaaa", "evil@ aaa", "evil@_aaa", "evil@aaa", "@@evilaaa", "eVil@evilaaa", "EVIL@evilaaa", "ev il@evilaaa", " @evilaaa"]}, {"regex": "^\\s*(?i:)((1[0-2])|(0[1-9])|([123456789])):(([0-5][0-9])|([123456789]))\\s(am|pm)\\s*$", "exceptionStackTrace": null, "matches": [" 8:00 am ", " 7:00 am ", " 6:00 am ", " 5:00 am ", " 4:00 am ", " 3:00 am ", " 2:00 am ", " 1:00 am ", " 10:8 am ", " 10:7 am ", " 10:6 am ", " 10:5 am ", " 10:4 am ", " 10:3 am ", " 10:2 am ", " 10:1 am ", " 10:00 am  ", " 10:00 am", "  10:00 am ", "10:00 am ", "9:00 am", "01:00 am", "10:9 am", "10:00 pm", "10:00 am", " 9:00 am ", " 01:00 am ", " 10:9 am ", " 10:00 pm ", " 10:00 am "], "nonMatches": [" 0:00 am ", " 00:00 am ", " 10:0 am ", " 10:60 am ", " 13:00 am "]}, {"regex": "(^[0][2][1579]{1})(\\d{6,7}$)", "exceptionStackTrace": null, "matches": ["0290000000", "0299000000", "027000000", "025000000", "021000000", "029000000"], "nonMatches": ["02900000000", "02900000", "02000000", "020000000"]}, {"regex": "^[-+]?(\\d?\\d?\\d?,?)?(\\d{3}\\,?)*$", "exceptionStackTrace": null, "matches": ["+000,000", "+000,000,000,", "+000,", "+000000,", "+0000,000,", "+00,000,", "000,000,", "-000,000,", "", "+000,000,"], "nonMatches": ["+000,000,,", "+000,0000,", "+000,00,", "+000,,000,", "++000,000,"]}, {"regex": "^[-+]?(\\d?\\d?\\d?,?)?(\\d{3}\\,?)*(\\.?\\d+)$", "exceptionStackTrace": null, "matches": ["+000,000,.00", "+000,000,0", "+000,000.0", "+000,000,000,.0", "+000,.0", "+000000,.0", "+0000,000,.0", "+00,000,.0", "000,000,.0", "-000,000,.0", "0", "+000,000,.0"], "nonMatches": ["+000,000,.", "+000,000,..0", "+000,000,,.0", "+000,0000,.0", "+000,00,.0", "+000,,000,.0", "++000,000,.0"]}, {"regex": "^((https|http)://)?(www.)?(([a-zA-Z0-9\\-]{2,})\\.)+([a-zA-Z0-9\\-]{2,4})(/[\\w\\.]{0,})*((\\?)(([\\w\\%]{0,}=[\\w\\%]{0,}&?)|[\\w]{0,})*)?$", "exceptionStackTrace": null, "matches": ["https://wwwa--.--/evil?eVil", "https://wwwa--.--/evil?EVIL", "https://wwwa--.--/evil?ev_il", "https://wwwa--.--/evil?ev4il", "https://wwwa--.--/evil?e", "https://wwwa--.--/evil?6", "https://wwwa--.--/evil?_", "https://wwwa--.--/evil", "https://wwwa--.--/evil?evil=evil&evil=evil&", "https://wwwa--.--/evil?", "https://wwwa--.--/evil?evil=evil", "https://wwwa--.--/evil?evil==&", "https://wwwa--.--/evil?evil=%&", "https://wwwa--.--/evil?evil=eVil&", "https://wwwa--.--/evil?evil=EVIL&", "https://wwwa--.--/evil?evil=ev_il&", "https://wwwa--.--/evil?evil=ev4il&", "https://wwwa--.--/evil?evil=e&", "https://wwwa--.--/evil?evil=6&", "https://wwwa--.--/evil?evil=_&", "https://wwwa--.--/evil?evil=&", "https://wwwa--.--/evil?==evil&", "https://wwwa--.--/evil?%=evil&", "https://wwwa--.--/evil?eVil=evil&", "https://wwwa--.--/evil?EVIL=evil&", "https://wwwa--.--/evil?ev_il=evil&", "https://wwwa--.--/evil?ev4il=evil&", "https://wwwa--.--/evil?e=evil&", "https://wwwa--.--/evil?6=evil&", "https://wwwa--.--/evil?_=evil&", "https://wwwa--.--/evil?=evil&", "https://wwwa--.--/evil/evil?evil=evil&", "https://wwwa--.--?evil=evil&", "https://wwwa--.--//?evil=evil&", "https://wwwa--.--/.?evil=evil&", "https://wwwa--.--/eVil?evil=evil&", "https://wwwa--.--/EVIL?evil=evil&", "https://wwwa--.--/ev_il?evil=evil&", "https://wwwa--.--/ev4il?evil=evil&", "https://wwwa--.--/e?evil=evil&", "https://wwwa--.--/6?evil=evil&", "https://wwwa--.--/_?evil=evil&", "https://wwwa--.--/?evil=evil&", "https://wwwa--.----/evil?evil=evil&", "https://wwwa--.a-/evil?evil=evil&", "https://wwwa--.A-/evil?evil=evil&", "https://wwwa--.0-/evil?evil=evil&", "https://wwwa--.--.--/evil?evil=evil&", "https://wwwa-.--/evil?evil=evil&", "https://wwwaa-.--/evil?evil=evil&", "https://wwwaA-.--/evil?evil=evil&", "https://wwwa0-.--/evil?evil=evil&", "https://wwwawwwa--.--/evil?evil=evil&", "https://--.--/evil?evil=evil&", "https://wwwA--.--/evil?evil=evil&", "https://www?--.--/evil?evil=evil&", "https://www=--.--/evil?evil=evil&", "https://www:--.--/evil?evil=evil&", "https://www0--.--/evil?evil=evil&", "https://www/--.--/evil?evil=evil&", "https://www.--.--/evil?evil=evil&", "https://www---.--/evil?evil=evil&", "https://www&--.--/evil?evil=evil&", "https://www%--.--/evil?evil=evil&", "https://www --.--/evil?evil=evil&", "wwwa--.--/evil?evil=evil&", "--.--", "http://wwwa--.--/evil?evil=evil&", "https://wwwa--.--/evil?evil", "https://wwwa--.--/evil?evil=evil&"], "nonMatches": ["https://wwwa--.--/evil?ev il", "https://wwwa--.--/evil? ", "https://wwwa--.--/evil?evil=evil&?evil=evil&", "https://wwwa--.--/evil?evil=evil&&", "https://wwwa--.--/evil?evil=?&", "https://wwwa--.--/evil?evil=:&", "https://wwwa--.--/evil?evil=/&", "https://wwwa--.--/evil?evil=.&", "https://wwwa--.--/evil?evil=-&", "https://wwwa--.--/evil?evil=&&", "https://wwwa--.--/evil?evil=ev il&", "https://wwwa--.--/evil?evil= &", "https://wwwa--.--/evil??=evil&", "https://wwwa--.--/evil?:=evil&", "https://wwwa--.--/evil?/=evil&", "https://wwwa--.--/evil?.=evil&", "https://wwwa--.--/evil?-=evil&", "https://wwwa--.--/evil?&=evil&", "https://wwwa--.--/evil?ev il=evil&", "https://wwwa--.--/evil? =evil&", "https://wwwa--.--/??evil=evil&", "https://wwwa--.--/=?evil=evil&", "https://wwwa--.--/:?evil=evil&", "https://wwwa--.--/-?evil=evil&", "https://wwwa--.--/&?evil=evil&", "https://wwwa--.--/%?evil=evil&", "https://wwwa--.--/ev il?evil=evil&", "https://wwwa--.--/ ?evil=evil&", "https://wwwa--.-----/evil?evil=evil&", "https://wwwa--.-/evil?evil=evil&", "https://wwwa--/evil?evil=evil&", "https://https://wwwa--.--/evil?evil=evil&"]}, {"regex": "((&quot;|&#39;)[a-z0-9\\/\\.\\?\\=\\&amp;]*(\\.htm|\\.asp|\\.php|\\.jsp)[a-z0-9\\/\\.\\?\\=\\&amp;]*(&quot;|&#39;))|(href=*?[a-z0-9\\/\\.\\?\\=\\&amp;&quot;&#39;]*)", "exceptionStackTrace": null, "matches": ["href=?", "href==", "href=;", "href=/", "href=.", "href=&", "href=#", "href=eVil", "href=EVIL", "href=ev_il", "href=ev il", "href=ev4il", "href=e", "href= ", "href=6", "href=_", "href=", "href==evil", "hrefevil", "&quot;evil.htm?&quot;", "&quot;evil.htm=&quot;", "&quot;evil.htm;&quot;", "&quot;evil.htm/&quot;", "&quot;evil.htm.&quot;", "&quot;evil.htm&&quot;", "&quot;evil.htmev4il&quot;", "&quot;evil.htme&quot;", "&quot;evil.htm6&quot;", "&quot;evil.htm&quot;", "&quot;?.htmevil&quot;", "&quot;=.htmevil&quot;", "&quot;;.htmevil&quot;", "&quot;/.htmevil&quot;", "&quot;..htmevil&quot;", "&quot;&.htmevil&quot;", "&quot;ev4il.htmevil&quot;", "&quot;e.htmevil&quot;", "&quot;6.htmevil&quot;", "&quot;.htmevil&quot;", "href", "&#39;.htm&quot;", "&quot;.jsp&quot;", "&quot;.php&quot;", "&quot;.asp&quot;", "&quot;.htm&#39;", "&quot;.htm&quot;", "href=evil", "&#39;evil.htmevil&quot;", "&quot;evil.jspevil&quot;", "&quot;evil.phpevil&quot;", "&quot;evil.aspevil&quot;", "&quot;evil.htmevil&#39;", "&quot;evil.htmevil&quot;"], "nonMatches": ["&quot;evil.htm#&quot;", "&quot;evil.htmeVil&quot;", "&quot;evil.htmEVIL&quot;", "&quot;evil.htmev_il&quot;", "&quot;evil.htmev il&quot;", "&quot;evil.htm &quot;", "&quot;evil.htm_&quot;", "&quot;#.htmevil&quot;", "&quot;eVil.htmevil&quot;", "&quot;EVIL.htmevil&quot;", "&quot;ev_il.htmevil&quot;", "&quot;ev il.htmevil&quot;", "&quot; .htmevil&quot;", "&quot;_.htmevil&quot;"]}, {"regex": "^(sip|sips):.*\\@((\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3})|([a-zA-Z\\-\\.]+\\.[a-zA-Z]{2,5}))(:[\\d]{1,5})?([\\w\\-?\\@?\\;?\\,?\\=\\%\\&]+)?", "exceptionStackTrace": null, "matches": ["sip:evil@evil.AAAAAA:0evil", "sip:evil@evil.AAAAA:0evil", "sip:evil@evil.aA:0evil", "sip:evil@..AA:0evil", "sip:evil@-.AA:0evil", "sip:evil@eVil.AA:0evil", "sip:evil@EVIL.AA:0evil", "sip:evil@e.AA:0evil", "sip:evil@0a0a0a0:0evilevil", "sip:evil@0a0a0a0:0@", "sip:evil@0a0a0a0:0?", "sip:evil@0a0a0a0:0=", "sip:evil@0a0a0a0:0;", "sip:evil@0a0a0a0:0:", "sip:evil@0a0a0a0:0.", "sip:evil@0a0a0a0:0-", "sip:evil@0a0a0a0:0,", "sip:evil@0a0a0a0:0&", "sip:evil@0a0a0a0:0%", "sip:evil@0a0a0a0:0eVil", "sip:evil@0a0a0a0:0EVIL", "sip:evil@0a0a0a0:0ev_il", "sip:evil@0a0a0a0:0ev il", "sip:evil@0a0a0a0:0ev4il", "sip:evil@0a0a0a0:0e", "sip:evil@0a0a0a0:0 ", "sip:evil@0a0a0a0:06", "sip:evil@0a0a0a0:0_", "sip:evil@0a0a0a0:0", "sip:evil@0a0a0a0:0:0evil", "sip:evil@0a0a0a0evil", "sip:evil@0a0a0a0:000000evil", "sip:evil@0a0a0a0:00000evil", "sip:evil@0a0a0a0:evil", "sip:evil@0a0a0a0000:0evil", "sip:evil@0a0a0a000:0evil", "sip:evil@0a0a0A0:0evil", "sip:evil@0a0a0@0:0evil", "sip:evil@0a0a0?0:0evil", "sip:evil@0a0a0=0:0evil", "sip:evil@0a0a0;0:0evil", "sip:evil@0a0a0:0:0evil", "sip:evil@0a0a000:0evil", "sip:evil@0a0a0.0:0evil", "sip:evil@0a0a0-0:0evil", "sip:evil@0a0a0,0:0evil", "sip:evil@0a0a0&0:0evil", "sip:evil@0a0a0%0:0evil", "sip:evil@0a0a0 0:0evil", "sip:evil@0a0a0000a0:0evil", "sip:evil@0a0a000a0:0evil", "sip:evil@0a0A0a0:0evil", "sip:evil@0a0@0a0:0evil", "sip:evil@0a0?0a0:0evil", "sip:evil@0a0=0a0:0evil", "sip:evil@0a0;0a0:0evil", "sip:evil@0a0:0a0:0evil", "sip:evil@0a000a0:0evil", "sip:evil@0a0.0a0:0evil", "sip:evil@0a0-0a0:0evil", "sip:evil@0a0,0a0:0evil", "sip:evil@0a0&0a0:0evil", "sip:evil@0a0%0a0:0evil", "sip:evil@0a0 0a0:0evil", "sip:evil@0a0000a0a0:0evil", "sip:evil@0a000a0a0:0evil", "sip:evil@0A0a0a0:0evil", "sip:evil@0@0a0a0:0evil", "sip:evil@0?0a0a0:0evil", "sip:evil@0=0a0a0:0evil", "sip:evil@0;0a0a0:0evil", "sip:evil@0:0a0a0:0evil", "sip:evil@000a0a0:0evil", "sip:evil@0.0a0a0:0evil", "sip:evil@0-0a0a0:0evil", "sip:evil@0,0a0a0:0evil", "sip:evil@0&0a0a0:0evil", "sip:evil@0%0a0a0:0evil", "sip:evil@0 0a0a0:0evil", "sip:evil@0000a0a0a0:0evil", "sip:evil@000a0a0a0:0evil", "sip:@@0a0a0a0:0evil", "sip:?@0a0a0a0:0evil", "sip:=@0a0a0a0:0evil", "sip:;@0a0a0a0:0evil", "sip::@0a0a0a0:0evil", "sip:.@0a0a0a0:0evil", "sip:-@0a0a0a0:0evil", "sip:,@0a0a0a0:0evil", "sip:&@0a0a0a0:0evil", "sip:%@0a0a0a0:0evil", "sip:eVil@0a0a0a0:0evil", "sip:EVIL@0a0a0a0:0evil", "sip:ev_il@0a0a0a0:0evil", "sip:ev il@0a0a0a0:0evil", "sip:ev4il@0a0a0a0:0evil", "sip:e@0a0a0a0:0evil", "sip: @0a0a0a0:0evil", "sip:6@0a0a0a0:0evil", "sip:_@0a0a0a0:0evil", "sip:@0a0a0a0:0evil", "sips:@0a0a0a0", "sip:@evil.AA", "sip:@0a0a0a0", "sips:evil@0a0a0a0:0evil", "sip:evil@evil.AA:0evil", "sip:evil@0a0a0a0:0evil"], "nonMatches": ["sip:evil@evil.A:0evil", "sip:evil@@.AA:0evil", "sip:evil@?.AA:0evil", "sip:evil@=.AA:0evil", "sip:evil@;.AA:0evil", "sip:evil@:.AA:0evil", "sip:evil@,.AA:0evil", "sip:evil@&.AA:0evil", "sip:evil@%.AA:0evil", "sip:evil@ev_il.AA:0evil", "sip:evil@ev il.AA:0evil", "sip:evil@ev4il.AA:0evil", "sip:evil@ .AA:0evil", "sip:evil@6.AA:0evil", "sip:evil@_.AA:0evil", "sip:evil@.AA:0evil", "sip:evil@0a0a0a:0evil", "sip:evil@0a0aa0:0evil", "sip:evil@0aa0a0:0evil", "sip:evil@a0a0a0:0evil"]}, {"regex": "(01*0|1)*", "exceptionStackTrace": null, "matches": ["010010", "0110", "00", "", "1", "010"], "nonMatches": []}, {"regex": "test", "exceptionStackTrace": null, "matches": ["test"], "nonMatches": []}, {"regex": "^[&quot;a-zA-Z0-9\\040]+$", "exceptionStackTrace": null, "matches": [";", "&", "eVil", "EVIL", "ev il", "ev4il", "e", " ", "6", "evil"], "nonMatches": ["ev_il", "_", ""]}, {"regex": "^\\s*(([/-9!#-&#39;*+=?A-~-]+(?:\\.[/-9!#-&#39;*+=?A-~-]+)*|&quot;(?:[^&quot;\\r\\n\\\\]|\\\\.)*&quot;)@([A-Za-z][0-9A-Za-z-]*[0-9A-Za-z]?(?:\\.[A-Za-z][0-9A-Za-z-]*[0-9A-Za-z]?)*|\\[(?:[^\\[\\]\\r\\n\\\\]|\\\\.)*\\]))\\s*$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.*\\s).{8,}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["aaaaaaa", "_aaaaaaa", "Aaaaaaaa", "0aaaaaaa", " aaaaaaa", "aaaaaaaa"]}, {"regex": "sfsdf", "exceptionStackTrace": null, "matches": ["sfsdf"], "nonMatches": []}, {"regex": "^\\(0[1-9]{1}\\)[0-9]{8}$", "exceptionStackTrace": null, "matches": ["(01)00000000"], "nonMatches": ["(01)000000000", "(01)0000000", "(011)00000000", "(0)00000000", "(00)00000000"]}, {"regex": "((?:(?:&quot;[^&quot;]*&quot;)|(&#39;[^\\r]*)(\\r\\n)?)*)([\\s]*[,]|$) {CHANGED TO)\n(?<![\\&quot;\\w\\d\\s])[\\s]*(?:&quot;((?:[^\\&quot;]|[\\&quot;]{2})*)&quot;|([\\w\\d\\s]+))[\\s]*(?=[\\,]|[\\r\\n]+|$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unbalanced parenthesis"}, "matches": []}, {"regex": "^\\d?\\d&#39;(\\d|1[01])?.?(\\d|1[01])&quot;$", "exceptionStackTrace": null, "matches": ["00&#39;10a0&quot;", "00&#39;0a10&quot;", "00&#39;00&quot;", "00&#39;0A0&quot;", "00&#39;0;0&quot;", "00&#39;000&quot;", "00&#39;0&0&quot;", "00&#39;0#0&quot;", "00&#39;0 0&quot;", "00&#39;a0&quot;", "0&#39;0a0&quot;", "0&#39;11&quot;", "0&#39;0&quot;", "00&#39;11a0&quot;", "00&#39;0a11&quot;", "00&#39;0a0&quot;"], "nonMatches": ["00&#39;12a0&quot;", "00&#39;0a12&quot;", "00&#39;0aa0&quot;", "00&#39;00a0&quot;", "000&#39;0a0&quot;"]}, {"regex": ".+(?=((\\\\|\\/).+){2})", "exceptionStackTrace": null, "matches": [], "nonMatches": ["\\", "/", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"]}, {"regex": "^-?[1-9]\\d*\\.?(\\d+([eE][-+]\\d+)?)?$", "exceptionStackTrace": null, "matches": ["-10.", "-10.0", "-10.0E+00", "-10.0E-0", "-10.0e+0", "-10.00E+0", "-100E+0", "-100.0E+0", "-1.0E+0", "10.0E+0", "1", "-10.0E+0"], "nonMatches": ["-10.0E+00E+0", "-10.0E+0E+0", "-10.0E+", "-10.0a+0", "-10.0A+0", "-10.E+0", "-10..0E+0", "-00.0E+0", "--10.0E+0"]}, {"regex": "[A-Za-z]{1,2}[\\d]{1,2}[A-Za-z]{0,1}", "exceptionStackTrace": null, "matches": ["a0aa", "a0A", "a000a", "a00a", "aaa0a", "aa0a", "A0a", "a0", "a0a"], "nonMatches": ["aa", "0a"]}, {"regex": "[A-Za-z]{1,2}[\\d]{1,2}[A-Za-z]{0,1}\\s*[\\d]", "exceptionStackTrace": null, "matches": ["a0a  0", "a0a0", "a0 0", "a0A 0", "a000a 0", "a00a 0", "aaa0a 0", "aa0a 0", "A0a 0", "a00", "a0a 0"], "nonMatches": ["a0aa 0", "aa 0", "0a 0"]}, {"regex": "^([A-z]{2}\\d{7})|([A-z]{4}\\d{10})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^([A-z]{2}\\d{9}[Gg][Bb])|(\\d{12})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^[A-z]{2}\\d{9}(?![Gg][Bb])[A-z]{2}$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^(?<ParcelForceUK>(?:[A-z]{2}\\d{7})|(?:[A-z]{4}\\d{10}))$|^(?<ParcelForceExport>(?:[A-z]{2}\\d{9}[Gg][Bb])|(?:\\d{12}))$|^(?<ParcelForceImport>[A-z]{2}\\d{9}(?![Gg][Bb])[A-z]{2})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<P"}, "matches": []}, {"regex": "^(?:[A-z]{2})?\\d{9}(?:[A-z]{2})?$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^(?:1[Zz])(?<ShipperNumber>[A-z\\d]{6})(?<ServiceCode>[A-z\\d]{2})(?<PackageId>\\d{8})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<S"}, "matches": []}, {"regex": "^((1[Zz]\\d{16})|(\\d{12})|([Tt]\\d{10})|(\\d{9}))$", "exceptionStackTrace": null, "matches": ["T0000000000", "1Z0000000000000000", "000000000", "t0000000000", "000000000000", "1z0000000000000000"], "nonMatches": ["0000000000", "00000000", "t00000000000", "t000000000", "a0000000000", "A0000000000", "0000000000000", "00000000000", "1z00000000000000000", "1z000000000000000", "1a0000000000000000", "1A0000000000000000"]}, {"regex": "^(?<ServiceCode>[A-z]{2})(?<ParcelNumber>\\d{8})(?<CheckDigit>\\d{1})(?<IsoCountryCode>[A-z]{2})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<S"}, "matches": []}, {"regex": "http://www\\.youtube\\.com.*v=(?&#39;VideoID&#39;[^&]*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^http[s]?://twitter\\.com/(#!/)?[a-zA-Z0-9]{1,15}[/]?$", "exceptionStackTrace": null, "matches": ["https://twitter.com/#!/0", "https://twitter.com/#!/000000000000000/", "https://twitter.com/#!/a/", "https://twitter.com/#!/A/", "https://twitter.com/0/", "http://twitter.com/#!/0/", "http://twitter.com/0", "https://twitter.com/#!/0/"], "nonMatches": ["https://twitter.com/#!/0//", "https://twitter.com/#!/0000000000000000/", "https://twitter.com/#!//", "https://twitter.com/#!/#!/0/", "httpss://twitter.com/#!/0/"]}, {"regex": "http[s]?://(www|[a-zA-Z]{2}-[a-zA-Z]{2})\\.facebook\\.com/(pages/[a-zA-Z0-9\\.-]+/[0-9]+|[a-zA-Z0-9\\.-]+)[/]?$", "exceptionStackTrace": null, "matches": ["https://AA-aA.facebook.com/pages/evil/0/", "https://aA-AA.facebook.com/pages/evil/0/", "https://www.facebook.com/./", "https://www.facebook.com/-/", "https://www.facebook.com/eVil/", "https://www.facebook.com/EVIL/", "https://www.facebook.com/ev4il/", "https://www.facebook.com/e/", "https://www.facebook.com/6/", "https://www.facebook.com/pages/evil/0", "https://www.facebook.com/pages/evil/00/", "https://www.facebook.com/pages/./0/", "https://www.facebook.com/pages/-/0/", "https://www.facebook.com/pages/eVil/0/", "https://www.facebook.com/pages/EVIL/0/", "https://www.facebook.com/pages/ev4il/0/", "https://www.facebook.com/pages/e/0/", "https://www.facebook.com/pages/6/0/", "http://www.facebook.com/pages/evil/0/", "http://AA-AA.facebook.com/pages/evil/0", "http://www.facebook.com/evil", "http://www.facebook.com/pages/evil/0", "https://AA-AA.facebook.com/pages/evil/0/", "https://www.facebook.com/evil/", "https://www.facebook.com/pages/evil/0/"], "nonMatches": ["https://AA-AAA.facebook.com/pages/evil/0/", "https://AA-A.facebook.com/pages/evil/0/", "https://AAA-AA.facebook.com/pages/evil/0/", "https://A-AA.facebook.com/pages/evil/0/", "https://www.facebook.com/:/", "https://www.facebook.com///", "https://www.facebook.com/ev_il/", "https://www.facebook.com/ev il/", "https://www.facebook.com/ /", "https://www.facebook.com/_/", "https://www.facebook.com//", "https://www.facebook.com/pages/evil/0//", "https://www.facebook.com/pages/evil//", "https://www.facebook.com/pages/:/0/", "https://www.facebook.com/pages///0/", "https://www.facebook.com/pages/ev_il/0/", "https://www.facebook.com/pages/ev il/0/", "https://www.facebook.com/pages/ /0/", "https://www.facebook.com/pages/_/0/", "https://www.facebook.com/pages//0/", "httpss://www.facebook.com/pages/evil/0/"]}, {"regex": "^(?!^(5|15|18|30)$)\\d+$", "exceptionStackTrace": null, "matches": ["00", "0"], "nonMatches": [""]}, {"regex": "^UA-\\d+-\\d+$", "exceptionStackTrace": null, "matches": ["UA-0-00", "UA-00-0", "UA-0-0"], "nonMatches": ["UA-0-", "UA--0"]}, {"regex": "(?:\\?=.*)?$", "exceptionStackTrace": null, "matches": ["?=evil?=evil", "?=?", "?==", "?=eVil", "?=EVIL", "?=ev_il", "?=ev il", "?=ev4il", "?=e", "?= ", "?=6", "?=_", "?=", "", "?=evil"], "nonMatches": []}, {"regex": "^~/(?:default\\.aspx)?(?:\\?=.*)?$", "exceptionStackTrace": null, "matches": ["~/default.aspx?=evil?=evil", "~/default.aspx", "~/default.aspx?=~", "~/default.aspx?=?", "~/default.aspx?==", "~/default.aspx?=/", "~/default.aspx?=.", "~/default.aspx?=eVil", "~/default.aspx?=EVIL", "~/default.aspx?=ev_il", "~/default.aspx?=ev il", "~/default.aspx?=ev4il", "~/default.aspx?=e", "~/default.aspx?= ", "~/default.aspx?=6", "~/default.aspx?=_", "~/default.aspx?=", "~/?=evil", "~/", "~/default.aspx?=evil"], "nonMatches": ["~/default.aspxdefault.aspx?=evil"]}, {"regex": "^(udp|norm)://(?:(?:25[0-5]|2[0-4]\\d|[01]\\d\\d|\\d?\\d)(?(?=\\.?\\d)\\.)){4}:\\d{1,6}$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character in group name '?=\\\\.?\\\\d'"}, "matches": []}, {"regex": ":(6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3})", "exceptionStackTrace": null, "matches": [":100000", ":1000", ":600000", ":6000", ":650000", ":6500", ":65500", ":655300", ":65536", ":1", ":10", ":10000", ":60000", ":65000", ":655000", ":65530"], "nonMatches": [":00", ":00000"]}, {"regex": "(:(6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3}))?", "exceptionStackTrace": null, "matches": [":1", ":00", ":100000", ":1000", ":00000", ":600000", ":6000", ":650000", ":6500", ":65500", ":655300", ":65530:65530", ":65536", "", ":10", ":10000", ":60000", ":65000", ":655000", ":65530"], "nonMatches": []}, {"regex": "^(02\\d\\s?\\d{4}\\s?\\d{4})|((01|05)\\d{2}\\s?\\d{3}\\s?\\d{4})|((01|05)\\d{3}\\s?\\d{5,6})|((01|05)\\d{4}\\s?\\d{4,5})$", "exceptionStackTrace": null, "matches": ["01000 0000000", "01000 000000", "010000 00000", "0100 000 00000", "0100 0000000", "0100000 0000", "020 0000 00000", "020 00000000", "0200000 0000", "0500000000", "0100000000", "05000000000", "01000000000", "02000000000", "050000 0000", "010000 0000", "05000 00000", "01000 00000", "0500 000 0000", "0100 000 0000", "020 0000 0000"], "nonMatches": ["010000 000000", "010000 000", "010000  0000", "01000 0000", "01000  00000", "0100 00000", "0100 000 000", "0100 000  0000", "0100 0000 0000", "0100 00 0000", "0100  000 0000", "01000 000 0000", "010 000 0000", "020 0000 000", "020 0000  0000", "020 00000 0000", "020 000 0000", "020  0000 0000"]}, {"regex": "^[1-9]{1,2}(.5)?$", "exceptionStackTrace": null, "matches": ["1_5", "1A5", "105", "1 5", "11a5", "1", "1a5"], "nonMatches": ["1a5a5", "111a5", "a5", "0a5"]}, {"regex": "^(?<user>.+)@(?<domain>.+)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<u"}, "matches": []}, {"regex": "^(\\d){2}-(\\d){2}-(\\d){2}$", "exceptionStackTrace": null, "matches": ["00-00-00"], "nonMatches": ["00-00-000", "00-00-0", "00-000-00", "00-0-00", "000-00-00", "0-00-00"]}, {"regex": "^(\\d){8}$", "exceptionStackTrace": null, "matches": ["00000000"], "nonMatches": ["000000000", "0000000"]}, {"regex": "^(\\d){7,8}$", "exceptionStackTrace": null, "matches": ["00000000", "0000000"], "nonMatches": ["000000000", "000000"]}, {"regex": "^[^\\s]+$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev4il", "e", "6", "_", "evil"], "nonMatches": ["ev il", " ", ""]}, {"regex": "^http\\://www.[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}/$", "exceptionStackTrace": null, "matches": ["http://wwwaevil.AAA/", "http://wwwaevil.aA/", "http://wwwa..AA/", "http://wwwa-.AA/", "http://wwwaeVil.AA/", "http://wwwaEVIL.AA/", "http://wwwaev4il.AA/", "http://wwwae.AA/", "http://wwwa6.AA/", "http://wwwAevil.AA/", "http://www:evil.AA/", "http://www0evil.AA/", "http://www/evil.AA/", "http://www.evil.AA/", "http://www-evil.AA/", "http://www evil.AA/", "http://wwwaevil.AA/"], "nonMatches": ["http://wwwaevil.AAAA/", "http://wwwaevil.A/", "http://wwwa:.AA/", "http://wwwa/.AA/", "http://wwwaev_il.AA/", "http://wwwaev il.AA/", "http://wwwa .AA/", "http://wwwa_.AA/", "http://wwwa.AA/"]}, {"regex": "^[\\d]{4}[-\\s]{1}[\\d]{3}[-\\s]{1}[\\d]{4}$", "exceptionStackTrace": null, "matches": ["0000-000 0000", "0000 000-0000", "0000-000-0000"], "nonMatches": ["0000-000-00000", "0000-000-000", "0000-000--0000", "0000-0000000", "0000-0000-0000", "0000-00-0000", "0000--000-0000", "0000000-0000", "00000-000-0000", "000-000-0000"]}, {"regex": "^[\\d]{5}[-\\s]{1}[\\d]{3}[-\\s]{1}[\\d]{3}$", "exceptionStackTrace": null, "matches": ["00000-000 000", "00000 000-000", "00000-000-000"], "nonMatches": ["00000-000-0000", "00000-000-00", "00000-000--000", "00000-000000", "00000-0000-000", "00000-00-000", "00000--000-000", "00000000-000", "000000-000-000", "0000-000-000"]}, {"regex": "^[\\d]{5}[-\\s]{1}[\\d]{2}[-\\s]{1}[\\d]{2}[-\\s]{1}[\\d]{2}$", "exceptionStackTrace": null, "matches": ["00000-00-00 00", "00000-00 00-00", "00000 00-00-00", "00000-00-00-00"], "nonMatches": ["00000-00-00-000", "00000-00-00-0", "00000-00-00--00", "00000-00-0000", "00000-00-000-00", "00000-00-0-00", "00000-00--00-00", "00000-0000-00", "00000-000-00-00", "00000-0-00-00", "00000--00-00-00", "0000000-00-00", "000000-00-00-00", "0000-00-00-00"]}, {"regex": "^[\\d]{5}[-\\s]{1}[\\d]{4}[-\\s]{1}[\\d]{2}$", "exceptionStackTrace": null, "matches": ["00000-0000 00", "00000 0000-00", "00000-0000-00"], "nonMatches": ["00000-0000-000", "00000-0000-0", "00000-0000--00", "00000-000000", "00000-00000-00", "00000-000-00", "00000--0000-00", "000000000-00", "000000-0000-00", "0000-0000-00"]}, {"regex": "^[\\d]{5}[-\\s]{1}[\\d]{2}[-\\s]{1}[\\d]{4}$ ", "exceptionStackTrace": null, "matches": [], "nonMatches": ["00000-00-00000 ", "00000-00-000 ", "00000-00--0000 ", "00000-000000 ", "00000-00 0000 ", "00000-000-0000 ", "00000-0-0000 ", "00000--00-0000 ", "0000000-0000 ", "00000 00-0000 ", "000000-00-0000 ", "0000-00-0000 ", "00000-00-0000 "]}, {"regex": "^[0-9]{1,15}(\\.([0-9]{1,2}))?$", "exceptionStackTrace": null, "matches": ["0.00", "000000000000000.0", "0", "0.0"], "nonMatches": ["0.0.0", "0.000", "0.", "0000000000000000.0", ".0"]}, {"regex": "([A-PR-UWYZa-pr-uwyz]([0-9]{1,2}|([A-HK-Ya-hk-y][0-9]|[A-HK-Ya-hk-y][0-9]([0-9]|[ABEHMNPRV-Yabehmnprv-y]))|[0-9][A-HJKS-UWa-hjks-uw]))", "exceptionStackTrace": null, "matches": ["z0s", "z0k", "z0j", "z0i", "z0a", "z0W", "z0S", "z0K", "z0J", "z0I", "z0A", "zk0v", "zk0p", "zk0n", "zk0m", "zk0h", "zk0e", "zk0c", "zk0b", "zk0a", "zk0V", "zk0R", "zk0P", "zk0N", "zk0M", "zk0H", "zk0E", "zk0C", "zk0B", "zk0A", "zi00", "za00", "zK00", "zI00", "zA00", "zi0", "za0", "zK0", "zI0", "zA0", "z000", "z00", "y0", "w0", "r0", "a0", "Z0", "Y0", "W0", "R0", "A0", "z0w", "zk0r", "zk00", "zk0", "z0"], "nonMatches": ["z", "q0", "Q0"]}, {"regex": "^[a-z][a-z0-9\\.,\\-_]{5,31}$", "exceptionStackTrace": null, "matches": ["a_______________________________", "aa____", "a0____", "a.____", "a-____", "a,____", "a_____"], "nonMatches": ["a________________________________", "a____"]}, {"regex": "(?m)^(?<scheme>\\w+?://)?(?<path>(?:[\\w.%$\\-_+!*&#39;(),=@]+\\/|\\b)+(?:[\\w.%$\\-_+!*&#39;(),=@]*))(?<query>\\?(?:[\\w.%$\\-_+!*&#39;(),=@]+=[\\w.%$\\-_+!*&#39;(),=@]*&?)*)?(?<fragment>#[\\w\\.%$\\-_+!*&#39;(),=@]*)?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<s"}, "matches": []}, {"regex": "(?s)<tr[^>]*>(?<content>.*?)</tr>", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<c"}, "matches": []}, {"regex": "[\\?&](?<name>[^&=]+)=(?<value>[^&=]+)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<n"}, "matches": []}, {"regex": "(?i)^(?:(?:METAR|SPECI)\\s*)*(?<ICAO>[\\w]{4})\\s*?(?<DateUTC>(?<DayOfMonth>\\d{0,2})(?<Hour>\\d{2})(?<Minutes>\\d{2}))Z{1}\\s*(?:[^\\r\\n])*", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<I"}, "matches": []}, {"regex": "(?i)(?s)<a[^>]+?href=&quot;?(?<url>[^&quot;]+)&quot;?>(?<innerHtml>.+?)</a\\s*>", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<u"}, "matches": []}, {"regex": "(?s)(?<=<a[^>]+?)(?<name>\\w+)=(?:[&quot;&#39;]?(?<value>[^&quot;&#39;>]*)[&quot;&#39;]?)(?=.+?>)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<n"}, "matches": []}, {"regex": "&lt;!--[\\s\\S]*?--[ \\t\\n\\r]*&gt;", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\t"}, "matches": [], "nonMatches": []}, {"regex": "^([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character range \\w-."}, "matches": []}, {"regex": "^([a-zA-Z0-9])(([\\-.]|[_]+)?([a-zA-Z0-9]+))*(@){1}([a-z0-9]|([a-z0-9][\\-]))+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$", "exceptionStackTrace": null, "matches": ["0__evil@0.aa", "0.evil@a-.aa", "0.evil@0.aa.aaa", "0.evil@0.aaa.aa", "0.evil@0.aaa", "0.evil@00.aa", "0.evil@a.aa", "0.evil.evil@0.aa", "0.eVil@0.aa", "0.EVIL@0.aa", "0.ev_il@0.aa", "0.ev4il@0.aa", "0.e@0.aa", "0.6@0.aa", "0evil@0.aa", "0-evil@0.aa", "a.evil@0.aa", "A.evil@0.aa", "0@0-.aa", "0@0.aa.aa", "0@0.aa", "0_evil@0.aa", "0.evil@0-.aa", "0.evil@0.aa.aa", "0.evil@0.aa"], "nonMatches": ["0.evil@0.aa.aaaa", "0.evil@0.aa.a", "0.evil@0.aa..aa", "0.evil@0.aaaa.aa", "0.evil@0.a.aa", "0.evil@0.aaaa", "0.evil@0.a", "0.evil@0..aa", "0.evil@0aa", "0.evil@.aa", "0.evil@@0.aa", "0.evil0.aa", "0.ev il@0.aa", "0. @0.aa", "0._@0.aa", "0.@0.aa", "0..evil@0.aa"]}, {"regex": "^([a-zA-Z0-9])(([\\-.]|[_]+)?([a-zA-Z0-9]+))*(@){1}[a-z0-9]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$", "exceptionStackTrace": null, "matches": ["0__evil@evil.aa", "0.evil@evil.aa.aaa", "0.evil@evil.aaa.aa", "0.evil@evil.aaa", "0.evil@ev4il.aa", "0.evil@e.aa", "0.evil@6.aa", "0.evil.evil@evil.aa", "0.eVil@evil.aa", "0.EVIL@evil.aa", "0.ev_il@evil.aa", "0.ev4il@evil.aa", "0.e@evil.aa", "0.6@evil.aa", "0evil@evil.aa", "0-evil@evil.aa", "a.evil@evil.aa", "A.evil@evil.aa", "0@evil.aa.aa", "0@evil.aa", "0_evil@evil.aa", "0.evil@evil.aa.aa", "0.evil@evil.aa"], "nonMatches": ["0.evil@evil.aa.aaaa", "0.evil@evil.aa.a", "0.evil@evil.aa..aa", "0.evil@evil.aaaa.aa", "0.evil@evil.a.aa", "0.evil@evil.aaaa", "0.evil@evil.a", "0.evil@evil..aa", "0.evil@evilaa", "0.evil@eVil.aa", "0.evil@EVIL.aa", "0.evil@ev_il.aa", "0.evil@ev il.aa", "0.evil@ .aa", "0.evil@_.aa", "0.evil@.aa", "0.evil@@evil.aa", "0.evilevil.aa", "0.ev il@evil.aa", "0. @evil.aa", "0._@evil.aa", "0.@evil.aa", "0..evil@evil.aa"]}, {"regex": "^\\d{4}\\s\\d{4}\\s\\d{4}$", "exceptionStackTrace": null, "matches": ["0000 0000 0000"], "nonMatches": ["0000 0000 00000", "0000 0000 000", "0000 00000 0000", "0000 000 0000", "00000 0000 0000", "000 0000 0000"]}, {"regex": "^1?[\\s\\-\\.]?[\\.\\-\\s\\(]?(\\d{3})[\\.\\-\\s\\)]?[\\s]?(\\d{3})[\\.\\s\\-]?(\\d{4})$", "exceptionStackTrace": null, "matches": ["1.(000) 0000000", "1.(000) 000.0000", "1.(000) 000 0000", "1.(000)000-0000", "1.(000 000-0000", "1.(000. 000-0000", "1.(000- 000-0000", "1.(000  000-0000", "1.000) 000-0000", "1..000) 000-0000", "1.-000) 000-0000", "1. 000) 000-0000", "1(000) 000-0000", "1-(000) 000-0000", "1 (000) 000-0000", ".(000) 000-0000", "0000000000", "1.(000) 000-0000"], "nonMatches": ["1.(000) 000-00000", "1.(000) 000-000", "1.(000) 000--0000", "1.(000) 0000-0000", "1.(000) 00-0000", "1.(000)  000-0000", "1.(000)) 000-0000", "1.(0000) 000-0000", "1.(00) 000-0000", "1.((000) 000-0000", "1..(000) 000-0000", "11.(000) 000-0000"]}, {"regex": "^\\d+?[A-Za-z]*\\s\\w*\\s?\\w+?\\s\\w{2}\\w*\\s*\\w*$", "exceptionStackTrace": null, "matches": ["0evil evil evil aaevil eVil", "0evil evil evil aaevil EVIL", "0evil evil evil aaevil ev_il", "0evil evil evil aaevil ev4il", "0evil evil evil aaevil e", "0evil evil evil aaevil  ", "0evil evil evil aaevil 6", "0evil evil evil aaevil _", "0evil evil evil aaevil ", "0evil evil evil aaevil  evil", "0evil evil evil aaevilevil", "0evil evil evil aaeVil evil", "0evil evil evil aaEVIL evil", "0evil evil evil aaev_il evil", "0evil evil evil aaev4il evil", "0evil evil evil aae evil", "0evil evil evil aa  evil", "0evil evil evil aa6 evil", "0evil evil evil aa_ evil", "0evil evil evil aa evil", "0evil evil evil aaaevil evil", "0evil evil evil aevil evil", "0evil evil evil _aevil evil", "0evil evil evil Aaevil evil", "0evil evil evil 0aevil evil", "0evil evil eVil aaevil evil", "0evil evil EVIL aaevil evil", "0evil evil ev_il aaevil evil", "0evil evil ev4il aaevil evil", "0evil evil e aaevil evil", "0evil evil 6 aaevil evil", "0evil evil _ aaevil evil", "0evil evilevil aaevil evil", "0evil eVil evil aaevil evil", "0evil EVIL evil aaevil evil", "0evil ev_il evil aaevil evil", "0evil ev4il evil aaevil evil", "0evil e evil aaevil evil", "0evil 6 evil aaevil evil", "0evil _ evil aaevil evil", "0evil  evil aaevil evil", "0eVil evil evil aaevil evil", "0EVIL evil evil aaevil evil", "0e evil evil aaevil evil", "06 evil evil aaevil evil", "0 evil evil aaevil evil", "00evil evil evil aaevil evil", "0 evil aa", "0evil evil evil aaevil evil"], "nonMatches": ["0evil evil evil aaevil ev il", "0evil evil evil aaev il evil", "0evil evil ev il aaevil evil", "0evil evil   aaevil evil", "0evil evil  aaevil evil", "0evil evil  evil aaevil evil", "0evil ev il evil aaevil evil", "0evil   evil aaevil evil", "0ev_il evil evil aaevil evil", "0ev il evil evil aaevil evil", "0ev4il evil evil aaevil evil", "0  evil evil aaevil evil", "0_ evil evil aaevil evil", "evil evil evil aaevil evil"]}, {"regex": "(?=^.{7,20}$)(?=.*\\d)(?=.*[a-zA-Z])(?!.*\\s)[0-9a-zA-Z*$-+?_&=!%{}/&#39;.]*$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["}", "{", "?", "=", ";", "/", ".", "-", "+", "*", "&", "%", "$", "#", "!", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"]}, {"regex": "[^]*\\[section\\][^\\[]*\\nkey=(.+)[^]*", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unterminated character set"}, "matches": []}, {"regex": "^([+]39)?\\s?((313)|(32[03789])|(33[013456789])|(34[0256789])|(36[0368])|(37[037])|(38[0389])|(39[0123]))[\\s-]?([\\d]{7})$", "exceptionStackTrace": null, "matches": ["+39 392-0000000", "+39 391-0000000", "+39 390-0000000", "+39 388-0000000", "+39 383-0000000", "+39 380-0000000", "+39 373-0000000", "+39 370-0000000", "+39 366-0000000", "+39 363-0000000", "+39 360-0000000", "+39 348-0000000", "+39 347-0000000", "+39 346-0000000", "+39 345-0000000", "+39 342-0000000", "+39 340-0000000", "+39 338-0000000", "+39 337-0000000", "+39 336-0000000", "+39 335-0000000", "+39 334-0000000", "+39 333-0000000", "+39 331-0000000", "+39 330-0000000", "+39 328-0000000", "+39 327-0000000", "+39 323-0000000", "+39 320-0000000", "+39 3130000000", "+39 313 0000000", "+39313-0000000", " 313-0000000", "3930000000", "3890000000", "3770000000", "3680000000", "3490000000", "3390000000", "3290000000", "3130000000", "+39 393-0000000", "+39 389-0000000", "+39 377-0000000", "+39 368-0000000", "+39 349-0000000", "+39 339-0000000", "+39 329-0000000", "+39 313-0000000"], "nonMatches": ["+39 394-0000000", "+39 381-0000000", "+39 371-0000000", "+39 361-0000000", "+39 341-0000000", "+39 332-0000000", "+39 321-0000000", "+39 313-00000000", "+39 313-000000", "+39 313--0000000", "+39  313-0000000", "+39+39 313-0000000"]}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "gtrhb", "exceptionStackTrace": null, "matches": ["gtrhb"], "nonMatches": []}, {"regex": "^(((((0[1-9])|(1\\d)|(2[0-8]))\\/((0[1-9])|(1[0-2])))|((31\\/((0[13578])|(1[02])))|((29|30)\\/((0[1,3-9])|(1[0-2])))))\\/((20[0-9][0-9])|(19[0-9][0-9])))|((29\\/02\\/(19|20)(([02468][048])|([13579][26]))))$", "exceptionStackTrace": null, "matches": ["29/02/1992", "29/02/1976", "29/02/1956", "29/02/1936", "29/02/1916", "29/02/1984", "29/02/1980", "29/02/1968", "29/02/1948", "29/02/1928", "29/02/1908", "29/03/2000", "31/10/2000", "31/07/2000", "31/05/2000", "31/03/2000", "31/01/2000", "29/01/2000", "29/02/2088", "29/02/1996", "29/02/1988", "30/0,/2000", "29/10/2000", "29/0,/2000", "31/12/2000", "31/08/2000", "20/01/2000", "10/01/2000", "01/10/2000", "01/01/1900", "01/01/2000"], "nonMatches": ["29/02/1990", "29/02/1906", "29/02/1981", "29/02/1918", "29/13/2000", "29/00/2000", "31/11/2000", "31/00/2000", "01/13/2000", "01/00/2000", "00/01/2000"]}, {"regex": "^(0|(-?(((0|[1-9]\\d*)\\.\\d+)|([1-9]\\d*))))$", "exceptionStackTrace": null, "matches": ["-100", "-1", "-100.0", "-1.0", "-0.00", "1", "1.0", "0.0", "-10", "-10.0", "-0.0", "0"], "nonMatches": ["-00", "-00.0", "-0.", "--0.0"]}, {"regex": "^\\d{5}(-\\d{4})?$", "exceptionStackTrace": null, "matches": ["00000", "00000-0000"], "nonMatches": ["00000-0000-0000", "00000-00000", "00000-000", "000000-0000", "0000-0000"]}, {"regex": "([0]{1}[6]{1}[-\\s]*([1-9]{1}[\\s]*){8})|([0]{1}[1-9]{1}[0-9]{1}[0-9]{1}[-\\s]*([1-9]{1}[\\s]*){6})|([0]{1}[1-9]{1}[0-9]{1}[-\\s]*([1-9]{1}[\\s]*){7})", "exceptionStackTrace": null, "matches": ["010-1 1 1 1 1 1 1 1 ", "010-1  1 1 1 1 1 1 ", "010-11 1 1 1 1 1 ", "010-11 1 1 1 1 1 1 ", "010--1 1 1 1 1 1 1 ", "0101 1 1 1 1 1 1 ", "010 1 1 1 1 1 1 1 ", "0110-1 1 1 1 1 1 1 ", "0010-1 1 1 1 1 1 1 ", "0100-1 1 1 1 1 1 1 ", "0100-1  1 1 1 1 1 ", "0100-11 1 1 1 1 ", "0100-11 1 1 1 1 1 ", "0100--1 1 1 1 1 1 ", "01001 1 1 1 1 1 ", "0100 1 1 1 1 1 1 ", "00100-1 1 1 1 1 1 ", "06-1 1 1 1 1 1 1 1 1 ", "06-1  1 1 1 1 1 1 1 ", "06-11 1 1 1 1 1 1 ", "06-11 1 1 1 1 1 1 1 ", "06--1 1 1 1 1 1 1 1 ", "061 1 1 1 1 1 1 1 ", "06 1 1 1 1 1 1 1 1 ", "066-1 1 1 1 1 1 1 1 ", "006-1 1 1 1 1 1 1 1 ", "01011 1 1 1 1 1 ", "010011 1 1 1 1 ", "0611 1 1 1 1 1 1 ", "010-1 1 1 1 1 1 1 ", "0100-1 1 1 1 1 1 ", "06-1 1 1 1 1 1 1 1 "], "nonMatches": ["010- 1 1 1 1 1 1 ", "010-0 1 1 1 1 1 1 ", "01-1 1 1 1 1 1 1 ", "00-1 1 1 1 1 1 1 ", "000-1 1 1 1 1 1 1 ", "10-1 1 1 1 1 1 1 ", "0100-1 1 1 1 1 ", "0100- 1 1 1 1 1 ", "0100-0 1 1 1 1 1 ", "01000-1 1 1 1 1 1 ", "010-1 1 1 1 1 1 ", "01100-1 1 1 1 1 1 ", "000-1 1 1 1 1 1 ", "0000-1 1 1 1 1 1 ", "100-1 1 1 1 1 1 ", "06-1 1 1 1 1 1 1 ", "06- 1 1 1 1 1 1 1 ", "06-0 1 1 1 1 1 1 1 ", "0-1 1 1 1 1 1 1 1 ", "6-1 1 1 1 1 1 1 1 "]}, {"regex": "\\d+,?\\d+\\$?", "exceptionStackTrace": null, "matches": ["0,0$$", "0,0", "0,00$", "00$", "00,0$", "00", "0,0$"], "nonMatches": ["0,$", "0,,0$", ",0$"]}, {"regex": "^(/w|/W|[^<>+?$%{}&])+$", "exceptionStackTrace": null, "matches": ["A", "0", "/", " ", "/w/w", "a", "/W", "/w"], "nonMatches": ["}", "{", "?", ">", "<", "+", "&", "%", "$", ""]}, {"regex": "\\b([A-CEGHJ-PR-TW-Z]{1}[A-CEGHJ-NPR-TW-Z]{1}(?<!BG|GB|NK|KN|TN|NT|ZZ))[0-9]{6}[A-DFM]{1}\\b", "exceptionStackTrace": null, "matches": ["HP000000F", "HP000000A", "HW000000M", "HR000000M", "HJ000000M", "HH000000M", "HG000000M", "HE000000M", "HA000000M", "WP000000M", "RP000000M", "JP000000M", "GP000000M", "EP000000M", "AP000000M", "HP000000M"], "nonMatches": ["HP000000MM", "HP000000", "HP000000E", "HP0000000M", "HP00000M", "HPP000000M", "H000000M", "HD000000M", "HHP000000M", "P000000M", "DP000000M"]}, {"regex": "^(((0[1-9]{1})|(1[0-2]{1}))\\/?(([0-2]{1}[1-9]{1})|(3[0-1]{1}))\\/?(([12]{1}[0-9]{1})?[0-9]{2}) ?(([01]{1}[0-9]{1})|(2[0-4]{1}))\\:?([0-5]{1}[0-9]{1}))$", "exceptionStackTrace": null, "matches": ["01/01/2000 1000", "01/01/2000 00:00", "01/01/200010:00", "01/01/00 10:00", "01/01/1000 10:00", "01/012000 10:00", "01/31/2000 10:00", "0101/2000 10:00", "1001001000", "0130001000", "0101002000", "0101001000", "10/01/2000 10:00", "01/30/2000 10:00", "01/01/2000 20:00", "01/01/2000 10:00"], "nonMatches": ["100/01/2000 10:00", "1/01/2000 10:00", "13/01/2000 10:00", "01/300/2000 10:00", "01/3/2000 10:00", "01/32/2000 10:00", "01/01/2000 200:00", "01/01/2000 2:00", "01/01/2000 25:00", "01/01/2000 10:000", "01/01/2000 10:0", "01/01/2000 10:60", "01/01/2000 10::00", "01/01/2000 100:00", "01/01/2000 1:00", "01/01/2000 110:00", "01/01/2000 0:00", "01/01/2000  10:00", "01/01/202000 10:00", "01/01/20000 10:00", "01/01/200 10:00", "01/01/22000 10:00", "01/01/000 10:00", "01/01/0000 10:00", "01/01//2000 10:00", "01/011/2000 10:00", "01/0/2000 10:00", "01/00/2000 10:00", "01/001/2000 10:00", "01/1/2000 10:00", "01//01/2000 10:00", "011/01/2000 10:00", "0/01/2000 10:00", "00/01/2000 10:00"]}, {"regex": "((\\(\\d{3}\\) ?)|(\\d{3}[- \\.]))?\\d{3}[- \\.]\\d{4}(\\s(x\\d+)?){0,1}$", "exceptionStackTrace": null, "matches": ["000-000.0000 x0", "000 000.0000 x0", "0000.000.0000 x0", "00.000.0000 x0", "(000) 000.0000", "(000) 000.0000 ", "(000) 000.0000 x00", "(000) 000-0000 x0", "(000) 000 0000 x0", "(000) 0000.0000 x0", "(000) (000) 000.0000 x0", "000.0000 x0", "(000)  000.0000 x0", "(000)000.0000 x0", "(0000) 000.0000 x0", "(00) 000.0000 x0", "000.0000", "000.000.0000 x0", "(000) 000.0000 x0"], "nonMatches": ["(000) 000.0000 x0 x0", "(000) 000.0000 x0x0", "(000) 000.0000 x", "(000) 000.00000 x0", "(000) 000.000 x0", "(000) 00.0000 x0"]}, {"regex": "\\d{3}-\\d{6}", "exceptionStackTrace": null, "matches": ["000-0000000", "0000-000000", "000-000000"], "nonMatches": ["000-00000", "00-000000"]}, {"regex": "^((?:(?:(?:[a-zA-Z0-9][\\.\\-\\+_]?)*)[a-zA-Z0-9])+)\\@((?:(?:(?:[a-zA-Z0-9][\\.\\-_]?){0,62})[a-zA-Z0-9])+)\\.([a-zA-Z0-9]{2,6})$", "exceptionStackTrace": null, "matches": ["0_0@0_0.000000", "0_0@0_0.a0", "0_0@0_0.A0", "0_0@0_00_0.00", "0_0@0_a.00", "0_0@0_A.00", "0_0@0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0.00", "0_0@0.00", "0_0@00.00", "0_0@0.0.00", "0_0@0-0.00", "0_0@a_0.00", "0_0@A_0.00", "0_00_0@0_0.00", "0_a@0_0.00", "0_A@0_0.00", "0_0_0@0_0.00", "0@0_0.00", "00@0_0.00", "0.0@0_0.00", "0-0@0_0.00", "0+0@0_0.00", "a_0@0_0.00", "A_0@0_0.00", "0@0.00", "0_0@0_0.00"], "nonMatches": ["0_0@0_0.0000000", "0_0@0_0.0", "0_0@.00", "0_0@0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0.00", "0_0@0__0.00", "@0_0.00", "0__0@0_0.00"]}, {"regex": "^((?:(?:(?:\\w[\\.\\-\\+]?)*)\\w)+)\\@((?:(?:(?:\\w[\\.\\-\\+]?){0,62})\\w)+)\\.(\\w{2,6})$", "exceptionStackTrace": null, "matches": ["a+a@a+a.aaaaaa", "a+a@a+a._a", "a+a@a+a.Aa", "a+a@a+a.0a", "a+a@a+aa+a.aa", "a+a@a+_.aa", "a+a@a+A.aa", "a+a@a+0.aa", "a+a@a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a.aa", "a+a@a.aa", "a+a@aa.aa", "a+a@a.a.aa", "a+a@a-a.aa", "a+a@_+a.aa", "a+a@A+a.aa", "a+a@0+a.aa", "a+aa+a@a+a.aa", "a+_@a+a.aa", "a+A@a+a.aa", "a+0@a+a.aa", "a+a+a@a+a.aa", "a@a+a.aa", "aa@a+a.aa", "a.a@a+a.aa", "a-a@a+a.aa", "_+a@a+a.aa", "A+a@a+a.aa", "0+a@a+a.aa", "a@a.aa", "a+a@a+a.aa"], "nonMatches": ["a+a@a+a.aaaaaaa", "a+a@a+a.a", "a+a@.aa", "a+a@a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a.aa", "a+a@a++a.aa", "@a+a.aa", "a++a@a+a.aa"]}, {"regex": "^(([a-zA-Z]{3})?([0-9]{4}))$", "exceptionStackTrace": null, "matches": ["aAA0000", "0000", "AAA0000"], "nonMatches": ["AAA00000", "AAA000", "AAAAAA0000", "AAAA0000", "AA0000"]}, {"regex": "\\[link=&quot;(?<link>((.|\\n)*?))&quot;\\](?<text>((.|\\n)*?))\\[\\/link\\]", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "BaeCoupe", "exceptionStackTrace": null, "matches": ["BaeCoupe"], "nonMatches": []}, {"regex": "^(((((0[13578])|([13578])|(1[02]))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9])|(30)))|((02|2)[\\-\\/\\s]?((0[1-9])|([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s(((0[1-9])|([1-9])|(1[0-2]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$", "exceptionStackTrace": null, "matches": ["0201/0000 01:00 mm", "02-01/0000 01:00 mm", "02 01/0000 01:00 mm", "901/0000 01:00 mm", "9-01/0000 01:00 mm", "9 01/0000 01:00 mm", "6/01/0000 01:00 mm", "4/01/0000 01:00 mm", "10/01/0000 01:00 mm", "7/01/0000 01:00 mm", "5/01/0000 01:00 mm", "3/01/0000 01:00 mm", "1/01/0000 01:00 mm", "08/30/0000 01:00 mm", "08/01/0000", "08/01/0000 01:00 |m", "08/01/0000 01:00 pm", "08/01/0000 01:00 am", "08/01/0000 01:00 Pm", "08/01/0000 01:00 Mm", "08/01/0000 01:00 Am", "08/010000 01:00 mm", "08/01-0000 01:00 mm", "08/01 0000 01:00 mm", "0801/0000 01:00 mm", "08-01/0000 01:00 mm", "08 01/0000 01:00 mm", "07/01/0000 01:00 mm", "05/01/0000 01:00 mm", "03/01/0000 01:00 mm", "01/01/0000 01:00 mm", "2010000", "02100000", "0210000", "02010000", "11010000", "9300000", "9100000", "910000", "9010000", "12010000", "8010000", "08310000", "08100000", "0810000", "08010000", "2/01/0000 01:00 mm", "02/10/0000 01:00 mm", "02/1/0000 01:00 mm", "02/01/0000 01:00 mm", "11/01/0000 01:00 mm", "9/30/0000 01:00 mm", "9/10/0000 01:00 mm", "9/1/0000 01:00 mm", "9/01/0000 01:00 mm", "12/01/0000 01:00 mm", "8/01/0000 01:00 mm", "08/31/0000 01:00 mm", "08/10/0000 01:00 mm", "08/1/0000 01:00 mm", "08/01/0000 10:00 mm", "08/01/0000 1:00 mm", "08/01/0000 01:00:00 mm", "08/01/0000 01:00 mm"], "nonMatches": ["02/0/0000 01:00 mm", "02/00/0000 01:00 mm", "02//01/0000 01:00 mm", "9/0/0000 01:00 mm", "9/00/0000 01:00 mm", "9//01/0000 01:00 mm", "0/01/0000 01:00 mm", "08/32/0000 01:00 mm", "08/0/0000 01:00 mm", "08/01/0000 13:00 mm", "08/01/0000 0:00 mm", "08/01/0000 01:00:60 mm", "08/01/0000 01:00 mm 01:00 mm", "08/01/0000 01:00 mmm", "08/01/0000 01:00 m", "08/01/0000 01:00 bm", "08/01/0000 01:00 Bm", "08/01/0000 01:60 mm", "08/01/0000 00:00 mm", "08/01/00000 01:00 mm", "08/01/000 01:00 mm", "08/01//0000 01:00 mm", "08/00/0000 01:00 mm", "08//01/0000 01:00 mm", "00/01/0000 01:00 mm"]}, {"regex": "(\\w+([-+.&#39;]\\w+)*@(gmail.com))", "exceptionStackTrace": null, "matches": ["evil;evil@gmailAcom", "evil;evil@gmail@com", "evil;evil@gmail;com", "evil;evil@gmail0com", "evil;evil@gmail.com", "evil;evil@gmail-com", "evil;evil@gmail+com", "evil;evil@gmail&com", "evil;evil@gmail#com", "evil;evil@gmail com", "evil;evil;evil@gmailacom", "evil;eVil@gmailacom", "evil;EVIL@gmailacom", "evil;ev_il@gmailacom", "evil;ev il@gmailacom", "evil;ev4il@gmailacom", "evil;e@gmailacom", "evil;6@gmailacom", "evil;_@gmailacom", "evil9evil@gmailacom", "evil3evil@gmailacom", "evil0evil@gmailacom", "evil.evil@gmailacom", "evil-evil@gmailacom", "evil+evil@gmailacom", "evil&evil@gmailacom", "evil#evil@gmailacom", "eVil;evil@gmailacom", "EVIL;evil@gmailacom", "ev_il;evil@gmailacom", "ev il;evil@gmailacom", "ev4il;evil@gmailacom", "e;evil@gmailacom", " ;evil@gmailacom", "6;evil@gmailacom", "_;evil@gmailacom", ";evil@gmailacom", "evil@gmailacom", "evil;evil@gmailacom"], "nonMatches": ["evil; @gmailacom", "evil;@gmailacom"]}, {"regex": "^([0]?\\d|1\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$", "exceptionStackTrace": null, "matches": ["0:00:00", "20:00:00", "10:00:00", "00:00:00"], "nonMatches": ["24:00:00", "00:00:60", "00:60:00", "000:00:00"]}, {"regex": "(((ftp|http|https):\\/\\/)|(\\w+:{0,1}\\w*@))?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?", "exceptionStackTrace": null, "matches": ["evil:eVil@evil:0/", "evil:EVIL@evil:0/", "evil:ev_il@evil:0/", "evil:ev il@evil:0/", "evil:ev4il@evil:0/", "evil:e@evil:0/", "evil: @evil:0/", "evil:6@evil:0/", "evil:_@evil:0/", "evil:@evil:0/", "evil::evil@evil:0/", "evilevil@evil:0/", "eVil:evil@evil:0/", "EVIL:evil@evil:0/", "ev_il:evil@evil:0/", "ev il:evil@evil:0/", "ev4il:evil@evil:0/", "e:evil@evil:0/", " :evil@evil:0/", "6:evil@evil:0/", "_:evil@evil:0/", ":evil@evil:0/", "ftp://evil:0/a", "ftp://evil:0/_", "ftp://evil:0/A", "ftp://evil:0/@", "ftp://evil:0/?", "ftp://evil:0/=", "ftp://evil:0/:", "ftp://evil:0/0", "ftp://evil:0/.", "ftp://evil:0/-", "ftp://evil:0/+", "ftp://evil:0/&", "ftp://evil:0/%", "ftp://evil:0/#", "ftp://evil:0/!", "ftp://evil:0", "ftp://evil:0:0/", "ftp://evil/", "ftp://evil:00/", "ftp://evil:/", "ftp://@:0/", "ftp://?:0/", "ftp://=:0/", "ftp://::0/", "ftp:///:0/", "ftp://.:0/", "ftp://-:0/", "ftp://+:0/", "ftp://&:0/", "ftp://%:0/", "ftp://#:0/", "ftp://!:0/", "ftp://eVil:0/", "ftp://EVIL:0/", "ftp://ev_il:0/", "ftp://ev il:0/", "ftp://ev4il:0/", "ftp://e:0/", "ftp:// :0/", "ftp://6:0/", "ftp://_:0/", "ftp://:0/", "ftp://ftp://evil:0/", "evil:0/", "evil", "evil:evil@evil:0/", "https://evil:0/", "http://evil:0/", "ftp://evil:0//", "ftp://evil:0/"], "nonMatches": []}, {"regex": "(?<dice>\\d*)(?<dsides>(?<separator>[\\d\\D])(?<sides>\\d+))(?<modifier>(?<sign>[\\+\\-])(?<addend>\\d))?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "^([0])([1])([1,2,3,4,6,7,8,9])([0-9][0-9][0-9][0-9][0-9][0-9][0-9])", "exceptionStackTrace": null, "matches": ["0180000000", "0170000000", "0160000000", "0140000000", "0130000000", "0120000000", "0110000000", "01,0000000", "0190000000"], "nonMatches": ["0100000000"]}, {"regex": "^01[1,2,3,4,6,7,8,9]\\d{7,8}$", "exceptionStackTrace": null, "matches": ["01900000000", "0180000000", "0170000000", "0160000000", "0140000000", "0130000000", "0120000000", "0110000000", "01,0000000", "0190000000"], "nonMatches": ["019000000000", "019000000", "0100000000"]}, {"regex": "&#39;(?<document>.*)&#39;\\)(?<path>.*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "^(?=\\d)(?:(?:31(?!.(?:0?[2469]|11))|(?:30|29)(?!.0?2)|29(?=.0?2.(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(?:\\x20|$))|(?:2[0-8]|1\\d|0?[1-9]))([-./])(?:1[012]|0?[1-9])\\1(?:1[6-9]|[2-9]\\d)?\\d\\d)?(\\x20?((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\x20[AP]M))|([01]\\d|2[0-3])(:[0-5]\\d){1,2})?$", "exceptionStackTrace": null, "matches": ["1/12/1600 01:00 PM", "31/1/1600 01:00 PM", "31/12/160010:00:00", "31/12/160000:00", "31/12/1600 11:00 PM", "31/12/1600 10:00 PM", "31/12/1600", "31/12/1600 01:00 AM", "31/12/1600 01:00:00 PM", "31/12/1600 01 PM", "31/12/1600 1:00 PM", "31/12/160001:00 PM", "31/12/00 01:00 PM", "31/10/1600 01:00 PM", "01/12/1600 01:00 PM", "10/12/1600 01:00 PM", "20/12/1600 01:00 PM", "29/12/1600 01:00 PM", "30/12/1600 01:00 PM", "31/01/1600 01:00 PM", "31/12/2000 01:00 PM", "31/12/160020:00", "31/12/160010:00", "31/12/1600 12:00 PM", "31/12/1600 01:00 PM"], "nonMatches": ["00/12/1600 01:00 PM", "001/12/1600 01:00 PM", "31/00/1600 01:00 PM", "31/001/1600 01:00 PM", "31/12/0000 01:00 PM", "31/12/160024:00", "31/12/160010:00:00:00", "31/12/160010", "31/12/160010:60", "31/12/1600 13:00 PM", "31/12/1600 01:00 PM 01:00 PM", "31/12/1600 01:00 BM", "31/12/1600 01:00:00:00 PM", "31/12/1600 01:60 PM", "31/12/1600 00:00 PM", "31/12/1600 001:00 PM", "31/12/1600  01:00 PM", "31/12/160031/12/1600 01:00 PM", " 01:00 PM", "31/12/161600 01:00 PM", "31/12/1000 01:00 PM", "31/13/1600 01:00 PM", "31/11/1600 01:00 PM", "31.12/1600 01:00 PM", "31-12/1600 01:00 PM", ""]}, {"regex": "^([A-Z|a-z]{2}-\\d{2}-[A-Z|a-z]{2}-\\d{1,4})?([A-Z|a-z]{3}-\\d{1,4})?$", "exceptionStackTrace": null, "matches": ["||-00-||-0", "||-00-||-0|||-0000", "||-00-||-0a||-0", "||-00-||-0A||-0", "|||-0", "||-00-||-0000|||-0", "||-00-a|-0|||-0", "||-00-A|-0|||-0", "a|-00-||-0|||-0", "A|-00-||-0|||-0", "", "||-00-||-0|||-0"], "nonMatches": ["||-00-||-0|||-0|||-0", "||-00-||-0|||-00000", "||-00-||-0|||-", "||-00-||-0||||-0", "||-00-||-0||-0", "||-00-||-0||-00-||-0|||-0", "||-00-||-00000|||-0", "||-00-||-|||-0", "||-00-|||-0|||-0", "||-00-|-0|||-0", "||-000-||-0|||-0", "||-0-||-0|||-0", "|||-00-||-0|||-0", "|-00-||-0|||-0"]}, {"regex": "<a[a-zA-Z0-9 =&quot;&#39;.:;?]*(href=[\\&quot;\\&#39;](http:\\/\\/|\\.\\/|\\/)?\\w+(\\.\\w+)*(\\/\\w+(\\.\\w+)?)*(\\/|\\?\\w*=\\w*(&\\w*=\\w*)*)?[\\&quot;\\&#39;])*(>[a-zA-Z0-9 =&quot;&#39;<>.:;?]*</a>)", "exceptionStackTrace": null, "matches": ["<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=eVil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=EVIL;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=ev_il;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=ev4il;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=e;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=6;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=_;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&eVil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&EVIL=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&ev_il=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&ev4il=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&e=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&6=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&_=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=eVil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=EVIL&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=ev_il&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=ev4il&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=e&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=6&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=_&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?eVil=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?EVIL=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?ev_il=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?ev4il=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?e=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?6=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?_=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/;>?</a>", "<aevilhref=;http://evil.evil/evil.evil/;>></a>", "<aevilhref=;http://evil.evil/evil.evil/;>=</a>", "<aevilhref=;http://evil.evil/evil.evil/;><</a>", "<aevilhref=;http://evil.evil/evil.evil/;>;</a>", "<aevilhref=;http://evil.evil/evil.evil/;>:</a>", "<aevilhref=;http://evil.evil/evil.evil/;>.</a>", "<aevilhref=;http://evil.evil/evil.evil/;>&</a>", "<aevilhref=;http://evil.evil/evil.evil/;>#</a>", "<aevilhref=;http://evil.evil/evil.evil/;>eVil</a>", "<aevilhref=;http://evil.evil/evil.evil/;>EVIL</a>", "<aevilhref=;http://evil.evil/evil.evil/;>ev il</a>", "<aevilhref=;http://evil.evil/evil.evil/;>ev4il</a>", "<aevilhref=;http://evil.evil/evil.evil/;>e</a>", "<aevilhref=;http://evil.evil/evil.evil/;> </a>", "<aevilhref=;http://evil.evil/evil.evil/;>6</a>", "<aevilhref=;http://evil.evil/evil.evil/;></a>", "<aevilhref=;http://evil.evil/evil.evil/;href=;http://evil.evil/evil.evil/;>evil</a>", "<aevil>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/u>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/t>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/q>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/o>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/9>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/3>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/&>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/#>evil</a>", "<aevilhref=;http://evil.evil/evil.evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/evil.evil/;>evil</a>", "<aevilhref=;http://evil.evil/;>evil</a>", "<aevilhref=;http://evil.evil/evil/;>evil</a>", "<aevilhref=;http://evil.evil/evil.eVil/;>evil</a>", "<aevilhref=;http://evil.evil/evil.EVIL/;>evil</a>", "<aevilhref=;http://evil.evil/evil.ev_il/;>evil</a>", "<aevilhref=;http://evil.evil/evil.ev4il/;>evil</a>", "<aevilhref=;http://evil.evil/evil.e/;>evil</a>", "<aevilhref=;http://evil.evil/evil.6/;>evil</a>", "<aevilhref=;http://evil.evil/evil._/;>evil</a>", "<aevilhref=;http://evil.evil/eVil.evil/;>evil</a>", "<aevilhref=;http://evil.evil/EVIL.evil/;>evil</a>", "<aevilhref=;http://evil.evil/ev_il.evil/;>evil</a>", "<aevilhref=;http://evil.evil/ev4il.evil/;>evil</a>", "<aevilhref=;http://evil.evil/e.evil/;>evil</a>", "<aevilhref=;http://evil.evil/6.evil/;>evil</a>", "<aevilhref=;http://evil.evil/_.evil/;>evil</a>", "<aevilhref=;http://evil.evil.evil/evil.evil/;>evil</a>", "<aevilhref=;http://evil/evil.evil/;>evil</a>", "<aevilhref=;http://evil.eVil/evil.evil/;>evil</a>", "<aevilhref=;http://evil.EVIL/evil.evil/;>evil</a>", "<aevilhref=;http://evil.ev_il/evil.evil/;>evil</a>", "<aevilhref=;http://evil.ev4il/evil.evil/;>evil</a>", "<aevilhref=;http://evil.e/evil.evil/;>evil</a>", "<aevilhref=;http://evil.6/evil.evil/;>evil</a>", "<aevilhref=;http://evil._/evil.evil/;>evil</a>", "<aevilhref=;http://eVil.evil/evil.evil/;>evil</a>", "<aevilhref=;http://EVIL.evil/evil.evil/;>evil</a>", "<aevilhref=;http://ev_il.evil/evil.evil/;>evil</a>", "<aevilhref=;http://ev4il.evil/evil.evil/;>evil</a>", "<aevilhref=;http://e.evil/evil.evil/;>evil</a>", "<aevilhref=;http://6.evil/evil.evil/;>evil</a>", "<aevilhref=;http://_.evil/evil.evil/;>evil</a>", "<aevilhref=;evil.evil/evil.evil/;>evil</a>", "<aevilhref=uhttp://evil.evil/evil.evil/;>evil</a>", "<aevilhref=thttp://evil.evil/evil.evil/;>evil</a>", "<aevilhref=qhttp://evil.evil/evil.evil/;>evil</a>", "<aevilhref=ohttp://evil.evil/evil.evil/;>evil</a>", "<aevilhref=9http://evil.evil/evil.evil/;>evil</a>", "<aevilhref=3http://evil.evil/evil.evil/;>evil</a>", "<aevilhref=&http://evil.evil/evil.evil/;>evil</a>", "<aevilhref=#http://evil.evil/evil.evil/;>evil</a>", "<a?href=;http://evil.evil/evil.evil/;>evil</a>", "<a=href=;http://evil.evil/evil.evil/;>evil</a>", "<a;href=;http://evil.evil/evil.evil/;>evil</a>", "<a:href=;http://evil.evil/evil.evil/;>evil</a>", "<a.href=;http://evil.evil/evil.evil/;>evil</a>", "<a&href=;http://evil.evil/evil.evil/;>evil</a>", "<a#href=;http://evil.evil/evil.evil/;>evil</a>", "<aeVilhref=;http://evil.evil/evil.evil/;>evil</a>", "<aEVILhref=;http://evil.evil/evil.evil/;>evil</a>", "<aev ilhref=;http://evil.evil/evil.evil/;>evil</a>", "<aev4ilhref=;http://evil.evil/evil.evil/;>evil</a>", "<aehref=;http://evil.evil/evil.evil/;>evil</a>", "<a href=;http://evil.evil/evil.evil/;>evil</a>", "<a6href=;http://evil.evil/evil.evil/;>evil</a>", "<ahref=;http://evil.evil/evil.evil/;>evil</a>", "<a></a>", "<aevilhref=;/evil.evil/evil.evil/;>evil</a>", "<aevilhref=;./evil.evil/evil.evil/;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/;>evil</a>"], "nonMatches": ["<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil=ev il;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&evil= ;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil&ev il=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=evil& =evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil=ev il&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?evil= &evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil?ev il=evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil? =evil&evil=evil;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/;>/</a>", "<aevilhref=;http://evil.evil/evil.evil/;>ev_il</a>", "<aevilhref=;http://evil.evil/evil.evil/;>_</a>", "<aevilhref=;http://evil.evil/evil.evil/a>evil</a>", "<aevilhref=;http://evil.evil/evil.evil/0>evil</a>", "<aevilhref=;http://evil.evil/evil.evil//;>evil</a>", "<aevilhref=;http://evil.evil/evil.evil.evil/;>evil</a>", "<aevilhref=;http://evil.evil/evil.ev il/;>evil</a>", "<aevilhref=;http://evil.evil/evil. /;>evil</a>", "<aevilhref=;http://evil.evil/evil./;>evil</a>", "<aevilhref=;http://evil.evil/ev il.evil/;>evil</a>", "<aevilhref=;http://evil.evil/ .evil/;>evil</a>", "<aevilhref=;http://evil.evil/.evil/;>evil</a>", "<aevilhref=;http://evil.ev il/evil.evil/;>evil</a>", "<aevilhref=;http://evil. /evil.evil/;>evil</a>", "<aevilhref=;http://evil./evil.evil/;>evil</a>", "<aevilhref=;http://ev il.evil/evil.evil/;>evil</a>", "<aevilhref=;http:// .evil/evil.evil/;>evil</a>", "<aevilhref=;http://.evil/evil.evil/;>evil</a>", "<aevilhref=;http://http://evil.evil/evil.evil/;>evil</a>", "<aevilhref=ahttp://evil.evil/evil.evil/;>evil</a>", "<aevilhref=0http://evil.evil/evil.evil/;>evil</a>", "<a>href=;http://evil.evil/evil.evil/;>evil</a>", "<a<href=;http://evil.evil/evil.evil/;>evil</a>", "<a/href=;http://evil.evil/evil.evil/;>evil</a>", "<aev_ilhref=;http://evil.evil/evil.evil/;>evil</a>", "<a_href=;http://evil.evil/evil.evil/;>evil</a>"]}, {"regex": "&lt;a [a-zA-Z0-9 =&quot;&#39;.:;?]*href=*[a-zA-Z0-9 =&quot;&#39;.:;&gt;?]*[^&gt;]*&gt;([a-zA-Z0-9 =&quot;&#39;.:;&gt;?]*[^&lt;]*&lt;)\\s*/a\\s*&gt;", "exceptionStackTrace": null, "matches": ["&lt;a evilhref=evilevil&gt;evilevil&lt; /a  &gt;", "&lt;a evilhref=evilevil&gt;evilevil&lt; /a&gt;", "&lt;a evilhref=evilevil&gt;evilevil&lt;  /a &gt;", "&lt;a evilhref=evilevil&gt;evilevil&lt;/a &gt;", "&lt;a evilhref=evilevil&gt;evil?&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil=&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil;&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil:&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil/&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil.&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil&&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil#&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evileVil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evilEVIL&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evilev il&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evilev4il&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evile&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil &lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil6&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil_&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;?evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;=evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;;evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;:evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;.evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;&evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;#evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;eVilevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;EVILevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;ev ilevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;ev4ilevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;eevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt; evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;6evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;evil&lt; /a &gt;", "&lt;a evilhref=evil?&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil=&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil;&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil:&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil/&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil.&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil&&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil#&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evileVil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evilEVIL&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evilev_il&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evilev il&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evilev4il&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evile&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil &gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil6&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil_&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=?evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref==evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=;evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=:evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=/evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=.evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=&evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=#evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=eVilevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=EVILevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=ev_ilevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=ev ilevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=ev4ilevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=eevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref= evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=6evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=_evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref=evil&gt;evilevil&lt; /a &gt;", "&lt;a evilhref==evilevil&gt;evilevil&lt; /a &gt;", "&lt;a evilhrefevilevil&gt;evilevil&lt; /a &gt;", "&lt;a ?href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a =href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a ;href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a :href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a .href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a &href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a #href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a eVilhref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a EVILhref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a ev ilhref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a ev4ilhref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a ehref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a  href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a 6href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a href&gt;&lt;/a&gt;", "&lt;a evilhref=evilevil&gt;evilevil&lt; /a &gt;"], "nonMatches": ["&lt;a evilhref=evilevil&gt;evilev_il&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;/evil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;ev_ilevil&lt; /a &gt;", "&lt;a evilhref=evilevil&gt;_evil&lt; /a &gt;", "&lt;a /href=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a ev_ilhref=evilevil&gt;evilevil&lt; /a &gt;", "&lt;a _href=evilevil&gt;evilevil&lt; /a &gt;"]}, {"regex": "&lt;a.*?href=(.*?)(?((?:\\s.*?)&gt;.*?&lt;/a&gt;)(?:(?:\\s.*?)&gt;(.*?)&lt;/a&gt;)|(?:&gt;(.*?)&lt;/a&gt;))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character in group name '(?:\\\\s.*?'"}, "matches": []}, {"regex": "^[0-9]*(\\.)?[0-9]+$", "exceptionStackTrace": null, "matches": ["0.00", "00", "00.0", ".0", "0", "0.0"], "nonMatches": ["0.", "0..0"]}, {"regex": "^[a-zA-Z0-9]+$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev4il", "e", "6", "evil"], "nonMatches": ["ev_il", "ev il", " ", "_", ""]}, {"regex": "^([A-Z|a-z]{2}\\s{1}\\d{2}\\s{1}[A-Z|a-z]{1,2}\\s{1}\\d{1,4})?([A-Z|a-z]{3}\\s{1}\\d{1,4})?$", "exceptionStackTrace": null, "matches": ["|| 00 | 0", "|| 00 | 0||| 0000", "|| 00 | 0a|| 0", "|| 00 | 0A|| 0", "||| 0", "|| 00 | 0000||| 0", "|| 00 || 0||| 0", "|| 00 a 0||| 0", "|| 00 A 0||| 0", "a| 00 | 0||| 0", "A| 00 | 0||| 0", "", "|| 00 | 0||| 0"], "nonMatches": ["|| 00 | 0||| 0||| 0", "|| 00 | 0||| 00000", "|| 00 | 0||| ", "|| 00 | 0|||  0", "|| 00 | 0|||0", "|| 00 | 0|||| 0", "|| 00 | 0|| 0", "|| 00 | 0|| 00 | 0||| 0", "|| 00 | 00000||| 0", "|| 00 | ||| 0", "|| 00 |  0||| 0", "|| 00 |0||| 0", "|| 00 ||| 0||| 0", "|| 00  0||| 0", "|| 00  | 0||| 0", "|| 00| 0||| 0", "|| 000 | 0||| 0", "|| 0 | 0||| 0", "||  00 | 0||| 0", "||00 | 0||| 0", "||| 00 | 0||| 0", "| 00 | 0||| 0"]}, {"regex": "\\A[^,&quot;]*(?=,)|(?:[^&quot;,]*&quot;[^&quot;]*&quot;[^&quot;,]*)+|[^&quot;,]*&quot;[^&quot;]*\\Z|(?<=,)[^,]*(?=,)|(?<=,)[^,]*\\Z|\\A[^,]*\\Z", "exceptionStackTrace": null, "matches": ["evil&quot;;", "evil&quot;,", "evil&quot;&", "evil&quot;eVil", "evil&quot;EVIL", "evil&quot;ev_il", "evil&quot;ev il", "evil&quot;ev4il", "evil&quot;e", "evil&quot; ", "evil&quot;6", "evil&quot;_", "evil&quot;", ";&quot;evil", ",&quot;evil", "&&quot;evil", "eVil&quot;evil", "EVIL&quot;evil", "ev_il&quot;evil", "ev il&quot;evil", "ev4il&quot;evil", "e&quot;evil", " &quot;evil", "6&quot;evil", "_&quot;evil", "&quot;evil", "evil&quot;evil&quot;evilevil&quot;evil&quot;evil", "evil&quot;evil&quot;;", "evil&quot;evil&quot;,", "evil&quot;evil&quot;&", "evil&quot;evil&quot;eVil", "evil&quot;evil&quot;EVIL", "evil&quot;evil&quot;ev_il", "evil&quot;evil&quot;ev il", "evil&quot;evil&quot;ev4il", "evil&quot;evil&quot;e", "evil&quot;evil&quot; ", "evil&quot;evil&quot;6", "evil&quot;evil&quot;_", "evil&quot;evil&quot;", "evil&quot;;&quot;evil", "evil&quot;,&quot;evil", "evil&quot;&&quot;evil", "evil&quot;eVil&quot;evil", "evil&quot;EVIL&quot;evil", "evil&quot;ev_il&quot;evil", "evil&quot;ev il&quot;evil", "evil&quot;ev4il&quot;evil", "evil&quot;e&quot;evil", "evil&quot; &quot;evil", "evil&quot;6&quot;evil", "evil&quot;_&quot;evil", "evil&quot;&quot;evil", ";&quot;evil&quot;evil", ",&quot;evil&quot;evil", "&&quot;evil&quot;evil", "eVil&quot;evil&quot;evil", "EVIL&quot;evil&quot;evil", "ev_il&quot;evil&quot;evil", "ev il&quot;evil&quot;evil", "ev4il&quot;evil&quot;evil", "e&quot;evil&quot;evil", " &quot;evil&quot;evil", "6&quot;evil&quot;evil", "_&quot;evil&quot;evil", "&quot;evil&quot;evil", ";", ",", "&", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "&quot;", "&quot;&quot;", "", "evil&quot;evil", "evil&quot;evil&quot;evil", "evil"], "nonMatches": []}, {"regex": "(\\d{5})[-.$_ +]?(\\d{7})[-.$_ +]?(\\d{1})", "exceptionStackTrace": null, "matches": ["00000+0000000+00", "00000+00000000", "00000+0000000_0", "00000+0000000.0", "00000+0000000-0", "00000+0000000$0", "00000+0000000 0", "00000+00000000+0", "000000000000+0", "00000_0000000+0", "00000.0000000+0", "00000-0000000+0", "00000$0000000+0", "00000 0000000+0", "000000+0000000+0", "0000000000000", "00000+0000000+0"], "nonMatches": ["00000+0000000+", "00000+0000000++0", "00000+000000+0", "00000++0000000+0", "0000+0000000+0"]}, {"regex": "^[1]$|^[3]$|^[4]$|^[6]$|^[1]0$", "exceptionStackTrace": null, "matches": ["10", "6", "4", "3", "1"], "nonMatches": []}, {"regex": "^[A]$|^[C]$|^[D]$|^[F]$|^[H]$|^[K]$|^[L]$|^[M]$|^[O]$|^[P]$", "exceptionStackTrace": null, "matches": ["P", "O", "M", "L", "K", "H", "F", "D", "C", "A"], "nonMatches": []}, {"regex": "^(?i:([a-z])\\1?(?!\\1)){2,}$", "exceptionStackTrace": null, "matches": [], "nonMatches": [""]}, {"regex": "(?=^.{8,}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)[0-9a-zA-Z!@#$%^&*()]*$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["^", "@", "*", ")", "(", "&", "%", "$", "#", "!", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"]}, {"regex": "^(?:(?&#39;1&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;2&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;3&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;4&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;5&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;6&#39;[0-9a-fA-F]{2}))$|^(?:(?&#39;1&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;2&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;3&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;4&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;5&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;6&#39;[0-9a-fA-F]{2}))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "(?:(?&#39;1&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;2&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;3&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;4&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;5&#39;[0-9a-fA-F]{2})(?:\\:)(?&#39;6&#39;[0-9a-fA-F]{2}))|(?:(?&#39;1&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;2&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;3&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;4&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;5&#39;[0-9a-fA-F]{2})(?:\\-)(?&#39;6&#39;[0-9a-fA-F]{2}))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^[0-9,+,(), ,]{1,}(,[0-9]+){0,}$", "exceptionStackTrace": null, "matches": [",,0,0", ",,00", ",,", ",,,0", ",0", "0,0", "+,0", "),0", "(,0", " ,0", ",", ",,0"], "nonMatches": []}, {"regex": "^[a-zA-Z][a-zA-Z0-9_]+$", "exceptionStackTrace": null, "matches": ["AeVil", "AEVIL", "Aev_il", "Aev4il", "Ae", "A6", "A_", "aevil", "Aevil"], "nonMatches": ["Aev il", "A ", "A"]}, {"regex": "^(http(s?)\\:\\/\\/)*[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\&#39;\\/\\\\\\+&amp;%\\$#_]*)?$", "exceptionStackTrace": null, "matches": ["https://AevilA:0-9/evilevil", "https://AevilA:0-9/\\", "https://AevilA:0-9/?", "https://AevilA:0-9/;", "https://AevilA:0-9//", "https://AevilA:0-9/.", "https://AevilA:0-9/-", "https://AevilA:0-9/,", "https://AevilA:0-9/+", "https://AevilA:0-9/&", "https://AevilA:0-9/%", "https://AevilA:0-9/$", "https://AevilA:0-9/#", "https://AevilA:0-9/eVil", "https://AevilA:0-9/EVIL", "https://AevilA:0-9/ev_il", "https://AevilA:0-9/ev4il", "https://AevilA:0-9/e", "https://AevilA:0-9/6", "https://AevilA:0-9/_", "https://AevilA:0-9/", "https://AevilA:0-9//evil", "https://AevilA:0-9evil", "https://AevilA:0-9:0-9/evil", "https://AevilA/evil", "https://AevilA:0-90-9/evil", "https://AevilA:/evil", "https://AevilAevilA:0-9/evil", "https://A:0-9/evil", "https://Aevila:0-9/evil", "https://Aevil0:0-9/evil", "https://A.A:0-9/evil", "https://A-A:0-9/evil", "https://AeVilA:0-9/evil", "https://AEVILA:0-9/evil", "https://Aev_ilA:0-9/evil", "https://Aev4ilA:0-9/evil", "https://AeA:0-9/evil", "https://A6A:0-9/evil", "https://A_A:0-9/evil", "https://AA:0-9/evil", "https://aevilA:0-9/evil", "https://0evilA:0-9/evil", "https://https://AevilA:0-9/evil", "AevilA:0-9/evil", "http://AevilA:0-9/evil", "A", "https://AevilA:0-9/evil"], "nonMatches": ["https://AevilA:0-9/:", "https://AevilA:0-9/ev il", "https://AevilA:0-9/ ", "https://A\\A:0-9/evil", "https://A?A:0-9/evil", "https://A;A:0-9/evil", "https://A:A:0-9/evil", "https://A/A:0-9/evil", "https://A,A:0-9/evil", "https://A+A:0-9/evil", "https://A&A:0-9/evil", "https://A%A:0-9/evil", "https://A$A:0-9/evil", "https://A#A:0-9/evil", "https://Aev ilA:0-9/evil", "https://A A:0-9/evil", "httpss://AevilA:0-9/evil"]}, {"regex": "^(([A-Za-z]+[^0-9]*)([0-9]+[^\\W]*)([\\W]+[\\W0-9A-Za-z]*))|(([A-Za-z]+[^\\W]*)([\\W]+[^0-9]*)([0-9]+[\\W0-9A-Za-z]*))|(([\\W]+[^A-Za-z]*)([A-Za-z]+[^0-9]*)([0-9]+[\\W0-9A-Za-z]*))|(([\\W]+[^0-9]*)([0-9]+[^A-Za-z]*)([A-Za-z]+[\\W0-9A-Za-z]*))|(([0-9]+[^A-Za-z]*)([A-Za-z]+[^\\W]*)([\\W]+[\\W0-9A-Za-z]*))|(([0-9]+[^\\W]*)([\\W]+[^A-Za-z]*)([A-Za-z]+[\\W0-9A-Za-z]*))$", "exceptionStackTrace": null, "matches": ["0evil;evilevileVil", "0evil;evilevilEVIL", "0evil;evilevilev_il", "0evil;evilevilev il", "0evil;evilevilev4il", "0evil;evilevile", "0evil;evilevil ", "0evil;evilevil6", "0evil;evilevil_", "0evil;evileVilevil", "0evil;evilEVILevil", "0evil;evilev_ilevil", "0evil;evilev ilevil", "0evil;evilev4ilevil", "0evil;evileevil", "0evil;evil evil", "0evil;evil6evil", "0evil;evil_evil", "0evil;eVilevilevil", "0evil;EVILevilevil", "0evil;ev_ilevilevil", "0evil;ev ilevilevil", "0evil;ev4ilevilevil", "0evil;eevilevil", "0evil; evilevil", "0evil;6evilevil", "0evil;_evilevil", "0evil;evilevil", "0evil;;evilevilevil", "0evil evilevilevil", "0eVil;evilevilevil", "0EVIL;evilevilevil", "0ev_il;evilevilevil", "0ev il;evilevilevil", "0ev4il;evilevilevil", "0e;evilevilevil", "0 ;evilevilevil", "06;evilevilevil", "0_;evilevilevil", "0;evilevilevil", "00evil;evilevilevil", "0evilevilevil;eVil", "0evilevilevil;EVIL", "0evilevilevil;ev_il", "0evilevilevil;ev il", "0evilevilevil;ev4il", "0evilevilevil;e", "0evilevilevil; ", "0evilevilevil;6", "0evilevilevil;_", "0evilevilevil;", "0evilevilevil;;evil", "0evilevilevil evil", "0evilevileVil;evil", "0evilevilEVIL;evil", "0evilevilev_il;evil", "0evilevilev il;evil", "0evilevilev4il;evil", "0evilevile;evil", "0evilevil ;evil", "0evilevil6;evil", "0evilevil_;evil", "0evileVilevil;evil", "0evilEVILevil;evil", "0evilev_ilevil;evil", "0evilev ilevil;evil", "0evilev4ilevil;evil", "0evileevil;evil", "0evil evil;evil", "0evil6evil;evil", "0evil_evil;evil", "0eVilevilevil;evil", "0EVILevilevil;evil", "0ev_ilevilevil;evil", "0ev ilevilevil;evil", "0ev4ilevilevil;evil", "0eevilevil;evil", "0 evilevil;evil", "06evilevil;evil", "0_evilevil;evil", "0evilevil;evil", "00evilevilevil;evil", ";evil0evilevileVil", ";evil0evilevilEVIL", ";evil0evilevilev_il", ";evil0evilevilev il", ";evil0evilevilev4il", ";evil0evilevile", ";evil0evilevil ", ";evil0evilevil6", ";evil0evilevil_", ";evil0evileVilevil", ";evil0evilEVILevil", ";evil0evilev_ilevil", ";evil0evilev ilevil", ";evil0evilev4ilevil", ";evil0evileevil", ";evil0evil evil", ";evil0evil6evil", ";evil0evil_evil", ";evil0eVilevilevil", ";evil0EVILevilevil", ";evil0ev_ilevilevil", ";evil0ev ilevilevil", ";evil0ev4ilevilevil", ";evil0eevilevil", ";evil0 evilevil", ";evil06evilevil", ";evil0_evilevil", ";evil0evilevil", ";evil00evilevilevil", ";eVil0evilevilevil", ";EVIL0evilevilevil", ";ev_il0evilevilevil", ";ev il0evilevilevil", ";ev4il0evilevilevil", ";e0evilevilevil", "; 0evilevilevil", ";60evilevilevil", ";_0evilevilevil", ";0evilevilevil", ";;evil0evilevilevil", " evil0evilevilevil", ";evilevilevil0eVil", ";evilevilevil0EVIL", ";evilevilevil0ev_il", ";evilevilevil0ev il", ";evilevilevil0ev4il", ";evilevilevil0e", ";evilevilevil0 ", ";evilevilevil06", ";evilevilevil0_", ";evilevilevil0", ";evilevilevil00evil", ";evilevileVil0evil", ";evilevilEVIL0evil", ";evilevilev_il0evil", ";evilevilev il0evil", ";evilevilev4il0evil", ";evilevile0evil", ";evilevil 0evil", ";evilevil60evil", ";evilevil_0evil", ";evileVilevil0evil", ";evilEVILevil0evil", ";evilev_ilevil0evil", ";evilev ilevil0evil", ";evilev4ilevil0evil", ";evileevil0evil", ";evil evil0evil", ";evil6evil0evil", ";evil_evil0evil", ";eVilevilevil0evil", ";EVILevilevil0evil", ";ev_ilevilevil0evil", ";ev ilevilevil0evil", ";ev4ilevilevil0evil", ";eevilevil0evil", "; evilevil0evil", ";6evilevil0evil", ";_evilevil0evil", ";evilevil0evil", ";;evilevilevil0evil", " evilevilevil0evil", "evilevil;evil0eVil", "evilevil;evil0EVIL", "evilevil;evil0ev_il", "evilevil;evil0ev il", "evilevil;evil0ev4il", "evilevil;evil0e", "evilevil;evil0 ", "evilevil;evil06", "evilevil;evil0_", "evilevil;evil0", "evilevil;evil00evil", "evilevil;eVil0evil", "evilevil;EVIL0evil", "evilevil;ev_il0evil", "evilevil;ev il0evil", "evilevil;ev4il0evil", "evilevil;e0evil", "evilevil; 0evil", "evilevil;60evil", "evilevil;_0evil", "evilevil;0evil", "evilevil;;evil0evil", "evilevil evil0evil", "evileVil;evil0evil", "evilEVIL;evil0evil", "evilev_il;evil0evil", "evilev il;evil0evil", "evilev4il;evil0evil", "evile;evil0evil", "evil ;evil0evil", "evil6;evil0evil", "evil_;evil0evil", "eVilevil;evil0evil", "EVILevil;evil0evil", "ev_ilevil;evil0evil", "ev ilevil;evil0evil", "ev4ilevil;evil0evil", "eevil;evil0evil", " evil;evil0evil", "6evil;evil0evil", "_evil;evil0evil", "evil;evil0evil", "evilevil0evil;eVil", "evilevil0evil;EVIL", "evilevil0evil;ev_il", "evilevil0evil;ev il", "evilevil0evil;ev4il", "evilevil0evil;e", "evilevil0evil; ", "evilevil0evil;6", "evilevil0evil;_", "evilevil0evil;", "evilevil0evil;;evil", "evilevil0evil evil", "evilevil0eVil;evil", "evilevil0EVIL;evil", "evilevil0ev_il;evil", "evilevil0ev il;evil", "evilevil0ev4il;evil", "evilevil0e;evil", "evilevil0 ;evil", "evilevil06;evil", "evilevil0_;evil", "evilevil0;evil", "evilevil00evil;evil", "evileVil0evil;evil", "evilEVIL0evil;evil", "evilev_il0evil;evil", "evilev il0evil;evil", "evilev4il0evil;evil", "evile0evil;evil", "evil 0evil;evil", "evil60evil;evil", "evil_0evil;evil", "eVilevil0evil;evil", "EVILevil0evil;evil", "ev_ilevil0evil;evil", "ev ilevil0evil;evil", "ev4ilevil0evil;evil", "eevil0evil;evil", " evil0evil;evil", "6evil0evil;evil", "_evil0evil;evil", "evil0evil;evil", "0;evil", "0evil;", ";0evil", ";evil0", "evil;0", "evil0;", "0evil;evilevilevil", "0evilevilevil;evil", ";evil0evilevilevil", ";evilevilevil0evil", "evilevil;evil0evil", "evilevil0evil;evil"], "nonMatches": ["0evilaevilevilevil", "0evil_evilevilevil", "0evilAevilevilevil", "evil;evilevilevil", "0evilevilevilevil", "0evilevilevilaevil", "0evilevilevil_evil", "0evilevilevilAevil", "evil0evilevilevil", "aevil0evilevilevil", "_evil0evilevilevil", "Aevil0evilevilevil", "0evil0evilevilevil", ";evilevilevilevil", "aevilevilevil0evil", "_evilevilevil0evil", "Aevilevilevil0evil", "0evilevilevil0evil", "evilevil;evilevil", "evilevilevil0evil", "evilevilaevil0evil", "evilevil_evil0evil", "evilevilAevil0evil", "evilevil0evilevil", "evilevil0evilaevil", "evilevil0evil_evil", "evilevil0evilAevil", "evilevil0evil0evil", "evilevilevil;evil"]}, {"regex": "<img[\\s]+[^>]*?((alt*?[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?)|(src*?[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?))((src*?[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?>)|(alt*?[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?>)|>)", "exceptionStackTrace": null, "matches": ["<img evilsrc =;evil;>src =;evil;evil>", "<img evilsrc =;evil;=src =;evil;evil>", "<img evilsrc =;evil;<src =;evil;evil>", "<img evilsrc =;evil;;src =;evil;evil>", "<img evilsrc =;evil;&src =;evil;evil>", "<img evilsrc =;evil;#src =;evil;evil>", "<img evilsrc =;evil;eVilsrc =;evil;evil>", "<img evilsrc =;evil;EVILsrc =;evil;evil>", "<img evilsrc =;evil;ev_ilsrc =;evil;evil>", "<img evilsrc =;evil;ev ilsrc =;evil;evil>", "<img evilsrc =;evil;ev4ilsrc =;evil;evil>", "<img evilsrc =;evil;esrc =;evil;evil>", "<img evilsrc =;evil; src =;evil;evil>", "<img evilsrc =;evil;6src =;evil;evil>", "<img evilsrc =;evil;_src =;evil;evil>", "<img evilsrc =;evil;src =;evil;evil>", "<img evilsrc =;evil;;evilsrc =;evil;evil>", "<img evilsrc =;evilevilsrc =;evil;evil>", "<img evilsrc =;eviluevilsrc =;evil;evil>", "<img evilsrc =;eviltevilsrc =;evil;evil>", "<img evilsrc =;evilqevilsrc =;evil;evil>", "<img evilsrc =;eviloevilsrc =;evil;evil>", "<img evilsrc =;evilaevilsrc =;evil;evil>", "<img evilsrc =;evil9evilsrc =;evil;evil>", "<img evilsrc =;evil3evilsrc =;evil;evil>", "<img evilsrc =;evil0evilsrc =;evil;evil>", "<img evilsrc =;evil&evilsrc =;evil;evil>", "<img evilsrc =;evil#evilsrc =;evil;evil>", "<img evilsrc =;>;evilsrc =;evil;evil>", "<img evilsrc =;=;evilsrc =;evil;evil>", "<img evilsrc =;<;evilsrc =;evil;evil>", "<img evilsrc =;;;evilsrc =;evil;evil>", "<img evilsrc =;&;evilsrc =;evil;evil>", "<img evilsrc =;#;evilsrc =;evil;evil>", "<img evilsrc =;eVil;evilsrc =;evil;evil>", "<img evilsrc =;EVIL;evilsrc =;evil;evil>", "<img evilsrc =;ev_il;evilsrc =;evil;evil>", "<img evilsrc =;ev il;evilsrc =;evil;evil>", "<img evilsrc =;ev4il;evilsrc =;evil;evil>", "<img evilsrc =;e;evilsrc =;evil;evil>", "<img evilsrc =; ;evilsrc =;evil;evil>", "<img evilsrc =;6;evilsrc =;evil;evil>", "<img evilsrc =;_;evilsrc =;evil;evil>", "<img evilsrc =;;evilsrc =;evil;evil>", "<img evilsrc =;;evil;evilsrc =;evil;evil>", "<img evilsrc =evil;evilsrc =;evil;evil>", "<img evilsrc =uevil;evilsrc =;evil;evil>", "<img evilsrc =tevil;evilsrc =;evil;evil>", "<img evilsrc =qevil;evilsrc =;evil;evil>", "<img evilsrc =oevil;evilsrc =;evil;evil>", "<img evilsrc =aevil;evilsrc =;evil;evil>", "<img evilsrc =9evil;evilsrc =;evil;evil>", "<img evilsrc =3evil;evilsrc =;evil;evil>", "<img evilsrc =0evil;evilsrc =;evil;evil>", "<img evilsrc =&evil;evilsrc =;evil;evil>", "<img evilsrc =#evil;evilsrc =;evil;evil>", "<img evilsrc = evil;evilsrc =;evil;evil>", "<img evilsrc  =;evil;evilsrc =;evil;evil>", "<img evilsrc=;evil;evilsrc =;evil;evil>", "<img evilsrcc =;evil;evilsrc =;evil;evil>", "<img evilsr =;evil;evilsrc =;evil;evil>", "<img evilalt =;evil;evilalt =;evil;>>", "<img evilalt =;evil;evilalt =;evil;=>", "<img evilalt =;evil;evilalt =;evil;<>", "<img evilalt =;evil;evilalt =;evil;;>", "<img evilalt =;evil;evilalt =;evil;&>", "<img evilalt =;evil;evilalt =;evil;#>", "<img evilalt =;evil;evilalt =;evil;eVil>", "<img evilalt =;evil;evilalt =;evil;EVIL>", "<img evilalt =;evil;evilalt =;evil;ev_il>", "<img evilalt =;evil;evilalt =;evil;ev il>", "<img evilalt =;evil;evilalt =;evil;ev4il>", "<img evilalt =;evil;evilalt =;evil;e>", "<img evilalt =;evil;evilalt =;evil; >", "<img evilalt =;evil;evilalt =;evil;6>", "<img evilalt =;evil;evilalt =;evil;_>", "<img evilalt =;evil;evilalt =;evil;>", "<img evilalt =;evil;evilalt =;evil;;evil>", "<img evilalt =;evil;evilalt =;evilevil>", "<img evilalt =;evil;evilalt =;eviluevil>", "<img evilalt =;evil;evilalt =;eviltevil>", "<img evilalt =;evil;evilalt =;evilqevil>", "<img evilalt =;evil;evilalt =;eviloevil>", "<img evilalt =;evil;evilalt =;evilaevil>", "<img evilalt =;evil;evilalt =;evil9evil>", "<img evilalt =;evil;evilalt =;evil3evil>", "<img evilalt =;evil;evilalt =;evil0evil>", "<img evilalt =;evil;evilalt =;evil&evil>", "<img evilalt =;evil;evilalt =;evil#evil>", "<img evilalt =;evil;evilalt =;>;evil>", "<img evilalt =;evil;evilalt =;=;evil>", "<img evilalt =;evil;evilalt =;<;evil>", "<img evilalt =;evil;evilalt =;;;evil>", "<img evilalt =;evil;evilalt =;&;evil>", "<img evilalt =;evil;evilalt =;#;evil>", "<img evilalt =;evil;evilalt =;eVil;evil>", "<img evilalt =;evil;evilalt =;EVIL;evil>", "<img evilalt =;evil;evilalt =;ev_il;evil>", "<img evilalt =;evil;evilalt =;ev il;evil>", "<img evilalt =;evil;evilalt =;ev4il;evil>", "<img evilalt =;evil;evilalt =;e;evil>", "<img evilalt =;evil;evilalt =; ;evil>", "<img evilalt =;evil;evilalt =;6;evil>", "<img evilalt =;evil;evilalt =;_;evil>", "<img evilalt =;evil;evilalt =;;evil>", "<img evilalt =;evil;evilalt =;;evil;evil>", "<img evilalt =;evil;evilalt =evil;evil>", "<img evilalt =;evil;evilalt =uevil;evil>", "<img evilalt =;evil;evilalt =tevil;evil>", "<img evilalt =;evil;evilalt =qevil;evil>", "<img evilalt =;evil;evilalt =oevil;evil>", "<img evilalt =;evil;evilalt =aevil;evil>", "<img evilalt =;evil;evilalt =9evil;evil>", "<img evilalt =;evil;evilalt =3evil;evil>", "<img evilalt =;evil;evilalt =0evil;evil>", "<img evilalt =;evil;evilalt =&evil;evil>", "<img evilalt =;evil;evilalt =#evil;evil>", "<img evilalt =;evil;evilalt = evil;evil>", "<img evilalt =;evil;evilalt  =;evil;evil>", "<img evilalt =;evil;evilalt=;evil;evil>", "<img evilalt =;evil;evilaltt =;evil;evil>", "<img evilalt =;evil;evilal =;evil;evil>", "<img evilalt =;evil;evilsrc =;evil;>>", "<img evilalt =;evil;evilsrc =;evil;=>", "<img evilalt =;evil;evilsrc =;evil;<>", "<img evilalt =;evil;evilsrc =;evil;;>", "<img evilalt =;evil;evilsrc =;evil;&>", "<img evilalt =;evil;evilsrc =;evil;#>", "<img evilalt =;evil;evilsrc =;evil;eVil>", "<img evilalt =;evil;evilsrc =;evil;EVIL>", "<img evilalt =;evil;evilsrc =;evil;ev_il>", "<img evilalt =;evil;evilsrc =;evil;ev il>", "<img evilalt =;evil;evilsrc =;evil;ev4il>", "<img evilalt =;evil;evilsrc =;evil;e>", "<img evilalt =;evil;evilsrc =;evil; >", "<img evilalt =;evil;evilsrc =;evil;6>", "<img evilalt =;evil;evilsrc =;evil;_>", "<img evilalt =;evil;evilsrc =;evil;>", "<img evilalt =;evil;evilsrc =;evil;;evil>", "<img evilalt =;evil;evilsrc =;evilevil>", "<img evilalt =;evil;evilsrc =;eviluevil>", "<img evilalt =;evil;evilsrc =;eviltevil>", "<img evilalt =;evil;evilsrc =;evilqevil>", "<img evilalt =;evil;evilsrc =;eviloevil>", "<img evilalt =;evil;evilsrc =;evilaevil>", "<img evilalt =;evil;evilsrc =;evil9evil>", "<img evilalt =;evil;evilsrc =;evil3evil>", "<img evilalt =;evil;evilsrc =;evil0evil>", "<img evilalt =;evil;evilsrc =;evil&evil>", "<img evilalt =;evil;evilsrc =;evil#evil>", "<img evilalt =;evil;evilsrc =;>;evil>", "<img evilalt =;evil;evilsrc =;=;evil>", "<img evilalt =;evil;evilsrc =;<;evil>", "<img evilalt =;evil;evilsrc =;;;evil>", "<img evilalt =;evil;evilsrc =;&;evil>", "<img evilalt =;evil;evilsrc =;#;evil>", "<img evilalt =;evil;evilsrc =;eVil;evil>", "<img evilalt =;evil;evilsrc =;EVIL;evil>", "<img evilalt =;evil;evilsrc =;ev_il;evil>", "<img evilalt =;evil;evilsrc =;ev il;evil>", "<img evilalt =;evil;evilsrc =;ev4il;evil>", "<img evilalt =;evil;evilsrc =;e;evil>", "<img evilalt =;evil;evilsrc =; ;evil>", "<img evilalt =;evil;evilsrc =;6;evil>", "<img evilalt =;evil;evilsrc =;_;evil>", "<img evilalt =;evil;evilsrc =;;evil>", "<img evilalt =;evil;evilsrc =;;evil;evil>", "<img evilalt =;evil;evilsrc =evil;evil>", "<img evilalt =;evil;evilsrc =uevil;evil>", "<img evilalt =;evil;evilsrc =tevil;evil>", "<img evilalt =;evil;evilsrc =qevil;evil>", "<img evilalt =;evil;evilsrc =oevil;evil>", "<img evilalt =;evil;evilsrc =aevil;evil>", "<img evilalt =;evil;evilsrc =9evil;evil>", "<img evilalt =;evil;evilsrc =3evil;evil>", "<img evilalt =;evil;evilsrc =0evil;evil>", "<img evilalt =;evil;evilsrc =&evil;evil>", "<img evilalt =;evil;evilsrc =#evil;evil>", "<img evilalt =;evil;evilsrc = evil;evil>", "<img evilalt =;evil;evilsrc  =;evil;evil>", "<img evilalt =;evil;evilsrc=;evil;evil>", "<img evilalt =;evil;evilsrcc =;evil;evil>", "<img evilalt =;evil;evilsr =;evil;evil>", "<img evilalt =;evil;>src =;evil;evil>", "<img evilalt =;evil;=src =;evil;evil>", "<img evilalt =;evil;<src =;evil;evil>", "<img evilalt =;evil;;src =;evil;evil>", "<img evilalt =;evil;&src =;evil;evil>", "<img evilalt =;evil;#src =;evil;evil>", "<img evilalt =;evil;eVilsrc =;evil;evil>", "<img evilalt =;evil;EVILsrc =;evil;evil>", "<img evilalt =;evil;ev_ilsrc =;evil;evil>", "<img evilalt =;evil;ev ilsrc =;evil;evil>", "<img evilalt =;evil;ev4ilsrc =;evil;evil>", "<img evilalt =;evil;esrc =;evil;evil>", "<img evilalt =;evil; src =;evil;evil>", "<img evilalt =;evil;6src =;evil;evil>", "<img evilalt =;evil;_src =;evil;evil>", "<img evilalt =;evil;src =;evil;evil>", "<img evilalt =;evil;;evilsrc =;evil;evil>", "<img evilalt =;evilevilsrc =;evil;evil>", "<img evilalt =;eviluevilsrc =;evil;evil>", "<img evilalt =;eviltevilsrc =;evil;evil>", "<img evilalt =;evilqevilsrc =;evil;evil>", "<img evilalt =;eviloevilsrc =;evil;evil>", "<img evilalt =;evilaevilsrc =;evil;evil>", "<img evilalt =;evil9evilsrc =;evil;evil>", "<img evilalt =;evil3evilsrc =;evil;evil>", "<img evilalt =;evil0evilsrc =;evil;evil>", "<img evilalt =;evil&evilsrc =;evil;evil>", "<img evilalt =;evil#evilsrc =;evil;evil>", "<img evilalt =;>;evilsrc =;evil;evil>", "<img evilalt =;=;evilsrc =;evil;evil>", "<img evilalt =;<;evilsrc =;evil;evil>", "<img evilalt =;;;evilsrc =;evil;evil>", "<img evilalt =;&;evilsrc =;evil;evil>", "<img evilalt =;#;evilsrc =;evil;evil>", "<img evilalt =;eVil;evilsrc =;evil;evil>", "<img evilalt =;EVIL;evilsrc =;evil;evil>", "<img evilalt =;ev_il;evilsrc =;evil;evil>", "<img evilalt =;ev il;evilsrc =;evil;evil>", "<img evilalt =;ev4il;evilsrc =;evil;evil>", "<img evilalt =;e;evilsrc =;evil;evil>", "<img evilalt =; ;evilsrc =;evil;evil>", "<img evilalt =;6;evilsrc =;evil;evil>", "<img evilalt =;_;evilsrc =;evil;evil>", "<img evilalt =;;evilsrc =;evil;evil>", "<img evilalt =;;evil;evilsrc =;evil;evil>", "<img evilalt =evil;evilsrc =;evil;evil>", "<img evilalt =uevil;evilsrc =;evil;evil>", "<img evilalt =tevil;evilsrc =;evil;evil>", "<img evilalt =qevil;evilsrc =;evil;evil>", "<img evilalt =oevil;evilsrc =;evil;evil>", "<img evilalt =aevil;evilsrc =;evil;evil>", "<img evilalt =9evil;evilsrc =;evil;evil>", "<img evilalt =3evil;evilsrc =;evil;evil>", "<img evilalt =0evil;evilsrc =;evil;evil>", "<img evilalt =&evil;evilsrc =;evil;evil>", "<img evilalt =#evil;evilsrc =;evil;evil>", "<img evilalt = evil;evilsrc =;evil;evil>", "<img evilalt  =;evil;evilsrc =;evil;evil>", "<img evilalt=;evil;evilsrc =;evil;evil>", "<img evilaltt =;evil;evilsrc =;evil;evil>", "<img evilal =;evil;evilsrc =;evil;evil>", "<img =alt =;evil;evilsrc =;evil;evil>", "<img <alt =;evil;evilsrc =;evil;evil>", "<img ;alt =;evil;evilsrc =;evil;evil>", "<img &alt =;evil;evilsrc =;evil;evil>", "<img #alt =;evil;evilsrc =;evil;evil>", "<img eVilalt =;evil;evilsrc =;evil;evil>", "<img EVILalt =;evil;evilsrc =;evil;evil>", "<img ev_ilalt =;evil;evilsrc =;evil;evil>", "<img ev ilalt =;evil;evilsrc =;evil;evil>", "<img ev4ilalt =;evil;evilsrc =;evil;evil>", "<img ealt =;evil;evilsrc =;evil;evil>", "<img  alt =;evil;evilsrc =;evil;evil>", "<img 6alt =;evil;evilsrc =;evil;evil>", "<img _alt =;evil;evilsrc =;evil;evil>", "<img alt =;evil;evilsrc =;evil;evil>", "<img  evilalt =;evil;evilsrc =;evil;evil>", "<img sr=;;sr=;;>", "<img al=;;>", "<img al=;;al=;;>", "<img al=;;sr=;;>", "<img evilsrc =;evil;evilsrc =;evil;evil>", "<img evilalt =;evil;evil>", "<img evilalt =;evil;evilalt =;evil;evil>", "<img evilalt =;evil;evilsrc =;evil;evil>"], "nonMatches": ["<img >alt =;evil;evilsrc =;evil;evil>", "<imgevilalt =;evil;evilsrc =;evil;evil>"]}, {"regex": "<title>+(.*?)</title>", "exceptionStackTrace": null, "matches": ["<title>></title>", "<title><</title>", "<title>/</title>", "<title>eVil</title>", "<title>EVIL</title>", "<title>ev_il</title>", "<title>ev il</title>", "<title>ev4il</title>", "<title>e</title>", "<title> </title>", "<title>6</title>", "<title>_</title>", "<title>>evil</title>", "<title></title>", "<title>evil</title>"], "nonMatches": ["<titleevil</title>"]}, {"regex": "<meta[\\s]+[^>]*?name[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\s\\&quot;\\&#39;]+content[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?>", "exceptionStackTrace": null, "matches": ["<meta evilname =;evil;content =;evil;>>", "<meta evilname =;evil;content =;evil;=>", "<meta evilname =;evil;content =;evil;<>", "<meta evilname =;evil;content =;evil;;>", "<meta evilname =;evil;content =;evil;&>", "<meta evilname =;evil;content =;evil;#>", "<meta evilname =;evil;content =;evil;eVil>", "<meta evilname =;evil;content =;evil;EVIL>", "<meta evilname =;evil;content =;evil;ev_il>", "<meta evilname =;evil;content =;evil;ev il>", "<meta evilname =;evil;content =;evil;ev4il>", "<meta evilname =;evil;content =;evil;e>", "<meta evilname =;evil;content =;evil; >", "<meta evilname =;evil;content =;evil;6>", "<meta evilname =;evil;content =;evil;_>", "<meta evilname =;evil;content =;evil;>", "<meta evilname =;evil;content =;evil;;evil>", "<meta evilname =;evil;content =;eviluevil>", "<meta evilname =;evil;content =;eviltevil>", "<meta evilname =;evil;content =;evilqevil>", "<meta evilname =;evil;content =;eviloevil>", "<meta evilname =;evil;content =;evil9evil>", "<meta evilname =;evil;content =;evil3evil>", "<meta evilname =;evil;content =;evil&evil>", "<meta evilname =;evil;content =;evil#evil>", "<meta evilname =;evil;content =;>;evil>", "<meta evilname =;evil;content =;=;evil>", "<meta evilname =;evil;content =;<;evil>", "<meta evilname =;evil;content =;;;evil>", "<meta evilname =;evil;content =;&;evil>", "<meta evilname =;evil;content =;#;evil>", "<meta evilname =;evil;content =;eVil;evil>", "<meta evilname =;evil;content =;EVIL;evil>", "<meta evilname =;evil;content =;ev_il;evil>", "<meta evilname =;evil;content =;ev il;evil>", "<meta evilname =;evil;content =;ev4il;evil>", "<meta evilname =;evil;content =;e;evil>", "<meta evilname =;evil;content =; ;evil>", "<meta evilname =;evil;content =;6;evil>", "<meta evilname =;evil;content =;_;evil>", "<meta evilname =;evil;content =;;evil>", "<meta evilname =;evil;content =;;evil;evil>", "<meta evilname =;evil;content =uevil;evil>", "<meta evilname =;evil;content =tevil;evil>", "<meta evilname =;evil;content =qevil;evil>", "<meta evilname =;evil;content =oevil;evil>", "<meta evilname =;evil;content =9evil;evil>", "<meta evilname =;evil;content =3evil;evil>", "<meta evilname =;evil;content =&evil;evil>", "<meta evilname =;evil;content =#evil;evil>", "<meta evilname =;evil;content = evil;evil>", "<meta evilname =;evil;content=;evil;evil>", "<meta evilname =;evil;;content =;evil;evil>", "<meta evilname =;evilucontent =;evil;evil>", "<meta evilname =;eviltcontent =;evil;evil>", "<meta evilname =;evilqcontent =;evil;evil>", "<meta evilname =;evilocontent =;evil;evil>", "<meta evilname =;evil9content =;evil;evil>", "<meta evilname =;evil3content =;evil;evil>", "<meta evilname =;evil&content =;evil;evil>", "<meta evilname =;evil#content =;evil;evil>", "<meta evilname =;evil content =;evil;evil>", "<meta evilname =;>;content =;evil;evil>", "<meta evilname =;=;content =;evil;evil>", "<meta evilname =;<;content =;evil;evil>", "<meta evilname =;;;content =;evil;evil>", "<meta evilname =;&;content =;evil;evil>", "<meta evilname =;#;content =;evil;evil>", "<meta evilname =;eVil;content =;evil;evil>", "<meta evilname =;EVIL;content =;evil;evil>", "<meta evilname =;ev_il;content =;evil;evil>", "<meta evilname =;ev il;content =;evil;evil>", "<meta evilname =;ev4il;content =;evil;evil>", "<meta evilname =;e;content =;evil;evil>", "<meta evilname =; ;content =;evil;evil>", "<meta evilname =;6;content =;evil;evil>", "<meta evilname =;_;content =;evil;evil>", "<meta evilname =;;content =;evil;evil>", "<meta evilname =;;evil;content =;evil;evil>", "<meta evilname =uevil;content =;evil;evil>", "<meta evilname =tevil;content =;evil;evil>", "<meta evilname =qevil;content =;evil;evil>", "<meta evilname =oevil;content =;evil;evil>", "<meta evilname =9evil;content =;evil;evil>", "<meta evilname =3evil;content =;evil;evil>", "<meta evilname =&evil;content =;evil;evil>", "<meta evilname =#evil;content =;evil;evil>", "<meta evilname = evil;content =;evil;evil>", "<meta evilname=;evil;content =;evil;evil>", "<meta =name =;evil;content =;evil;evil>", "<meta <name =;evil;content =;evil;evil>", "<meta ;name =;evil;content =;evil;evil>", "<meta &name =;evil;content =;evil;evil>", "<meta #name =;evil;content =;evil;evil>", "<meta eVilname =;evil;content =;evil;evil>", "<meta EVILname =;evil;content =;evil;evil>", "<meta ev_ilname =;evil;content =;evil;evil>", "<meta ev ilname =;evil;content =;evil;evil>", "<meta ev4ilname =;evil;content =;evil;evil>", "<meta ename =;evil;content =;evil;evil>", "<meta  name =;evil;content =;evil;evil>", "<meta 6name =;evil;content =;evil;evil>", "<meta _name =;evil;content =;evil;evil>", "<meta name =;evil;content =;evil;evil>", "<meta  evilname =;evil;content =;evil;evil>", "<meta name=;;content=;;>", "<meta evilname =;evil;content =;evil;evil>"], "nonMatches": ["<meta evilname =;evil;content =;evilevil>", "<meta evilname =;evil;content =;evilaevil>", "<meta evilname =;evil;content =;evil0evil>", "<meta evilname =;evil;content =evil;evil>", "<meta evilname =;evil;content =aevil;evil>", "<meta evilname =;evil;content =0evil;evil>", "<meta evilname =;evil;content  =;evil;evil>", "<meta evilname =;evilcontent =;evil;evil>", "<meta evilname =;evilacontent =;evil;evil>", "<meta evilname =;evil0content =;evil;evil>", "<meta evilname =evil;content =;evil;evil>", "<meta evilname =aevil;content =;evil;evil>", "<meta evilname =0evil;content =;evil;evil>", "<meta evilname  =;evil;content =;evil;evil>", "<meta >name =;evil;content =;evil;evil>", "<metaevilname =;evil;content =;evil;evil>"]}, {"regex": "Dubai", "exceptionStackTrace": null, "matches": ["Dubai"], "nonMatches": []}, {"regex": "^(([0]?[1-9]|1[0-2])/([0-2]?[0-9]|3[0-1])/[1-2]\\d{3})? ?((([0-1]?\\d)|(2[0-3])):[0-5]\\d)?(:[0-5]\\d)? ?(AM|am|PM|pm)?$", "exceptionStackTrace": null, "matches": ["01/00/1000 00:00:00 ", "01/00/1000 00:00:00AM", "01/00/1000 00:00 AM", "01/00/1000 :00 AM", "01/00/1000 0:00:00 AM", "01/00/100000:00:00 AM", " 00:00:00 AM", "01/0/1000 00:00:00 AM", "1/00/1000 00:00:00 AM", "", "10/00/1000 00:00:00 AM", "01/30/1000 00:00:00 AM", "01/00/1000 20:00:00 AM", "01/00/1000 00:00:00 pm", "01/00/1000 00:00:00 PM", "01/00/1000 00:00:00 am", "01/00/1000 00:00:00 AM"], "nonMatches": ["13/00/1000 00:00:00 AM", "01/32/1000 00:00:00 AM", "01/00/1000 24:00:00 AM", "01/00/1000 00:00:00 AMAM", "01/00/1000 00:00:00  AM", "01/00/1000 00:00:00:00 AM", "01/00/1000 00:00:60 AM", "01/00/1000 00:0000:00:00 AM", "01/00/1000 00:60:00 AM", "01/00/1000 000:00:00 AM", "01/00/1000  00:00:00 AM", "01/00/100001/00/1000 00:00:00 AM", "01/00/10000 00:00:00 AM", "01/00/100 00:00:00 AM", "01/00/0000 00:00:00 AM", "01/000/1000 00:00:00 AM", "00/00/1000 00:00:00 AM", "001/00/1000 00:00:00 AM"]}, {"regex": "^[1-9]{1}$|^[1-4]{1}[0-9]{1}$|^50$", "exceptionStackTrace": null, "matches": ["11", "50", "10", "1"], "nonMatches": ["100", "110", "00", "", "0"]}, {"regex": "^([0-9a-fA-F]){8}$", "exceptionStackTrace": null, "matches": ["aAAAAAAA", "0AAAAAAA", "AAAAAAAA"], "nonMatches": ["AAAAAAAAA", "AAAAAAA", "gAAAAAAA", "GAAAAAAA"]}, {"regex": "^([0-9a-fA-F])*$", "exceptionStackTrace": null, "matches": ["AA", "a", "0", "", "A"], "nonMatches": ["g", "G"]}, {"regex": "^(\\$|R\\$|\\-\\$|\\-R\\$|\\$\\-|R\\$\\-|-)?([0-9]{1}[0-9]{0,2}(\\.[0-9]{3})*(\\,[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\,[0-9]{0,2})?|0(\\,[0-9]{0,2})?|(\\,[0-9]{1,2})?)$", "exceptionStackTrace": null, "matches": ["$", "$,00", "$0", "$0,00", "$0,", "$10", "$10,00", "$10,", "$100,0", "$1,0", "$110,0", "$00.000", "$00.000,00", "$00.000,", "$00.000.000,0", "$00,0", "$000.000,0", "$0.000,0", "00.000,0", "", "1", "0", "-00.000,0", "R$-00.000,0", "$-00.000,0", "-R$00.000,0", "-$00.000,0", "R$00.000,0", "$,0", "$0,0", "$10,0", "$00.000,0"], "nonMatches": ["$,0,0", "$,000", "$,", "$0,0,0", "$0,000", "$10,0,0", "$10,000", "$00.000,0,0", "$00.000,000", "$00.0000,0", "$00.00,0", "$0000.000,0", "$$00.000,0"]}, {"regex": "Call +1(505) 384-8224 now", "exceptionStackTrace": null, "matches": ["Call  1505 384-8224 now", "Call 1505 384-8224 now"], "nonMatches": ["Call1505 384-8224 now"]}, {"regex": "^[a-z0-9,!#\\$%&&#39;\\*\\+/=\\?\\^_`\\{\\|}~-]+(\\.[a-z0-9,!#\\$%&&#39;\\*\\+/=\\?\\^_`\\{\\|}~-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*\\.([a-z]{2,})$", "exceptionStackTrace": null, "matches": ["evil.evil@evil.evil.evil.aa", "evil.evil@evil.aa", "evil.evil@evil.-.aa", "evil.evil@evil.ev4il.aa", "evil.evil@evil.e.aa", "evil.evil@evil.6.aa", "evil.evil@-.evil.aa", "evil.evil@ev4il.evil.aa", "evil.evil@e.evil.aa", "evil.evil@6.evil.aa", "evil.evil.evil@evil.evil.aa", "evil@evil.evil.aa", "evil.~@evil.evil.aa", "evil.}@evil.evil.aa", "evil.|@evil.evil.aa", "evil.{@evil.evil.aa", "evil.`@evil.evil.aa", "evil.^@evil.evil.aa", "evil.?@evil.evil.aa", "evil.=@evil.evil.aa", "evil.;@evil.evil.aa", "evil./@evil.evil.aa", "evil.-@evil.evil.aa", "evil.,@evil.evil.aa", "evil.+@evil.evil.aa", "evil.*@evil.evil.aa", "evil.&@evil.evil.aa", "evil.%@evil.evil.aa", "evil.$@evil.evil.aa", "evil.#@evil.evil.aa", "evil.!@evil.evil.aa", "evil.ev_il@evil.evil.aa", "evil.ev4il@evil.evil.aa", "evil.e@evil.evil.aa", "evil.6@evil.evil.aa", "evil._@evil.evil.aa", "~.evil@evil.evil.aa", "}.evil@evil.evil.aa", "|.evil@evil.evil.aa", "{.evil@evil.evil.aa", "`.evil@evil.evil.aa", "^.evil@evil.evil.aa", "?.evil@evil.evil.aa", "=.evil@evil.evil.aa", ";.evil@evil.evil.aa", "/.evil@evil.evil.aa", "-.evil@evil.evil.aa", ",.evil@evil.evil.aa", "+.evil@evil.evil.aa", "*.evil@evil.evil.aa", "&.evil@evil.evil.aa", "%.evil@evil.evil.aa", "$.evil@evil.evil.aa", "#.evil@evil.evil.aa", "!.evil@evil.evil.aa", "ev_il.evil@evil.evil.aa", "ev4il.evil@evil.evil.aa", "e.evil@evil.evil.aa", "6.evil@evil.evil.aa", "_.evil@evil.evil.aa", "evil@evil.aa", "evil.evil@evil.evil.aa"], "nonMatches": ["evil.evil@evil.evil.a", "evil.evil@evil.~.aa", "evil.evil@evil.}.aa", "evil.evil@evil.|.aa", "evil.evil@evil.{.aa", "evil.evil@evil.`.aa", "evil.evil@evil.^.aa", "evil.evil@evil.@.aa", "evil.evil@evil.?.aa", "evil.evil@evil.=.aa", "evil.evil@evil.;.aa", "evil.evil@evil./.aa", "evil.evil@evil...aa", "evil.evil@evil.,.aa", "evil.evil@evil.+.aa", "evil.evil@evil.*.aa", "evil.evil@evil.&.aa", "evil.evil@evil.%.aa", "evil.evil@evil.$.aa", "evil.evil@evil.#.aa", "evil.evil@evil.!.aa", "evil.evil@evil.eVil.aa", "evil.evil@evil.EVIL.aa", "evil.evil@evil.ev_il.aa", "evil.evil@evil.ev il.aa", "evil.evil@evil. .aa", "evil.evil@evil._.aa", "evil.evil@evil..aa", "evil.evil@~.evil.aa", "evil.evil@}.evil.aa", "evil.evil@|.evil.aa", "evil.evil@{.evil.aa", "evil.evil@`.evil.aa", "evil.evil@^.evil.aa", "evil.evil@@.evil.aa", "evil.evil@?.evil.aa", "evil.evil@=.evil.aa", "evil.evil@;.evil.aa", "evil.evil@/.evil.aa", "evil.evil@..evil.aa", "evil.evil@,.evil.aa", "evil.evil@+.evil.aa", "evil.evil@*.evil.aa", "evil.evil@&.evil.aa", "evil.evil@%.evil.aa", "evil.evil@$.evil.aa", "evil.evil@#.evil.aa", "evil.evil@!.evil.aa", "evil.evil@eVil.evil.aa", "evil.evil@EVIL.evil.aa", "evil.evil@ev_il.evil.aa", "evil.evil@ev il.evil.aa", "evil.evil@ .evil.aa", "evil.evil@_.evil.aa", "evil.evil@.evil.aa", "evil.@@evil.evil.aa", "evil..@evil.evil.aa", "evil.eVil@evil.evil.aa", "evil.EVIL@evil.evil.aa", "evil.ev il@evil.evil.aa", "evil. @evil.evil.aa", "evil.@evil.evil.aa", "@.evil@evil.evil.aa", "..evil@evil.evil.aa", "eVil.evil@evil.evil.aa", "EVIL.evil@evil.evil.aa", "ev il.evil@evil.evil.aa", " .evil@evil.evil.aa", ".evil@evil.evil.aa"]}, {"regex": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)*[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$", "exceptionStackTrace": null, "matches": ["0-0.0-0-0", "0-0.0", "0-0.0-a", "0-0.0-A", "0-0.0-------------------------------------------------------------0", "0-0.00", "0-0.0a0", "0-0.0A0", "0-0.000", "0-0.a-0", "0-0.A-0", "0-0.0-0.0-0", "0-0", "0-0-0.0-0", "0.0-0", "0-a.0-0", "0-A.0-0", "0-------------------------------------------------------------0.0-0", "00.0-0", "0a0.0-0", "0A0.0-0", "000.0-0", "a-0.0-0", "A-0.0-0", "0", "0-0.0-0"], "nonMatches": ["0-0.0--------------------------------------------------------------0", "0--------------------------------------------------------------0.0-0"]}, {"regex": "^([a-zA-Z&#225;&#233;&#237;&#243;&#250;&#224;&#232;&#236;&#242;&#249;&#227;&#245;&#226;&#234;&#238;&#244;&#251;&#252;&#239;&#231;&#193;&#201;&#205;&#211;&#218;&#192;&#200;&#204;&#210;&#217;&#194;&#202;&#206;&#212;&#219;&#195;&#213;&#220;&#207;&#199;&#163;&#162;$#,.&#186;&#170;&#176;\\s/-[0-9]]){1,40}$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: /-["}, "matches": [], "nonMatches": []}, {"regex": "@&quot;^\\d[a-zA-Z]\\w{1}\\d{2}[a-zA-Z]\\w{1}\\d{3}$&quot;", "exceptionStackTrace": null, "matches": [], "nonMatches": ["@&quot;0Aa00Aa0000&quot;", "@&quot;0Aa00Aa00&quot;", "@&quot;0Aa00Aaa000&quot;", "@&quot;0Aa00A000&quot;", "@&quot;0Aa00A_000&quot;", "@&quot;0Aa00AA000&quot;", "@&quot;0Aa00A0000&quot;", "@&quot;0Aa00aa000&quot;", "@&quot;0Aa000Aa000&quot;", "@&quot;0Aa0Aa000&quot;", "@&quot;0Aaa00Aa000&quot;", "@&quot;0A00Aa000&quot;", "@&quot;0A_00Aa000&quot;", "@&quot;0AA00Aa000&quot;", "@&quot;0A000Aa000&quot;", "@&quot;0aa00Aa000&quot;", "@&quot;0Aa00Aa000&quot;"]}, {"regex": "@&quot;^\\d[a-zA-Z0-9]+$&quot;", "exceptionStackTrace": null, "matches": [], "nonMatches": ["@&quot;0eVil&quot;", "@&quot;0EVIL&quot;", "@&quot;0ev_il&quot;", "@&quot;0ev il&quot;", "@&quot;0ev4il&quot;", "@&quot;0e&quot;", "@&quot;0 &quot;", "@&quot;06&quot;", "@&quot;0_&quot;", "@&quot;0&quot;", "@&quot;0evil&quot;"]}, {"regex": "((\\d{4})|(\\d{2}))|(0?[2469]|11)(-|\\/)((0[0-9])|([12])([0-9]?)|(3[0]?))(-|\\/)((0?[13578]|10|12)(-|\\/)((0[0-9])|([12])([0-9]?)|(3[01]?))(-|\\/)((\\d{4}|\\d{2})))", "exceptionStackTrace": null, "matches": ["09-300-08-00-0000", "09-3-08-00-0000", "09-200-08-00-0000", "09-2-08-00-0000", "09-10-08-00-0000", "09-00-08-311-0000", "09-00-08-3-0000", "09-00-08-32-0000", "09-00-08-30-0000", "09-00-08-200-0000", "09-00-08-2-0000", "09-00-08-10-0000", "09-00-08-00-0", "09-00-08-00-00000", "09-00-08-00-000", "09-00-07-00-0000", "09-00-05-00-0000", "09-00-03-00-0000", "09-00-01-00-0000", "09-00-00-00-0000", "09-00-008-00-0000", "09-00-8-00-0000", "06-00-08-00-0000", "04-00-08-00-0000", "02-00-08-00-0000", "00-00-08-00-0000", "009-00-08-00-0000", "9-00-08-00-0000", "00000", "000", "11-00-8-00-0000", "9/00-8-00-0000", "9-3-8-00-0000", "9-2-8-00-0000", "9-00/8-00-0000", "9-00-12-00-0000", "9-00-10-00-0000", "9-00-8/00-0000", "9-00-8-3-0000", "9-00-8-2-0000", "9-00-8-00/0000", "9-00-8-00-00", "9-00-8-00-0000", "11-00-08-00-0000", "09/00-08-00-0000", "09-30-08-00-0000", "09-20-08-00-0000", "09-00/08-00-0000", "09-00-12-00-0000", "09-00-10-00-0000", "09-00-08/00-0000", "09-00-08-31-0000", "09-00-08-20-0000", "09-00-08-00/0000", "09-00-08-00-00", "09-00-08-00-0000", "00", "0000"], "nonMatches": ["0"]}, {"regex": "(?<list_no>\\d\\d\\d)(?<date_created_dd>\\d\\d)(?<date_created_mm>\\d\\d)(?<date_created_yyyy>\\d\\d\\d\\d)(?<date_applicable_dd>\\d\\d)(?<date_applicable_mm>\\d\\d)(?<date_applicable_yyyy>\\d\\d\\d\\d)(?<records_count>\\d+)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "(?<currency_no>\\d\\d\\d)(?<currency_code>\\w\\w\\w)(?<parity>\\d\\d\\d)(?<ask_price>\\s+\\d+\\,\\d+)(?<average_price>\\s+\\d+\\,\\d+)(?<bid_price>\\s+\\d+\\,\\d+)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<c"}, "matches": []}, {"regex": "Validation of Mexican RFC for tax payers (individuals)", "exceptionStackTrace": null, "matches": ["Validation of Mexican RFC for tax payers individuals"], "nonMatches": []}, {"regex": "^([0-9a-zA-Z]+[-._+&amp;])*[0-9a-zA-Z]+@([-0-9a-zA-Z]+[.])+[a-zA-Z]{2,6}$", "exceptionStackTrace": null, "matches": ["evil;evil@evil.AAAAAA", "evil;evil@evil.aA", "evil;evil@evil.evil.AA", "evil;evil@-.AA", "evil;evil@eVil.AA", "evil;evil@EVIL.AA", "evil;evil@ev4il.AA", "evil;evil@e.AA", "evil;evil@6.AA", "evil;eVil@evil.AA", "evil;EVIL@evil.AA", "evil;ev_il@evil.AA", "evil;ev4il@evil.AA", "evil;e@evil.AA", "evil;6@evil.AA", "evil;evil;evil@evil.AA", "evilpevil@evil.AA", "evilmevil@evil.AA", "evilbevil@evil.AA", "evilaevil@evil.AA", "evil_evil@evil.AA", "evil.evil@evil.AA", "evil-evil@evil.AA", "evil+evil@evil.AA", "evil&evil@evil.AA", "eVil;evil@evil.AA", "EVIL;evil@evil.AA", "ev_il;evil@evil.AA", "ev4il;evil@evil.AA", "e;evil@evil.AA", "6;evil@evil.AA", "evil@evil.AA", "evil;evil@evil.AA"], "nonMatches": ["evil;evil@evil.AAAAAAA", "evil;evil@evil.A", "evil;evil@AA", "evil;evil@@.AA", "evil;evil@;.AA", "evil;evil@..AA", "evil;evil@+.AA", "evil;evil@&.AA", "evil;evil@ev_il.AA", "evil;evil@ev il.AA", "evil;evil@ .AA", "evil;evil@_.AA", "evil;evil@.AA", "evil;ev il@evil.AA", "evil; @evil.AA", "evil;_@evil.AA", "evil;@evil.AA", "ev il;evil@evil.AA", " ;evil@evil.AA", "_;evil@evil.AA", ";evil@evil.AA"]}, {"regex": "^((ht|f)tp(s?))\\://([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]{2,6}(\\:[0-9]+)?(/\\S*)?$", "exceptionStackTrace": null, "matches": ["https://evil.AA:0/evil/evil", "https://evil.AA:0", "https://evil.AA:0/:", "https://evil.AA:0//", "https://evil.AA:0/.", "https://evil.AA:0/-", "https://evil.AA:0/eVil", "https://evil.AA:0/EVIL", "https://evil.AA:0/ev_il", "https://evil.AA:0/ev4il", "https://evil.AA:0/e", "https://evil.AA:0/6", "https://evil.AA:0/_", "https://evil.AA:0/", "https://evil.AA/evil", "https://evil.AA:00/evil", "https://evil.AAAAAA:0/evil", "https://evil.aA:0/evil", "https://evil.evil.AA:0/evil", "https://-.AA:0/evil", "https://eVil.AA:0/evil", "https://EVIL.AA:0/evil", "https://ev4il.AA:0/evil", "https://e.AA:0/evil", "https://6.AA:0/evil", "http://evil.AA:0/evil", "ftp://evil.AA", "http://evil.AA", "ftps://evil.AA:0/evil", "https://evil.AA:0/evil"], "nonMatches": ["https://evil.AA:0/ev il", "https://evil.AA:0/ ", "https://evil.AA:0:0/evil", "https://evil.AA:/evil", "https://evil.AAAAAAA:0/evil", "https://evil.A:0/evil", "https://AA:0/evil", "https://:.AA:0/evil", "https:///.AA:0/evil", "https://..AA:0/evil", "https://ev_il.AA:0/evil", "https://ev il.AA:0/evil", "https:// .AA:0/evil", "https://_.AA:0/evil", "https://.AA:0/evil", "httpss://evil.AA:0/evil"]}, {"regex": "(?:[hH][tT]{2}[pP][sS]{0,1}:\\/\\/)?[wW]{0,3}\\.{0,1}[yY][oO][uU][tT][uU](?:\\.[bB][eE]|[bB][eE]\\.[cC][oO][mM])?\\/(?:(?:[wW][aA][tT][cC][hH])?(?:\\/)?\\?(?:.*)?[vV]=([a-zA-Z0-9--]+).*|([A-Za-z0-9--]+))", "exceptionStackTrace": null, "matches": ["HTTPS://W.YOUTUBE.COm/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.CoM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.cOM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBe.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUbE.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/-", "HTTPS://W.YOUTU.BE/eVil", "HTTPS://W.YOUTU.BE/EVIL", "HTTPS://W.YOUTU.BE/ev_il", "HTTPS://W.YOUTU.BE/ev il", "HTTPS://W.YOUTU.BE/ev4il", "HTTPS://W.YOUTU.BE/e", "HTTPS://W.YOUTU.BE/6", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil?", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil=", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil:", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil/", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil.", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil-", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evileVil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evilEVIL", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evilev_il", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evilev il", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evilev4il", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evile", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil ", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil6", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil_", "HTTPS://W.YOUTU.BE/WATCH/?evilV=?evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV==evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=:evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=/evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=.evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=-evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=eVilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=EVILevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=ev_ilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=ev ilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=ev4ilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=eevil", "HTTPS://W.YOUTU.BE/WATCH/?evilV= evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=6evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=_evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evil", "HTTPS://W.YOUTU.BE/WATCH/?evilv=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?evila=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilA=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?evilevilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/??V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?=V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?:V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?/V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?.V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?-V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?eVilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?EVILV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?ev_ilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?ev ilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?ev4ilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?eV=evilevil", "HTTPS://W.YOUTU.BE/WATCH/? V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?6V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?_V=evilevil", "HTTPS://W.YOUTU.BE/WATCH/?V=evilevil", "HTTPS://W.YOUTU.BE/WATCH//?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATCH?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATCHWATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE//?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATCh/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATCa/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATCA/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATcH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATaH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WATAH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WAtCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WAaCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WAACH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WbTCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WaTCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/WBTCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/wATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/aATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/AATCH/?evilV=evilevil", "HTTPS://W.YOUTU/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.Be/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.bE/WATCH/?evilV=evilevil", "HTTPS://W.YOUTu.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOUtU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOuTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YoUTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.yOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://W..YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://WYOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://WWWW.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://WWW.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://w.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://a.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://A.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://HTTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPSS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTP://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPs://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPa://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTPA://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTpS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTaS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTAS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTTTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HtTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HaTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "HATPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "hTTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "aTTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "ATTPS://W.YOUTU.BE/WATCH/?evilV=evilevil", "YOUTU/evil", "YOUTU/?V=evil", "HTTPS://W.YOUTUBE.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/evil", "HTTPS://W.YOUTU.BE/WATCH/?evilV=evilevil"], "nonMatches": ["HTTPS://W.YOUTUBE.COa/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.COA/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.CaM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.CAM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.aOM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBE.AOM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBa.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUBA.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUaE.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTUAE.COM/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BE/?", "HTTPS://W.YOUTU.BE/=", "HTTPS://W.YOUTU.BE/:", "HTTPS://W.YOUTU.BE//", "HTTPS://W.YOUTU.BE/.", "HTTPS://W.YOUTU.BE/ ", "HTTPS://W.YOUTU.BE/_", "HTTPS://W.YOUTU.BE/", "HTTPS://W.YOUTU.BE.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.Ba/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.BA/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.aE/WATCH/?evilV=evilevil", "HTTPS://W.YOUTU.AE/WATCH/?evilV=evilevil", "HTTPS://W.YOUTa.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOUTA.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOUaU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOUAU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOaTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YOATU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YaUTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.YAUTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.aOUTU.BE/WATCH/?evilV=evilevil", "HTTPS://W.AOUTU.BE/WATCH/?evilV=evilevil"]}, {"regex": "^(\\+971[\\s]{0,1}[\\-]{0,1}[\\s]{0,1}|[\\s]{0,1}0)(5[056]{1})[\\s]{0,1}[\\-]{0,1}[\\s]{0,1}[1-9]{1}[0-9]{6}$", "exceptionStackTrace": null, "matches": ["056 - 1000000", "+971 - 56 -1000000", "+971 - 56  1000000", "+971 - 56- 1000000", "+971 - 55 - 1000000", "+971 - 50 - 1000000", "+971 -56 - 1000000", "+971  56 - 1000000", "+971- 56 - 1000000", "0561000000", "+971561000000", " 056 - 1000000", "+971 - 56 - 1000000"], "nonMatches": ["  056 - 1000000", "+971 - 56 - 10000000", "+971 - 56 - 100000", "+971 - 56 - 11000000", "+971 - 56 - 000000", "+971 - 56 - 0000000", "+971 - 56 -  1000000", "+971 - 56 -- 1000000", "+971 - 56  - 1000000", "+971 - 566 - 1000000", "+971 - 5 - 1000000", "+971 - 51 - 1000000", "+971 -  56 - 1000000", "+971 -- 56 - 1000000", "+971  - 56 - 1000000"]}, {"regex": "(\\d{6}[-\\s]?\\d{12})|(\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4})", "exceptionStackTrace": null, "matches": ["0000-0000-0000-00000", "0000-0000-00000000", "0000-0000-0000 0000", "0000-00000000-0000", "0000-0000 0000-0000", "00000000-0000-0000", "0000 0000-0000-0000", "00000-0000-0000-0000", "000000-0000000000000", "000000 000000000000", "0000000-000000000000", "00000-000000000000", "0000000000000000", "000000000000000000", "0000-0000-0000-0000", "000000-000000000000"], "nonMatches": ["0000-0000-0000-000", "0000-0000-0000--0000", "0000-0000-00000-0000", "0000-0000-000-0000", "0000-0000--0000-0000", "0000-00000-0000-0000", "0000-000-0000-0000", "0000--0000-0000-0000", "000-0000-0000-0000", "000000-00000000000", "000000--000000000000"]}, {"regex": "(\\s*\\(?0\\d{4}\\)?\\s*\\d{6}\\s*)|(\\s*\\(?0\\d{3}\\)?\\s*\\d{3}\\s*\\d{4}\\s*)", "exceptionStackTrace": null, "matches": [" (0000) 000 0000  ", " (0000) 000 0000", " (0000) 000 00000 ", " (0000) 000  0000 ", " (0000) 0000000 ", " (0000)  000 0000 ", " (0000)000 0000 ", " (0000 000 0000 ", " (00000) 000 0000 ", " ((0000) 000 0000 ", " 0000) 000 0000 ", "  (0000) 000 0000 ", "(0000) 000 0000 ", " (00000) 000000  ", " (00000) 000000", " (00000) 0000000 ", " (00000)  000000 ", " (00000)000000 ", " (00000 000000 ", " (000000) 000000 ", " ((00000) 000000 ", " 00000) 000000 ", "  (00000) 000000 ", "(00000) 000000 ", "00000000000", " (0000) 000 0000 ", " (00000) 000000 "], "nonMatches": [" (0000) 000 000 ", " (0000) 0000 0000 ", " (0000) 00 0000 ", " (0000)) 000 0000 ", " (000) 000 0000 ", " (00000) 00000 ", " (00000)) 000000 ", " (0000) 000000 "]}, {"regex": "&quot;{(<h)([1-6])(.id=\\&quot;)(.+?\\&quot;)(.+?)(</h[1-6])}&quot;,&#39;\\\\2~<a href=&quot;#\\\\4\\\\5</a&#39;", "exceptionStackTrace": null, "matches": ["&quot;{<h1aid=&quot;evil&quot;~</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;}</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;{</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;\\</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;=</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;<</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;;</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;/</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;,</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;&</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;#</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;eVil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;EVIL</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;ev_il</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;ev il</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;ev4il</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;e</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot; </h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;6</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;_</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;~&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;}&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;{&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;\\&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;=&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;<&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;;&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;/&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;,&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;&&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;#&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;eVil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;EVIL&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;ev_il&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;ev il&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;ev4il&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;e&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot; &quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;6&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;_&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1~id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1}id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1{id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1\\id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1Aid=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1=id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1<id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1;id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h10id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1/id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1,id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1&id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1#id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1 id=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;"], "nonMatches": ["&quot;{<h1aid=&quot;evil&quot;evil</h0}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;evil&quot;</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h1aid=&quot;&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;", "&quot;{<h0aid=&quot;evil&quot;evil</h1}&quot;,&#39;\\2~<a href=&quot;#\\4\\5</a&#39;"]}, {"regex": "^(\\$)?(\\s)?(\\-)?((\\d+)|(\\d{1,3})(\\,\\d{3})*)(\\.\\d{2,})?$", "exceptionStackTrace": null, "matches": ["$ -0,000,000.00", "$ -000,000.00", "$ -0", "$ -00.00", "$ 0.00", "$-0.00", " -0.00", "0", "$ -0,000.00", "$ -0.00"], "nonMatches": ["$ -0,0000.00", "$ -0,00.00", "$ -0000,000.00", "$ -,000.00", "$ -0.00.00", "$ -0.0", "$ -.00", "$ --0.00", "$  -0.00", "$$ -0.00"]}, {"regex": "dsfs", "exceptionStackTrace": null, "matches": ["dsfs"], "nonMatches": []}, {"regex": "regexp {[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+}", "exceptionStackTrace": null, "matches": ["regexp {0.0.0.00}", "regexp {0.0.00.0}", "regexp {0.00.0.0}", "regexp {00.0.0.0}", "regexp {0.0.0.0}"], "nonMatches": ["regexp {0.0.0.}", "regexp {0.0..0}", "regexp {0..0.0}", "regexp {.0.0.0}"]}, {"regex": "^(9\\d{2})([ \\-]?)([7]\\d|8[0-8])([ \\-]?)(\\d{4})$", "exceptionStackTrace": null, "matches": ["900-700000", "900-70 0000", "90070-0000", "900 70-0000", "900800000", "900700000", "900-80-0000", "900-70-0000"], "nonMatches": ["900-89-0000", "900-70-00000", "900-70-000", "900-70--0000", "900--70-0000", "9000-70-0000", "90-70-0000"]}, {"regex": "\\*((?!\\*/)[\\d\\D\\s])*\\*", "exceptionStackTrace": null, "matches": ["*  *", "*a*", "*_*", "*A*", "*0*", "*/*", "***", "**", "* *"], "nonMatches": []}, {"regex": "((^\\d{8})|(^\\d{2}[ ]\\d{2}[ ]\\d{2}[ ]\\d{2})|(^\\d{4}[ ]\\d{4}))$", "exceptionStackTrace": null, "matches": ["0000 0000", "00 00 00 00", "00000000"], "nonMatches": ["0000 00000", "0000 000", "00000 0000", "000 0000", "00 00 00 000", "00 00 00 0", "00 00 000 00", "00 00 0 00", "00 000 00 00", "00 0 00 00", "000 00 00 00", "0 00 00 00", "000000000", "0000000"]}, {"regex": "^(?<field1>[^,]+),(?<field2>[^,]+),(?<field3>[^,]+)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<f"}, "matches": []}, {"regex": "<(\\w+)(\\s(\\w*=&quot;.*?&quot;)?)*((/>)|((/*?)>.*?</\\1>))", "exceptionStackTrace": null, "matches": ["<evil evil=&quot;evil&quot;/>></evil>", "<evil evil=&quot;evil&quot;/>=</evil>", "<evil evil=&quot;evil&quot;/><</evil>", "<evil evil=&quot;evil&quot;/>;</evil>", "<evil evil=&quot;evil&quot;/>/</evil>", "<evil evil=&quot;evil&quot;/>&</evil>", "<evil evil=&quot;evil&quot;/>eVil</evil>", "<evil evil=&quot;evil&quot;/>EVIL</evil>", "<evil evil=&quot;evil&quot;/>ev_il</evil>", "<evil evil=&quot;evil&quot;/>ev il</evil>", "<evil evil=&quot;evil&quot;/>ev4il</evil>", "<evil evil=&quot;evil&quot;/>e</evil>", "<evil evil=&quot;evil&quot;/> </evil>", "<evil evil=&quot;evil&quot;/>6</evil>", "<evil evil=&quot;evil&quot;/>_</evil>", "<evil evil=&quot;evil&quot;/></evil>", "<evil evil=&quot;evil&quot;//>evil</evil>", "<evil evil=&quot;evil&quot;>evil</evil>", "<evil evil=&quot;evil&quot; evil=&quot;evil&quot;/>", "<evil evil=&quot;evil&quot;evil=&quot;evil&quot;/>", "<evil />", "<evil evil=&quot;>&quot;/>", "<evil evil=&quot;=&quot;/>", "<evil evil=&quot;<&quot;/>", "<evil evil=&quot;;&quot;/>", "<evil evil=&quot;/&quot;/>", "<evil evil=&quot;&&quot;/>", "<evil evil=&quot;eVil&quot;/>", "<evil evil=&quot;EVIL&quot;/>", "<evil evil=&quot;ev_il&quot;/>", "<evil evil=&quot;ev il&quot;/>", "<evil evil=&quot;ev4il&quot;/>", "<evil evil=&quot;e&quot;/>", "<evil evil=&quot; &quot;/>", "<evil evil=&quot;6&quot;/>", "<evil evil=&quot;_&quot;/>", "<evil evil=&quot;&quot;/>", "<evil eVil=&quot;evil&quot;/>", "<evil EVIL=&quot;evil&quot;/>", "<evil ev_il=&quot;evil&quot;/>", "<evil ev4il=&quot;evil&quot;/>", "<evil e=&quot;evil&quot;/>", "<evil  =&quot;evil&quot;/>", "<evil 6=&quot;evil&quot;/>", "<evil _=&quot;evil&quot;/>", "<evil =&quot;evil&quot;/>", "<eVil evil=&quot;evil&quot;/>", "<EVIL evil=&quot;evil&quot;/>", "<ev_il evil=&quot;evil&quot;/>", "<ev4il evil=&quot;evil&quot;/>", "<e evil=&quot;evil&quot;/>", "<6 evil=&quot;evil&quot;/>", "<_ evil=&quot;evil&quot;/>", "<evil></evil>", "<evil/>", "<evil evil=&quot;evil&quot;/>evil</evil>", "<evil evil=&quot;evil&quot;/>"], "nonMatches": ["<evil ev il=&quot;evil&quot;/>", "<ev il evil=&quot;evil&quot;/>", "<  evil=&quot;evil&quot;/>", "< evil=&quot;evil&quot;/>"]}, {"regex": "(&quot;(([a-zA-Z]:)|(\\\\\\\\[^/\\\\:\\*\\?&quot;&quot;<>\\|]+(\\\\[a-zA-Z]\\$)?))\\\\([^/\\\\:\\*\\?&quot;&quot;<>\\|]+\\\\)*[^/\\\\:\\*\\?&quot;&quot;<>\\|]+(\\.[^/\\\\:\\*\\?&quot;&quot;<>\\|]+[^/\\\\:\\*\\?&quot;&quot;<>\\|\\s])?&quot;)|((([a-zA-Z]:)|(\\\\\\\\[^/\\\\:\\*\\?&quot;&quot;<>\\|\\s]+(\\\\[a-zA-Z]\\$)?))\\\\([^/\\\\:\\*\\?&quot;&quot;<>\\|\\s]+\\\\)*[^/\\\\:\\*\\?&quot;&quot;<>\\|\\s]+(\\.[a-zA-Z0-9]+)?)", "exceptionStackTrace": null, "matches": ["\\\\evil\\A$\\A$\\evil\\evil.evil", "\\\\evil\\evil\\evil.evil", "\\\\evil\\a$\\evil\\evil.evil", "\\\\\\\\A$\\evil\\evil.evil", "\\\\.\\A$\\evil\\evil.evil", "\\\\$\\A$\\evil\\evil.evil", "\\\\eVil\\A$\\evil\\evil.evil", "\\\\EVIL\\A$\\evil\\evil.evil", "\\\\ev_il\\A$\\evil\\evil.evil", "\\\\ev4il\\A$\\evil\\evil.evil", "\\\\e\\A$\\evil\\evil.evil", "\\\\6\\A$\\evil\\evil.evil", "\\\\_\\A$\\evil\\evil.evil", "\\\\\\A$\\evil\\evil.evil", "A:\\evil\\evil.evil.evil", "A:\\evil\\evil", "A:\\evil\\evil.eVil", "A:\\evil\\evil.EVIL", "A:\\evil\\evil.ev_il", "A:\\evil\\evil.ev il", "A:\\evil\\evil.ev4il", "A:\\evil\\evil.e", "A:\\evil\\evil. ", "A:\\evil\\evil.6", "A:\\evil\\evil._", "A:\\evil\\evil.", "A:\\evil\\|.evil", "A:\\evil\\\\.evil", "A:\\evil\\?.evil", "A:\\evil\\>.evil", "A:\\evil\\<.evil", "A:\\evil\\;.evil", "A:\\evil\\:.evil", "A:\\evil\\/.evil", "A:\\evil\\..evil", "A:\\evil\\*.evil", "A:\\evil\\&.evil", "A:\\evil\\$.evil", "A:\\evil\\eVil.evil", "A:\\evil\\EVIL.evil", "A:\\evil\\ev_il.evil", "A:\\evil\\ev il.evil", "A:\\evil\\ev4il.evil", "A:\\evil\\e.evil", "A:\\evil\\ .evil", "A:\\evil\\6.evil", "A:\\evil\\_.evil", "A:\\evil\\.evil", "A:\\evil\\evil\\evil.evil", "A:\\evil.evil", "A:\\.\\evil.evil", "A:\\$\\evil.evil", "A:\\eVil\\evil.evil", "A:\\EVIL\\evil.evil", "A:\\ev_il\\evil.evil", "A:\\ev il\\evil.evil", "A:\\ev4il\\evil.evil", "A:\\e\\evil.evil", "A:\\6\\evil.evil", "A:\\_\\evil.evil", "a:\\evil\\evil.evil", "&quot;\\\\evil\\A$\\A$\\evil\\evil.evila&quot;", "&quot;\\\\evil\\evil\\evil.evila&quot;", "&quot;\\\\evil\\a$\\evil\\evil.evila&quot;", "&quot;\\\\\\\\A$\\evil\\evil.evila&quot;", "&quot;\\\\.\\A$\\evil\\evil.evila&quot;", "&quot;\\\\$\\A$\\evil\\evil.evila&quot;", "&quot;\\\\eVil\\A$\\evil\\evil.evila&quot;", "&quot;\\\\EVIL\\A$\\evil\\evil.evila&quot;", "&quot;\\\\ev_il\\A$\\evil\\evil.evila&quot;", "&quot;\\\\ev il\\A$\\evil\\evil.evila&quot;", "&quot;\\\\ev4il\\A$\\evil\\evil.evila&quot;", "&quot;\\\\e\\A$\\evil\\evil.evila&quot;", "&quot;\\\\ \\A$\\evil\\evil.evila&quot;", "&quot;\\\\6\\A$\\evil\\evil.evila&quot;", "&quot;\\\\_\\A$\\evil\\evil.evila&quot;", "&quot;\\\\\\A$\\evil\\evil.evila&quot;", "&quot;A:\\evil\\evil.evila.evila&quot;", "&quot;A:\\evil\\evil&quot;", "&quot;A:\\evil\\evil.evil|&quot;", "&quot;A:\\evil\\evil.evilu&quot;", "&quot;A:\\evil\\evil.evilt&quot;", "&quot;A:\\evil\\evil.evilq&quot;", "&quot;A:\\evil\\evil.evilo&quot;", "&quot;A:\\evil\\evil.evil\\&quot;", "&quot;A:\\evil\\evil.evilA&quot;", "&quot;A:\\evil\\evil.evil?&quot;", "&quot;A:\\evil\\evil.evil>&quot;", "&quot;A:\\evil\\evil.evil<&quot;", "&quot;A:\\evil\\evil.evil;&quot;", "&quot;A:\\evil\\evil.evil:&quot;", "&quot;A:\\evil\\evil.evil0&quot;", "&quot;A:\\evil\\evil.evil/&quot;", "&quot;A:\\evil\\evil.evil.&quot;", "&quot;A:\\evil\\evil.evil*&quot;", "&quot;A:\\evil\\evil.evil&&quot;", "&quot;A:\\evil\\evil.evil$&quot;", "&quot;A:\\evil\\evil.evil &quot;", "&quot;A:\\evil\\evil.|a&quot;", "&quot;A:\\evil\\evil.\\a&quot;", "&quot;A:\\evil\\evil.?a&quot;", "&quot;A:\\evil\\evil.>a&quot;", "&quot;A:\\evil\\evil.<a&quot;", "&quot;A:\\evil\\evil.;a&quot;", "&quot;A:\\evil\\evil.:a&quot;", "&quot;A:\\evil\\evil./a&quot;", "&quot;A:\\evil\\evil..a&quot;", "&quot;A:\\evil\\evil.*a&quot;", "&quot;A:\\evil\\evil.&a&quot;", "&quot;A:\\evil\\evil.$a&quot;", "&quot;A:\\evil\\evil.eVila&quot;", "&quot;A:\\evil\\evil.EVILa&quot;", "&quot;A:\\evil\\evil.ev_ila&quot;", "&quot;A:\\evil\\evil.ev ila&quot;", "&quot;A:\\evil\\evil.ev4ila&quot;", "&quot;A:\\evil\\evil.ea&quot;", "&quot;A:\\evil\\evil. a&quot;", "&quot;A:\\evil\\evil.6a&quot;", "&quot;A:\\evil\\evil._a&quot;", "&quot;A:\\evil\\evil.a&quot;", "&quot;A:\\evil\\|.evila&quot;", "&quot;A:\\evil\\\\.evila&quot;", "&quot;A:\\evil\\?.evila&quot;", "&quot;A:\\evil\\>.evila&quot;", "&quot;A:\\evil\\<.evila&quot;", "&quot;A:\\evil\\;.evila&quot;", "&quot;A:\\evil\\:.evila&quot;", "&quot;A:\\evil\\/.evila&quot;", "&quot;A:\\evil\\..evila&quot;", "&quot;A:\\evil\\*.evila&quot;", "&quot;A:\\evil\\&.evila&quot;", "&quot;A:\\evil\\$.evila&quot;", "&quot;A:\\evil\\eVil.evila&quot;", "&quot;A:\\evil\\EVIL.evila&quot;", "&quot;A:\\evil\\ev_il.evila&quot;", "&quot;A:\\evil\\ev il.evila&quot;", "&quot;A:\\evil\\ev4il.evila&quot;", "&quot;A:\\evil\\e.evila&quot;", "&quot;A:\\evil\\ .evila&quot;", "&quot;A:\\evil\\6.evila&quot;", "&quot;A:\\evil\\_.evila&quot;", "&quot;A:\\evil\\.evila&quot;", "&quot;A:\\evil\\evil\\evil.evila&quot;", "&quot;A:\\evil.evila&quot;", "&quot;A:\\.\\evil.evila&quot;", "&quot;A:\\$\\evil.evila&quot;", "&quot;A:\\eVil\\evil.evila&quot;", "&quot;A:\\EVIL\\evil.evila&quot;", "&quot;A:\\ev_il\\evil.evila&quot;", "&quot;A:\\ev il\\evil.evila&quot;", "&quot;A:\\ev4il\\evil.evila&quot;", "&quot;A:\\e\\evil.evila&quot;", "&quot;A:\\ \\evil.evila&quot;", "&quot;A:\\6\\evil.evila&quot;", "&quot;A:\\_\\evil.evila&quot;", "&quot;a:\\evil\\evil.evila&quot;", "\\\\evil\\evil", "A:\\evil", "&quot;\\\\evil\\evil&quot;", "&quot;A:\\evil&quot;", "\\\\evil\\A$\\evil\\evil.evil", "A:\\evil\\evil.evil", "&quot;\\\\evil\\A$\\evil\\evil.evila&quot;", "&quot;A:\\evil\\evil.evila&quot;"], "nonMatches": ["\\\\|\\A$\\evil\\evil.evil", "\\\\?\\A$\\evil\\evil.evil", "\\\\>\\A$\\evil\\evil.evil", "\\\\<\\A$\\evil\\evil.evil", "\\\\;\\A$\\evil\\evil.evil", "\\\\:\\A$\\evil\\evil.evil", "\\\\/\\A$\\evil\\evil.evil", "\\\\*\\A$\\evil\\evil.evil", "\\\\&\\A$\\evil\\evil.evil", "\\\\ev il\\A$\\evil\\evil.evil", "\\\\ \\A$\\evil\\evil.evil", "A:\\|\\evil.evil", "A:\\\\\\evil.evil", "A:\\?\\evil.evil", "A:\\>\\evil.evil", "A:\\<\\evil.evil", "A:\\;\\evil.evil", "A:\\:\\evil.evil", "A:\\/\\evil.evil", "A:\\*\\evil.evil", "A:\\&\\evil.evil", "A:\\ \\evil.evil", "A:\\\\evil.evil", "&quot;\\\\|\\A$\\evil\\evil.evila&quot;", "&quot;\\\\?\\A$\\evil\\evil.evila&quot;", "&quot;\\\\>\\A$\\evil\\evil.evila&quot;", "&quot;\\\\<\\A$\\evil\\evil.evila&quot;", "&quot;\\\\;\\A$\\evil\\evil.evila&quot;", "&quot;\\\\:\\A$\\evil\\evil.evila&quot;", "&quot;\\\\/\\A$\\evil\\evil.evila&quot;", "&quot;\\\\*\\A$\\evil\\evil.evila&quot;", "&quot;\\\\&\\A$\\evil\\evil.evila&quot;", "&quot;A:\\|\\evil.evila&quot;", "&quot;A:\\\\\\evil.evila&quot;", "&quot;A:\\?\\evil.evila&quot;", "&quot;A:\\>\\evil.evila&quot;", "&quot;A:\\<\\evil.evila&quot;", "&quot;A:\\;\\evil.evila&quot;", "&quot;A:\\:\\evil.evila&quot;", "&quot;A:\\/\\evil.evila&quot;", "&quot;A:\\*\\evil.evila&quot;", "&quot;A:\\&\\evil.evila&quot;", "&quot;A:\\\\evil.evila&quot;"]}, {"regex": "(^\\+[0-9]{2}|^\\+[0-9]{2}\\(0\\)|^\\(\\+[0-9]{2}\\)\\(0\\)|^00[0-9]{2}|^0)([0-9]{9}$|[0-9\\-\\s]{10}$)", "exceptionStackTrace": null, "matches": ["00000000000000", "+000---------", "+00 ---------", "+000000000000", "0000000000", "0000000000000", "(+00)(0)000000000", "+00(0)000000000", "+00----------", "+00000000000"], "nonMatches": ["000000000000", "(+000)(0)000000000", "(+0)(0)000000000", "+000(0)000000000", "+0(0)000000000", "+00-----------", "+00---------", "+0000000000"]}, {"regex": "^[0-9]{4}\\s{0,1}[a-zA-Z]{2}$", "exceptionStackTrace": null, "matches": ["0000 aA", "0000AA", "0000 AA"], "nonMatches": ["0000 AAA", "0000 A", "0000  AA", "00000 AA", "000 AA"]}, {"regex": "([^_.]([a-zA-Z0-9_]*[.]?[a-zA-Z0-9_]+[^_]){2})@([a-z0-9]+[.]([a-z]{2,3}|[a-z]{2,3}[.][a-z]{2,3}))", "exceptionStackTrace": null, "matches": ["aevil.evilaevil.evila@evil.aa.aaaa", "aevil.evilaevil.evila@evil.aa.aaa", "aevil.evilaevil.evila@evil.aa.a", "aevil.evilaevil.evila@evil.aaaa.aa", "aevil.evilaevil.evila@evil.aaa.aa", "aevil.evilaevil.evila@evil.aaaa", "aevil.evilaevil.evila@evil.aaa", "aevil.evilaevil.evila@ev4il.aa", "aevil.evilaevil.evila@e.aa", "aevil.evilaevil.evila@6.aa", "aevil.evilaevil.evilaevil.evila@evil.aa", "aevil.evila@evil.aa", "aevil.evil_evil.evila@evil.aa", "aevil.evilAevil.evila@evil.aa", "aevil.evil@evil.evila@evil.aa", "aevil.evil0evil.evila@evil.aa", "aevil.evil.evil.evila@evil.aa", "aevil.evil evil.evila@evil.aa", "aevil.@aevil.evila@evil.aa", "aevil..aevil.evila@evil.aa", "aevil.eVilaevil.evila@evil.aa", "aevil.EVILaevil.evila@evil.aa", "aevil.ev_ilaevil.evila@evil.aa", "aevil.ev ilaevil.evila@evil.aa", "aevil.ev4ilaevil.evila@evil.aa", "aevil.eaevil.evila@evil.aa", "aevil. aevil.evila@evil.aa", "aevil.6aevil.evila@evil.aa", "aevil._aevil.evila@evil.aa", "aevil.aevil.evila@evil.aa", "aevil..evilaevil.evila@evil.aa", "aevilevilaevil.evila@evil.aa", "a@.evilaevil.evila@evil.aa", "a..evilaevil.evila@evil.aa", "aeVil.evilaevil.evila@evil.aa", "aEVIL.evilaevil.evila@evil.aa", "aev_il.evilaevil.evila@evil.aa", "aev il.evilaevil.evila@evil.aa", "aev4il.evilaevil.evila@evil.aa", "ae.evilaevil.evila@evil.aa", "a .evilaevil.evila@evil.aa", "a6.evilaevil.evila@evil.aa", "a_.evilaevil.evila@evil.aa", "a.evilaevil.evila@evil.aa", "_evil.evilaevil.evila@evil.aa", "Aevil.evilaevil.evila@evil.aa", "@evil.evilaevil.evila@evil.aa", "0evil.evilaevil.evila@evil.aa", ".evil.evilaevil.evila@evil.aa", " evil.evilaevil.evila@evil.aa", "aevilaevil.evila@evil.aa.aa", "aevilaevil.evila@evil.aa", "aevil.evilaevil.evila@evil.aa.aa", "aevil.evilaevil.evila@evil.aa"], "nonMatches": ["aevil.evilaevil.evila@evil.a.aa", "aevil.evilaevil.evila@evil.a", "aevil.evilaevil.evila@eVil.aa", "aevil.evilaevil.evila@EVIL.aa", "aevil.evilaevil.evila@ev_il.aa", "aevil.evilaevil.evila@ev il.aa", "aevil.evilaevil.evila@ .aa", "aevil.evilaevil.evila@_.aa", "aevil.evilaevil.evila@.aa"]}, {"regex": "^\\[0-9]{4}\\-\\[0-9]{2}\\-\\[0-9]{2}$", "exceptionStackTrace": null, "matches": ["[0-9]]]]-[0-9]]-[0-9]]"], "nonMatches": ["[0-9]]]]-[0-9]]-[0-9]]]", "[0-9]]]]-[0-9]]-[0-9]", "[0-9]]]]-[0-9]]]-[0-9]]", "[0-9]]]]-[0-9]-[0-9]]", "[0-9]]]]]-[0-9]]-[0-9]]", "[0-9]]]-[0-9]]-[0-9]]"]}, {"regex": "(?:\\d|I{1,3})?\\s?\\w{2,}\\.?\\s*\\d{1,}\\:\\d{1,}-?,?\\d{0,2}(?:,\\d{0,2}){0,2}", "exceptionStackTrace": null, "matches": ["IIII aa. 0:0-,0,0", "III aa. 0:0-,0,0", "0 aa. 0:0-,0,0,0,0", "0 aa. 0:0-,0,0,0", "0 aa. 0:0-,0", "0 aa. 0:0-,0,000", "0 aa. 0:0-,0,00", "0 aa. 0:0-,0,", "0 aa. 0:0-,000,0", "0 aa. 0:0-,00,0", "0 aa. 0:0-,,0", "0 aa. 0:0-,,0,0", "0 aa. 0:0-0,0", "0 aa. 0:0--,0,0", "0 aa. 0:0,0,0", "0 aa. 0:00-,0,0", "0 aa. 00:0-,0,0", "0 aa.  0:0-,0,0", "0 aa.0:0-,0,0", "0 aa 0:0-,0,0", "0 _a. 0:0-,0,0", "0 Aa. 0:0-,0,0", "0 0a. 0:0-,0,0", "0  aa. 0:0-,0,0", "0aa. 0:0-,0,0", "00 aa. 0:0-,0,0", " aa. 0:0-,0,0", "aa0:0", "I aa. 0:0-,0,0", "0 aa. 0:0-,0,0"], "nonMatches": ["0 aa. 0:-,0,0", "0 aa. :0-,0,0", "0 aa.. 0:0-,0,0", "0 a. 0:0-,0,0"]}, {"regex": "(?:\\+?1[ .*-]?)?(?:\\(? ?)?\\d{3}(?: ?\\)?)? ?(?:\\*|(?:\\.|-){1,2})? ?\\d{3} ?(?:\\*|(?:\\.|-){1,2})? ?\\d{4} ", "exceptionStackTrace": null, "matches": ["+1-( 000 ) .. 000 * 0000 ", "+1-( 000 ) * 000 .. 0000 ", "+1-( 000 ) * 000 *0000 ", "+1-( 000 ) * 000  0000 ", "+1-( 000 ) * 000* 0000 ", "+1-( 000 ) *000 * 0000 ", "+1-( 000 )  000 * 0000 ", "+1-( 000 )* 000 * 0000 ", "+1-( 000 * 000 * 0000 ", "+1-( 000  * 000 * 0000 ", "+1-( 000) * 000 * 0000 ", "+1-( 0000 ) * 000 * 0000 ", "+1-( ( 000 ) * 000 * 0000 ", "+1-000 ) * 000 * 0000 ", "+1-(  000 ) * 000 * 0000 ", "+1-(000 ) * 000 * 0000 ", "+1-(( 000 ) * 000 * 0000 ", "+1- 000 ) * 000 * 0000 ", "+1-+1-( 000 ) * 000 * 0000 ", "( 000 ) * 000 * 0000 ", "+1--( 000 ) * 000 * 0000 ", "+1( 000 ) * 000 * 0000 ", "+1.( 000 ) * 000 * 0000 ", "+1*( 000 ) * 000 * 0000 ", "+1 ( 000 ) * 000 * 0000 ", "++1-( 000 ) * 000 * 0000 ", "1-( 000 ) * 000 * 0000 ", "0000000000 ", "+1-( 000 ) - 000 * 0000 ", "+1-( 000 ) . 000 * 0000 ", "+1-( 000 ) * 000 - 0000 ", "+1-( 000 ) * 000 . 0000 ", "+1-( 000 ) * 000 * 0000 "], "nonMatches": ["+1-( 000 ) ... 000 * 0000 ", "+1-( 000 ) * 000 ... 0000 ", "+1-( 000 ) * 000 * 00000 ", "+1-( 000 ) * 000 * 000 ", "+1-( 000 ) * 000 *  0000 ", "+1-( 000 ) * 000 ** 0000 ", "+1-( 000 ) * 000  * 0000 ", "+1-( 000 ) * 0000 * 0000 ", "+1-( 000 ) * 00 * 0000 ", "+1-( 000 ) *  000 * 0000 ", "+1-( 000 ) ** 000 * 0000 ", "+1-( 000 )  * 000 * 0000 ", "+1-( 000 ) ) * 000 * 0000 ", "+1-( 000 )) * 000 * 0000 ", "+1-( 000  ) * 000 * 0000 ", "+1-( 00 ) * 000 * 0000 "]}, {"regex": "frdgvrg", "exceptionStackTrace": null, "matches": ["frdgvrg"], "nonMatches": []}, {"regex": "(-?(\\d*\\.\\d{1}?\\d*|\\d{1,}))", "exceptionStackTrace": null, "matches": ["-00", "-0.000", "-0.0", "-00.00", "-.00", "--0.00", "0.00", "0", ".0", "-0", "-0.00"], "nonMatches": ["-"]}, {"regex": "[0-9A-Za-z]", "exceptionStackTrace": null, "matches": ["A", "0", "a"], "nonMatches": []}, {"regex": "[^A-Za-z0-9]", "exceptionStackTrace": null, "matches": ["_", " "], "nonMatches": ["a", "A", "0"]}, {"regex": "[a-z0-9]{1,11}", "exceptionStackTrace": null, "matches": ["000000000000", "00000000000", "a", "0"], "nonMatches": [""]}, {"regex": "^([0-9]*\\-?\\ ?\\/?[0-9]*)$", "exceptionStackTrace": null, "matches": ["0- /00", "0- /", "0- 0", "0-/0", "0 /0", "00- /0", "- /0", "", "0- /0"], "nonMatches": ["0- //0", "0-  /0", "0-- /0"]}, {"regex": "^[A-Za-z]{6}[0-9]{2}[A-Za-z]{1}[0-9]{2}[A-Za-z]{1}[0-9]{3}[A-Za-z]{1}$", "exceptionStackTrace": null, "matches": ["aaaaaa00a00a000A", "aaaaaa00a00A000a", "aaaaaa00A00a000a", "Aaaaaa00a00a000a", "aaaaaa00a00a000a"], "nonMatches": ["aaaaaa00a00a000aa", "aaaaaa00a00a000", "aaaaaa00a00a0000a", "aaaaaa00a00a00a", "aaaaaa00a00aa000a", "aaaaaa00a00000a", "aaaaaa00a000a000a", "aaaaaa00a0a000a", "aaaaaa00aa00a000a", "aaaaaa0000a000a", "aaaaaa000a00a000a", "aaaaaa0a00a000a", "aaaaaaa00a00a000a", "aaaaa00a00a000a"]}, {"regex": "(^([A-Za-z])([-_.\\dA-Za-z]{1,10})([\\dA-Za-z]{1}))(@)(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([\\dA-Za-z{1}][-_.\\dA-Za-z]{1,25})\\.([A-Za-z]{2,4}))$)", "exceptionStackTrace": null, "matches": ["a.a@}..aaaa", "a.a@}..Aa", "a.a@}..........................aa", "a.a@}a.aa", "a.a@}_.aa", "a.a@}A.aa", "a.a@}0.aa", "a.a@}-.aa", "a.a@{..aa", "a.a@a..aa", "a.a@A..aa", "a.a@1..aa", "a.a@0..aa", "a.a@0.0.0.0000", "a.a@0.0.0.000", "a.a@0.0.000.0", "a.a@0.000.0.0", "a.a@000.0.0.0", "a.aa@0.0.0.0", "a.A@0.0.0.0", "a.0@0.0.0.0", "a..........a@0.0.0.0", "aaa@0.0.0.0", "a_a@0.0.0.0", "aAa@0.0.0.0", "a0a@0.0.0.0", "a-a@0.0.0.0", "A.a@0.0.0.0", "a.a@}..aa", "a.a@0.0.0.0"], "nonMatches": ["a.a@}..aaaaa", "a.a@}..a", "a.a@}...........................aa", "a.a@}.aa", "a.a@0.0.0.", "a.a@0.0.0000.0", "a.a@0.0..0", "a.a@0.0000.0.0", "a.a@0..0.0", "a.a@0000.0.0.0", "a.a@.0.0.0", "a.@0.0.0.0", "a...........a@0.0.0.0", "aa@0.0.0.0"]}, {"regex": "http://www.chinamarblecarving.com/", "exceptionStackTrace": null, "matches": ["http://wwwachinamarblecarvingAcom/", "http://wwwachinamarblecarving:com/", "http://wwwachinamarblecarving0com/", "http://wwwachinamarblecarving/com/", "http://wwwachinamarblecarving com/", "http://wwwAchinamarblecarvingacom/", "http://www:chinamarblecarvingacom/", "http://www0chinamarblecarvingacom/", "http://www/chinamarblecarvingacom/", "http://www chinamarblecarvingacom/", "http://wwwachinamarblecarvingacom/"], "nonMatches": []}, {"regex": "^1?[1-9]$|^[1-2]0$", "exceptionStackTrace": null, "matches": ["1", "10", "11"], "nonMatches": ["00", "111"]}, {"regex": "dsfgbvh", "exceptionStackTrace": null, "matches": ["dsfgbvh"], "nonMatches": []}, {"regex": "^[+-]?(?(\\d{1,3},)(\\d{1,3}(,\\d{3})+)|\\d+)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character in group name '\\\\d{1,3},'"}, "matches": []}, {"regex": "^((?-i)A[cglmrstu]|B[aehikr]?|C[adeflmorsu]?|D[bsy]|E[rsu]|F[emf]?|G[ade]|H[efgos]?|I[nk]?|Kr?|L[airu]|M[dgnot]|N[abdeiop]|Os?|P[abdmortu]?|R[abefghnu]|S[bcegimnr]?|T[abcehil]|U(u[bhopqst])?|V|W|Xe|Yb?|Z[nr])$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "missing :"}, "matches": []}, {"regex": "^(\\+{1,2}?([0-9]{2,4}|\\([0-9]{2,4}\\))?(-|\\s)?)?[0-9]{2,3}(-|\\s)?[0-9\\-]{5,10}$", "exceptionStackTrace": null, "matches": ["+(0000)-00------", "+00-00-----------", "+00-00-0----", "+00-00-------", "+00-00-----", "+00-0000------", "+00-000------", "+00-0------", "00------", "+00--00------", "+0000------", "+-00------", "+00000-00------", "+0000-00------", "++00-00------", "00-00------", "00-----", "+(00)-00------", "+00 00------", "+00-00 -----", "+00-00------"], "nonMatches": ["+(00000)-00------", "+(0)-00------", "+00-00------------", "+00-+00-00------", "+0-00------", "+++00-00------"]}, {"regex": "^([+a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,6}|[0-9]{1,3})(\\]?)$", "exceptionStackTrace": null, "matches": ["evil@evil.evil.AA]", "evil@-.AA]", "evil@eVil.AA]", "evil@EVIL.AA]", "evil@ev4il.AA]", "evil@e.AA]", "evil@6.AA]", "evil@[0.0.0.000]", "evil@[0.0.0.AAAAAA]", "evil@[0.0.0.aA]", "evil@[0.0.000.AA]", "evil@[0.000.0.AA]", "evil@[000.0.0.AA]", ".@[0.0.0.AA]", "-@[0.0.0.AA]", "+@[0.0.0.AA]", "eVil@[0.0.0.AA]", "EVIL@[0.0.0.AA]", "ev_il@[0.0.0.AA]", "ev4il@[0.0.0.AA]", "e@[0.0.0.AA]", "6@[0.0.0.AA]", "_@[0.0.0.AA]", "evil@evil.AA", "evil@[0.0.0.0", "evil@[0.0.0.AA", "evil@evil.AA]", "evil@[0.0.0.0]", "evil@[0.0.0.AA]"], "nonMatches": ["evil@AA]", "evil@].AA]", "evil@[.AA]", "evil@@.AA]", "evil@..AA]", "evil@+.AA]", "evil@ev_il.AA]", "evil@ev il.AA]", "evil@ .AA]", "evil@_.AA]", "evil@.AA]", "evil@[0.0.0.0000]", "evil@[0.0.0.]", "evil@[0.0.0.AA]]", "evil@[0.0.0.AAAAAAA]", "evil@[0.0.0.A]", "evil@[0.0.0000.AA]", "evil@[0.0..AA]", "evil@[0.0000.0.AA]", "evil@[0..0.AA]", "evil@[0000.0.0.AA]", "evil@[.0.0.AA]", "]@[0.0.0.AA]", "[@[0.0.0.AA]", "@@[0.0.0.AA]", "ev il@[0.0.0.AA]", " @[0.0.0.AA]", "@[0.0.0.AA]"]}, {"regex": "^(ftp|https?):\\/\\/([^:]+:[^@]*@)?([a-zA-Z0-9][-_a-zA-Z0-9]*\\.)*([a-zA-Z0-9][-_a-zA-Z0-9]*){1}(:[0-9]+)?\\/?(((\\/|\\[|\\]|-|~|_|\\.|:|[a-zA-Z0-9]|%[0-9a-fA-F]{2})*)\\?((\\/|\\[|\\]|-|~|_|\\.|,|:|=||\\{|\\}|[a-zA-Z0-9]|%[0-9a-fA-F]{2})*\\&?)*)?(#([-_.a-zA-Z0-9]|%[a-fA-F0-9]{2})*)?$", "exceptionStackTrace": null, "matches": ["http://evil:evil@0evil.0evil:0//?/&#.", "ftp://evil:evil@0evil.0evil:0/%AAA?/&#.", "ftp://evil:evil@0evil.0evil:0/%aA?/&#.", "ftp://evil:evil@0evil.0evil:0/%0A?/&#.", "ftp://evil:evil@0evil.0evil:0/a?/&#.", "ftp://evil:evil@0evil.0evil:0/A?/&#.", "ftp://evil:evil@0evil.0evil:0//?%AAA&#.", "ftp://evil:evil@0evil.0evil:0//?%aA&#.", "ftp://evil:evil@0evil.0evil:0//?%0A&#.", "ftp://evil:evil@0evil.0evil:0//?a&#.", "ftp://evil:evil@0evil.0evil:0//?A&#.", "ftp://evil:evil@0evil.0evil:0//?{{&#.", "ftp://evil:evil@0evil.0evil:0//?/&#%000", "ftp://evil:evil@0evil.0evil:0//?/&#%a0", "ftp://evil:evil@0evil.0evil:0//?/&#%A0", "ftp://evil:evil@0evil.0evil:0//?/&", "ftp://evil:evil@0evil.0evil:0//?/&#..", "ftp://evil:evil@0evil.0evil:0//?/&#", "ftp://evil:evil@0evil.0evil:0//?/&#a", "ftp://evil:evil@0evil.0evil:0//?/&#_", "ftp://evil:evil@0evil.0evil:0//?/&#A", "ftp://evil:evil@0evil.0evil:0//?/&#0", "ftp://evil:evil@0evil.0evil:0//?/&#-", "ftp://evil:evil@0evil.0evil:0/#.", "ftp://evil:evil@0evil.0evil:0//?/&/&#.", "ftp://evil:evil@0evil.0evil:0//?#.", "ftp://evil:evil@0evil.0evil:0//?/&&#.", "ftp://evil:evil@0evil.0evil:0//?/#.", "ftp://evil:evil@0evil.0evil:0//?//&#.", "ftp://evil:evil@0evil.0evil:0//?&#.", "ftp://evil:evil@0evil.0evil:0///?/&#.", "ftp://evil:evil@0evil.0evil:0/?/&#.", "ftp://evil:evil@0evil.0evil:0:0//?/&#.", "ftp://evil:evil@0evil.0evil//?/&#.", "ftp://evil:evil@0evil.0evil:00//?/&#.", "ftp://evil:evil@0evil.0evil://?/&#.", "ftp://evil:evil@0evil.0evil0evil:0//?/&#.", "ftp://evil:evil@0evil.:0//?/&#.", "ftp://evil:evil@0evil.0~:0//?/&#.", "ftp://evil:evil@0evil.0]:0//?/&#.", "ftp://evil:evil@0evil.0[:0//?/&#.", "ftp://evil:evil@0evil.0::0//?/&#.", "ftp://evil:evil@0evil.0/:0//?/&#.", "ftp://evil:evil@0evil.0.:0//?/&#.", "ftp://evil:evil@0evil.0-:0//?/&#.", "ftp://evil:evil@0evil.0eVil:0//?/&#.", "ftp://evil:evil@0evil.0EVIL:0//?/&#.", "ftp://evil:evil@0evil.0ev_il:0//?/&#.", "ftp://evil:evil@0evil.0ev4il:0//?/&#.", "ftp://evil:evil@0evil.0e:0//?/&#.", "ftp://evil:evil@0evil.06:0//?/&#.", "ftp://evil:evil@0evil.0_:0//?/&#.", "ftp://evil:evil@0evil.0:0//?/&#.", "ftp://evil:evil@0evil.aevil:0//?/&#.", "ftp://evil:evil@0evil.Aevil:0//?/&#.", "ftp://evil:evil@0evil.0evil.0evil:0//?/&#.", "ftp://evil:evil@0evil:0//?/&#.", "ftp://evil:evil@0~.0evil:0//?/&#.", "ftp://evil:evil@0].0evil:0//?/&#.", "ftp://evil:evil@0[.0evil:0//?/&#.", "ftp://evil:evil@0:.0evil:0//?/&#.", "ftp://evil:evil@0/.0evil:0//?/&#.", "ftp://evil:evil@0..0evil:0//?/&#.", "ftp://evil:evil@0-.0evil:0//?/&#.", "ftp://evil:evil@0eVil.0evil:0//?/&#.", "ftp://evil:evil@0EVIL.0evil:0//?/&#.", "ftp://evil:evil@0ev_il.0evil:0//?/&#.", "ftp://evil:evil@0ev4il.0evil:0//?/&#.", "ftp://evil:evil@0e.0evil:0//?/&#.", "ftp://evil:evil@06.0evil:0//?/&#.", "ftp://evil:evil@0_.0evil:0//?/&#.", "ftp://evil:evil@0.0evil:0//?/&#.", "ftp://evil:evil@aevil.0evil:0//?/&#.", "ftp://evil:evil@Aevil.0evil:0//?/&#.", "ftp://0evil.0evil:0//?/&#.", "ftp://evil:~@0evil.0evil:0//?/&#.", "ftp://evil:}@0evil.0evil:0//?/&#.", "ftp://evil:{@0evil.0evil:0//?/&#.", "ftp://evil:]@0evil.0evil:0//?/&#.", "ftp://evil:[@0evil.0evil:0//?/&#.", "ftp://evil:?@0evil.0evil:0//?/&#.", "ftp://evil:=@0evil.0evil:0//?/&#.", "ftp://evil::@0evil.0evil:0//?/&#.", "ftp://evil:/@0evil.0evil:0//?/&#.", "ftp://evil:.@0evil.0evil:0//?/&#.", "ftp://evil:-@0evil.0evil:0//?/&#.", "ftp://evil:,@0evil.0evil:0//?/&#.", "ftp://evil:&@0evil.0evil:0//?/&#.", "ftp://evil:%@0evil.0evil:0//?/&#.", "ftp://evil:#@0evil.0evil:0//?/&#.", "ftp://evil:eVil@0evil.0evil:0//?/&#.", "ftp://evil:EVIL@0evil.0evil:0//?/&#.", "ftp://evil:ev_il@0evil.0evil:0//?/&#.", "ftp://evil:ev il@0evil.0evil:0//?/&#.", "ftp://evil:ev4il@0evil.0evil:0//?/&#.", "ftp://evil:e@0evil.0evil:0//?/&#.", "ftp://evil: @0evil.0evil:0//?/&#.", "ftp://evil:6@0evil.0evil:0//?/&#.", "ftp://evil:_@0evil.0evil:0//?/&#.", "ftp://evil:@0evil.0evil:0//?/&#.", "ftp://~:evil@0evil.0evil:0//?/&#.", "ftp://}:evil@0evil.0evil:0//?/&#.", "ftp://{:evil@0evil.0evil:0//?/&#.", "ftp://]:evil@0evil.0evil:0//?/&#.", "ftp://[:evil@0evil.0evil:0//?/&#.", "ftp://@:evil@0evil.0evil:0//?/&#.", "ftp://?:evil@0evil.0evil:0//?/&#.", "ftp://=:evil@0evil.0evil:0//?/&#.", "ftp:///:evil@0evil.0evil:0//?/&#.", "ftp://.:evil@0evil.0evil:0//?/&#.", "ftp://-:evil@0evil.0evil:0//?/&#.", "ftp://,:evil@0evil.0evil:0//?/&#.", "ftp://&:evil@0evil.0evil:0//?/&#.", "ftp://%:evil@0evil.0evil:0//?/&#.", "ftp://#:evil@0evil.0evil:0//?/&#.", "ftp://eVil:evil@0evil.0evil:0//?/&#.", "ftp://EVIL:evil@0evil.0evil:0//?/&#.", "ftp://ev_il:evil@0evil.0evil:0//?/&#.", "ftp://ev il:evil@0evil.0evil:0//?/&#.", "ftp://ev4il:evil@0evil.0evil:0//?/&#.", "ftp://e:evil@0evil.0evil:0//?/&#.", "ftp:// :evil@0evil.0evil:0//?/&#.", "ftp://6:evil@0evil.0evil:0//?/&#.", "ftp://_:evil@0evil.0evil:0//?/&#.", "http://0", "ftp://0", "https://evil:evil@0evil.0evil:0//?/&#.", "ftp://evil:evil@0evil.0evil:0/%AA?/&#.", "ftp://evil:evil@0evil.0evil:0/0?/&#.", "ftp://evil:evil@0evil.0evil:0/:?/&#.", "ftp://evil:evil@0evil.0evil:0/.?/&#.", "ftp://evil:evil@0evil.0evil:0/_?/&#.", "ftp://evil:evil@0evil.0evil:0/~?/&#.", "ftp://evil:evil@0evil.0evil:0/-?/&#.", "ftp://evil:evil@0evil.0evil:0/]?/&#.", "ftp://evil:evil@0evil.0evil:0/[?/&#.", "ftp://evil:evil@0evil.0evil:0//?%AA&#.", "ftp://evil:evil@0evil.0evil:0//?0&#.", "ftp://evil:evil@0evil.0evil:0//?}&#.", "ftp://evil:evil@0evil.0evil:0//?{&#.", "ftp://evil:evil@0evil.0evil:0//?=&#.", "ftp://evil:evil@0evil.0evil:0//?:&#.", "ftp://evil:evil@0evil.0evil:0//?,&#.", "ftp://evil:evil@0evil.0evil:0//?.&#.", "ftp://evil:evil@0evil.0evil:0//?_&#.", "ftp://evil:evil@0evil.0evil:0//?~&#.", "ftp://evil:evil@0evil.0evil:0//?-&#.", "ftp://evil:evil@0evil.0evil:0//?]&#.", "ftp://evil:evil@0evil.0evil:0//?[&#.", "ftp://evil:evil@0evil.0evil:0//?/&#%00", "ftp://evil:evil@0evil.0evil:0//?/&#."], "nonMatches": ["httpss://evil:evil@0evil.0evil:0//?/&#.", "ftp://evil:evil@0evil.0evil:0/%A?/&#.", "ftp://evil:evil@0evil.0evil:0/%gA?/&#.", "ftp://evil:evil@0evil.0evil:0/%GA?/&#.", "ftp://evil:evil@0evil.0evil:0//?%A&#.", "ftp://evil:evil@0evil.0evil:0//?%gA&#.", "ftp://evil:evil@0evil.0evil:0//?%GA&#.", "ftp://evil:evil@0evil.0evil:0//?/&#%0", "ftp://evil:evil@0evil.0evil:0//?/&#%g0", "ftp://evil:evil@0evil.0evil:0//?/&#%G0", "ftp://evil:evil@0evil.0evil:0//?/&#.#.", "ftp://evil:evil@0evil.0evil:0//?/&/?/&#.", "ftp://evil:evil@0evil.0}:0//?/&#.", "ftp://evil:evil@0evil.0{:0//?/&#.", "ftp://evil:evil@0evil.0@:0//?/&#.", "ftp://evil:evil@0evil.0?:0//?/&#.", "ftp://evil:evil@0evil.0=:0//?/&#.", "ftp://evil:evil@0evil.0,:0//?/&#.", "ftp://evil:evil@0evil.0&:0//?/&#.", "ftp://evil:evil@0evil.0%:0//?/&#.", "ftp://evil:evil@0evil.0#:0//?/&#.", "ftp://evil:evil@0evil.0ev il:0//?/&#.", "ftp://evil:evil@0evil.0 :0//?/&#.", "ftp://evil:evil@0}.0evil:0//?/&#.", "ftp://evil:evil@0{.0evil:0//?/&#.", "ftp://evil:evil@0@.0evil:0//?/&#.", "ftp://evil:evil@0?.0evil:0//?/&#.", "ftp://evil:evil@0=.0evil:0//?/&#.", "ftp://evil:evil@0,.0evil:0//?/&#.", "ftp://evil:evil@0&.0evil:0//?/&#.", "ftp://evil:evil@0%.0evil:0//?/&#.", "ftp://evil:evil@0#.0evil:0//?/&#.", "ftp://evil:evil@0ev il.0evil:0//?/&#.", "ftp://evil:evil@0 .0evil:0//?/&#.", "ftp://evil:evil@evil:evil@0evil.0evil:0//?/&#.", "ftp://evil:@@0evil.0evil:0//?/&#.", "ftp://::evil@0evil.0evil:0//?/&#.", "ftp://:evil@0evil.0evil:0//?/&#."]}, {"regex": "^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$", "exceptionStackTrace": null, "matches": ["110.10.10.250", "250.200.200.250", "250.250.250.110", "250.250.250.0", "0.10.10.250", "100.10.10.250", "200.10.10.250", "250.10.10.0", "250.10.10.100", "250.10.10.200", "250.10.10.250", "10.10.10.250", "100.100.100.250", "200.200.200.250", "250.250.250.10", "250.250.250.100", "250.250.250.200", "250.250.250.250"], "nonMatches": ["00.10.10.250", "250.250.250.00", "250.250.250.256", "250.250.250.250.250", "250.250.250", "256.250.250.250"]}, {"regex": "date", "exceptionStackTrace": null, "matches": ["date"], "nonMatches": []}, {"regex": "getting username from empid", "exceptionStackTrace": null, "matches": ["getting username from empid"], "nonMatches": []}, {"regex": "(?i)^((((0[1-9])|([12][0-9])|(3[01])) ((JAN)|(MAR)|(MAY)|(JUL)|(AUG)|(OCT)|(DEC)))|((((0[1-9])|([12][0-9])|(30)) ((APR)|(JUN)|(SEP)|(NOV)))|(((0[1-9])|([12][0-9])) FEB))) \\d\\d\\d\\d ((([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9])$", "exceptionStackTrace": null, "matches": ["10 FEB 0000 00:00:00", "10 APR 0000 00:00:00", "30 JAN 0000 00:00:00", "10 JAN 0000 00:00:00", "20 FEB 0000 00:00:00", "01 FEB 0000 00:00:00", "30 APR 0000 00:00:00", "20 APR 0000 00:00:00", "01 NOV 0000 00:00:00", "01 SEP 0000 00:00:00", "01 JUN 0000 00:00:00", "01 APR 0000 00:00:00", "31 JAN 0000 00:00:00", "20 JAN 0000 00:00:00", "01 DEC 0000 00:00:00", "01 OCT 0000 00:00:00", "01 AUG 0000 00:00:00", "01 JUL 0000 00:00:00", "01 MAY 0000 00:00:00", "01 MAR 0000 00:00:00", "01 JAN 0000 20:00:00", "01 JAN 0000 00:00:00"], "nonMatches": ["00 FEB 0000 00:00:00", "00 APR 0000 00:00:00", "32 JAN 0000 00:00:00", "01 JAN 0000 24:00:00", "01 JAN 0000 00:00:60", "01 JAN 0000 00:60:00", "00 JAN 0000 00:00:00"]}, {"regex": "(?mi:(?<=^(([^&#39;&quot;\\n])|(&quot;[^&quot;]*&quot;))*[\\t ])_(?=\\s*$))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "look-behind requires fixed-width pattern"}, "matches": []}, {"regex": "^((http(s){0,1}\\:\\/\\/){0,1}([a-z|A-Z|0-9|\\.|\\-|_]){4,255}(\\:\\d{1,5}){0,1}){0,1}((\\/([a-z|A-Z|0-9|\\.|\\-|_]|\\%[A-F|a-f|0-9]{2}){1,255}){1,255}\\/{0,1}){0,1}(|\\/{0,1}\\?[a-z|A-Z|0-9|\\.|\\-|_]{1,255}\\=([a-z|A-Z|0-9|\\.|\\-|_|\\+|\\:]|\\%[A-F|a-f|0-9]{2}|\\&[a-z|A-Z]{2,12}\\;){0,255}){0,1}((\\&[a-z|A-Z|0-9|\\.|\\-|_]{1,255}\\=([a-z|A-Z|0-9|\\.|\\-|_|\\+|\\:]|\\%[A-F|a-f|0-9]{2}|\\&[a-z|A-Z]{2,12}\\;){0,255}){0,255})(\\/{0,1}|\\#([a-z|A-Z|0-9|\\.|\\-|_|\\+|\\:]|\\%[A-F|a-f|0-9]{2}|\\&[a-z|A-Z]{2,12}\\;){0,255})$", "exceptionStackTrace": null, "matches": ["https://____:0/%|||//?_=:&_=:/", "https://____:0/%a|//?_=:&_=:/", "https://____:0/%A|//?_=:&_=:/", "https://____:0/%0|//?_=:&_=:/", "https://____:0/_//?_=&||||||||||||;&_=:/", "https://____:0/_//?_=&a|;&_=:/", "https://____:0/_//?_=&A|;&_=:/", "https://____:0/_//?_=%|||&_=:/", "https://____:0/_//?_=%a|&_=:/", "https://____:0/_//?_=%A|&_=:/", "https://____:0/_//?_=%0|&_=:/", "https://____:0/_//?_=:&_=&||||||||||||;/", "https://____:0/_//?_=:&_=&a|;/", "https://____:0/_//?_=:&_=&A|;/", "https://____:0/_//?_=:&_=%|||/", "https://____:0/_//?_=:&_=%a|/", "https://____:0/_//?_=:&_=%A|/", "https://____:0/_//?_=:&_=%0|/", "https://____:0/_//?_=:&_=:#&||||||||||||;", "https://____:0/_//?_=:&_=:#&a|;", "https://____:0/_//?_=:&_=:#&A|;", "https://____:0/_//?_=:&_=:#%|||", "https://____:0/_//?_=:&_=:#%a|", "https://____:0/_//?_=:&_=:#%A|", "https://____:0/_//?_=:&_=:#%0|", "https://____:0/_//?_=:&_=:#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::", "https://____:0/_//?_=:&_=:#", "https://____:0/_//?_=:&_=:#|", "https://____:0/_//?_=:&_=:#a", "https://____:0/_//?_=:&_=:#_", "https://____:0/_//?_=:&_=:#A", "https://____:0/_//?_=:&_=:#0", "https://____:0/_//?_=:&_=:#.", "https://____:0/_//?_=:&_=:#-", "https://____:0/_//?_=:&_=:#+", "https://____:0/_//?_=:&_=:", "https://____:0/_//?_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:/", "https://____:0/_//?_=:/", "https://____:0/_//?_=:&_=:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::/", "https://____:0/_//?_=:&_=/", "https://____:0/_//?_=:&_=|/", "https://____:0/_//?_=:&_=a/", "https://____:0/_//?_=:&_=_/", "https://____:0/_//?_=:&_=A/", "https://____:0/_//?_=:&_=0/", "https://____:0/_//?_=:&_=./", "https://____:0/_//?_=:&_=-/", "https://____:0/_//?_=:&_=+/", "https://____:0/_//?_=:&_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________=:/", "https://____:0/_//?_=:&|=:/", "https://____:0/_//?_=:&a=:/", "https://____:0/_//?_=:&A=:/", "https://____:0/_//?_=:&0=:/", "https://____:0/_//?_=:&.=:/", "https://____:0/_//?_=:&-=:/", "https://____:0/_/&_=:/", "https://____:0/_//?_=:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::&_=:/", "https://____:0/_//?_=&_=:/", "https://____:0/_//?_=|&_=:/", "https://____:0/_//?_=a&_=:/", "https://____:0/_//?_=_&_=:/", "https://____:0/_//?_=A&_=:/", "https://____:0/_//?_=0&_=:/", "https://____:0/_//?_=.&_=:/", "https://____:0/_//?_=-&_=:/", "https://____:0/_//?_=+&_=:/", "https://____:0/_//?_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________=:&_=:/", "https://____:0/_//?|=:&_=:/", "https://____:0/_//?a=:&_=:/", "https://____:0/_//?A=:&_=:/", "https://____:0/_//?0=:&_=:/", "https://____:0/_//?.=:&_=:/", "https://____:0/_//?-=:&_=:/", "https://____:0/?_=:&_=:/", "https://____:0/_/?_=:&_=:/", "httpshttps://____:0/_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________//?_=:&_=:/", "https://____:0/|//?_=:&_=:/", "https://____:0/a//?_=:&_=:/", "https://____:0/A//?_=:&_=:/", "https://____:0/0//?_=:&_=:/", "https://____:0/.//?_=:&_=:/", "https://____:0/-//?_=:&_=:/", "/_//?_=:&_=:/", "https://____/_//?_=:&_=:/", "https://____:00000/_//?_=:&_=:/", "https://_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________:0/_//?_=:&_=:/", "https://|___:0/_//?_=:&_=:/", "https://a___:0/_//?_=:&_=:/", "https://A___:0/_//?_=:&_=:/", "https://0___:0/_//?_=:&_=:/", "https://.___:0/_//?_=:&_=:/", "https://-___:0/_//?_=:&_=:/", "____:0/_//?_=:&_=:/", "http://____:0/_//?_=:&_=:/", "#", "", "https://____:0/%||//?_=:&_=:/", "https://____:0/_//?_=&||;&_=:/", "https://____:0/_//?_=%||&_=:/", "https://____:0/_//?_=:&_=&||;/", "https://____:0/_//?_=:&_=%||/", "https://____:0/_//?_=:&_=:#&||;", "https://____:0/_//?_=:&_=:#%||", "https://____:0/_//?_=:&_=:#:", "https://____:0/_//?_=:&_=:/"], "nonMatches": ["https://____:0/%|//?_=:&_=:/", "https://____:0/%g|//?_=:&_=:/", "https://____:0/%G|//?_=:&_=:/", "https://____:0/_//?_=&|||||||||||||;&_=:/", "https://____:0/_//?_=&|;&_=:/", "https://____:0/_//?_=%|&_=:/", "https://____:0/_//?_=%g|&_=:/", "https://____:0/_//?_=%G|&_=:/", "https://____:0/_//?_=:&_=&|||||||||||||;/", "https://____:0/_//?_=:&_=&|;/", "https://____:0/_//?_=:&_=%|/", "https://____:0/_//?_=:&_=%g|/", "https://____:0/_//?_=:&_=%G|/", "https://____:0/_//?_=:&_=:#&|||||||||||||;", "https://____:0/_//?_=:&_=:#&|;", "https://____:0/_//?_=:&_=:#%|", "https://____:0/_//?_=:&_=:#%g|", "https://____:0/_//?_=:&_=:#%G|", "https://____:0/_//?_=:&_=:#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::", "https://____:0/_//?_=:&_=://", "https://____:0/_//?_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:&_=:/", "https://____:0/_//?_=:&_=::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::/", "https://____:0/_//?_=:&________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________=:/", "https://____:0/_//?_=:&=:/", "https://____:0/_//?_=:/?_=:&_=:/", "https://____:0/_//?_=::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::&_=:/", "https://____:0/_//?________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________=:&_=:/", "https://____:0/_//?=:&_=:/", "https://____:0/_//_//?_=:&_=:/", "https://____:0/_///?_=:&_=:/", "httpshttps://____:0//?_=:&_=:/", "https://____:0/________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________//?_=:&_=:/", "https://____:0///?_=:&_=:/", "https://____:0https://____:0/_//?_=:&_=:/", "https://____:0:0/_//?_=:&_=:/", "https://____:000000/_//?_=:&_=:/", "https://____:/_//?_=:&_=:/", "https://________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________:0/_//?_=:&_=:/", "https://___:0/_//?_=:&_=:/", "https://https://____:0/_//?_=:&_=:/", "httpss://____:0/_//?_=:&_=:/"]}, {"regex": "hjuy", "exceptionStackTrace": null, "matches": ["hjuy"], "nonMatches": []}, {"regex": "^[a-z]", "exceptionStackTrace": null, "matches": ["a"], "nonMatches": []}, {"regex": "5", "exceptionStackTrace": null, "matches": ["5"], "nonMatches": []}, {"regex": "(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])?", "exceptionStackTrace": null, "matches": ["http://evil.evilevil#evil#", "http://evil.evilevil~", "http://evil.evilevilp", "http://evil.evilevilm", "http://evil.evilevilb", "http://evil.evilevila", "http://evil.evilevil_", "http://evil.evilevil^", "http://evil.evilevilA", "http://evil.evilevil@", "http://evil.evilevil?", "http://evil.evilevil=", "http://evil.evilevil;", "http://evil.evilevil0", "http://evil.evilevil/", "http://evil.evilevil-", "http://evil.evilevil+", "http://evil.evilevil&", "http://evil.evilevil%", "http://evil.evil~#", "http://evil.evil^#", "http://evil.evil@#", "http://evil.evil?#", "http://evil.evil=#", "http://evil.evil;#", "http://evil.evil:#", "http://evil.evil/#", "http://evil.evil.#", "http://evil.evil-#", "http://evil.evil,#", "http://evil.evil+#", "http://evil.evil&#", "http://evil.evil%#", "http://evil.evil##", "http://evil.evileVil#", "http://evil.evilEVIL#", "http://evil.evilev_il#", "http://evil.evilev il#", "http://evil.evilev4il#", "http://evil.evile#", "http://evil.evil #", "http://evil.evil6#", "http://evil.evil_#", "http://evil.evil.evilevil#", "http://evil.-evil#", "http://evil.eVilevil#", "http://evil.EVILevil#", "http://evil.ev_ilevil#", "http://evil.ev ilevil#", "http://evil.ev4ilevil#", "http://evil.eevil#", "http://evil.6evil#", "http://evil._evil#", "http://evil.evil#", "http://-.evilevil#", "http://eVil.evilevil#", "http://EVIL.evilevil#", "http://ev_il.evilevil#", "http://ev4il.evilevil#", "http://e.evilevil#", "http://6.evilevil#", "http://_.evilevil#", "https://evil.evil", "ftp://evil.evil", "http://evil.evil", "https://evil.evilevil#", "ftp://evil.evilevil#", "http://evil.evilevil#"], "nonMatches": ["http://evilevil#", "http://evil.~evil#", "http://evil.^evil#", "http://evil.@evil#", "http://evil.?evil#", "http://evil.=evil#", "http://evil.;evil#", "http://evil.:evil#", "http://evil./evil#", "http://evil..evil#", "http://evil.,evil#", "http://evil.+evil#", "http://evil.&evil#", "http://evil.%evil#", "http://evil.#evil#", "http://evil. evil#", "http://~.evilevil#", "http://^.evilevil#", "http://@.evilevil#", "http://?.evilevil#", "http://=.evilevil#", "http://;.evilevil#", "http://:.evilevil#", "http:///.evilevil#", "http://..evilevil#", "http://,.evilevil#", "http://+.evilevil#", "http://&.evilevil#", "http://%.evilevil#", "http://#.evilevil#", "http://ev il.evilevil#", "http:// .evilevil#", "http://.evilevil#"]}, {"regex": "^(([0-9]|1[0-9]|2[0-4])(\\.[0-9][0-9]?)?)$|([2][5](\\.[0][0]?)?)$", "exceptionStackTrace": null, "matches": ["25.0", "0.0", "25", "20", "10", "0", "25.00", "20.00", "10.00", "0.00"], "nonMatches": ["25.00.00", "25.000", "0.00.00", "0.000"]}, {"regex": "(?<!\\\\)\\&quot;(?:[^\\&quot;]*(?<!\\\\)\\\\\\&quot;)*[^\\&quot;]*\\&quot;", "exceptionStackTrace": null, "matches": ["&quot;evil\\&quot;\\&quot;", "&quot;evil\\&quot;;&quot;", "&quot;evil\\&quot;&&quot;", "&quot;evil\\&quot;eVil&quot;", "&quot;evil\\&quot;EVIL&quot;", "&quot;evil\\&quot;ev_il&quot;", "&quot;evil\\&quot;ev il&quot;", "&quot;evil\\&quot;ev4il&quot;", "&quot;evil\\&quot;e&quot;", "&quot;evil\\&quot; &quot;", "&quot;evil\\&quot;6&quot;", "&quot;evil\\&quot;_&quot;", "&quot;evil\\&quot;&quot;", "&quot;evil\\&quot;evil\\&quot;evil&quot;", "&quot;evil&quot;", "&quot;\\\\&quot;evil&quot;", "&quot;eVil\\&quot;evil&quot;", "&quot;EVIL\\&quot;evil&quot;", "&quot;ev_il\\&quot;evil&quot;", "&quot;ev il\\&quot;evil&quot;", "&quot;ev4il\\&quot;evil&quot;", "&quot;e\\&quot;evil&quot;", "&quot; \\&quot;evil&quot;", "&quot;6\\&quot;evil&quot;", "&quot;_\\&quot;evil&quot;", "&quot;\\&quot;evil&quot;", "&quot;&quot;", "&quot;evil\\&quot;evil&quot;"], "nonMatches": ["&quot;;\\&quot;evil&quot;", "&quot;&\\&quot;evil&quot;"]}, {"regex": "^(?:(?<scheme>[a-z]+):\\/\\/)?(?:(?<usern>[a-z0-9_.]*)(?::(?<passw>[a-z0-9_.]*))?@)?(?<domain>(?:(?:[a-z][a-z0-9_-]+\\.?)+|[0-9]{1,3}(?:\\.[0-9]{1,3}){3}))(?::(?<port>[0-9]+))?(?<path>(?:\\/[.%a-z0-9_]*)+)?(?:\\?(?<query>(?:&?[][a-z0-9_]+(?:\\=?[a-z0-9_;]*)?)+))?(?:#(?<fragment>[a-z0-9_]+))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<s"}, "matches": []}, {"regex": "^\\([0-9]{3}\\)\\s?[0-9]{3}(-|\\s)?[0-9]{4}$|^[0-9]{3}-?[0-9]{3}-?[0-9]{4}$", "exceptionStackTrace": null, "matches": ["000-0000000", "000000-0000", "(000) 0000000", "(000)000-0000", "0000000000", "(000)0000000", "000-000-0000", "(000) 000 0000", "(000) 000-0000"], "nonMatches": ["000-000-00000", "000-000-000", "000-000--0000", "000-0000-0000", "000-00-0000", "000--000-0000", "0000-000-0000", "00-000-0000", "(000) 000-00000", "(000) 000-000", "(000) 000--0000", "(000) 0000-0000", "(000) 00-0000", "(000)  000-0000", "(0000) 000-0000", "(00) 000-0000"]}, {"regex": "^.*([^\\.][\\.](([gG][iI][fF])|([Jj][pP][Gg])|([Jj][pP][Ee][Gg])|([Bb][mM][pP])|([Pp][nN][Gg])))", "exceptionStackTrace": null, "matches": ["evila.pNG", "evila.png", "evila.PNg", "evila.bMp", "evila.bmP", "evila.BMP", "evila.jPeG", "evila.jPEg", "evila.jpeg", "evila.JPeg", "evila.jPG", "evila.jpg", "evila.JPg", "evila.GIf", "evila.GiF", "evila.gIF", "evilA.GIF", "evil0.GIF", "evil .GIF", ".a.GIF", "eVila.GIF", "EVILa.GIF", "ev_ila.GIF", "ev ila.GIF", "ev4ila.GIF", "ea.GIF", " a.GIF", "6a.GIF", "_a.GIF", "a.pNg", "a.bMP", "a.jPeg", "a.jPg", "a.GIF", "evila.pNg", "evila.bMP", "evila.jPeg", "evila.jPg", "evila.GIF"], "nonMatches": ["evila.pNa", "evila.pNA", "evila.pag", "evila.pAg", "evila.aNg", "evila.ANg", "evila.bMa", "evila.bMA", "evila.baP", "evila.bAP", "evila.aMP", "evila.AMP", "evila.jPea", "evila.jPeA", "evila.jPag", "evila.jPAg", "evila.jaeg", "evila.jAeg", "evila.aPeg", "evila.APeg", "evila.jPa", "evila.jPA", "evila.jag", "evila.jAg", "evila.aPg", "evila.APg", "evila.GIa", "evila.GIA", "evila.GaF", "evila.GAF", "evila.aIF", "evila.AIF", "evil..GIF"]}, {"regex": "^[1-9]{1}$|^[0-9]{1}[0-9]{1}[0-9]{1}[0-9]{1}$|^9999$", "exceptionStackTrace": null, "matches": ["9999", "0000", "1"], "nonMatches": ["00000", "000", "11", "", "0"]}, {"regex": "^([9]{1})([234789]{1})([0-9]{8})$", "exceptionStackTrace": null, "matches": ["9800000000", "9700000000", "9400000000", "9300000000", "9200000000", "9900000000"], "nonMatches": ["99000000000", "990000000", "9000000000", "99900000000", "900000000"]}, {"regex": "^(([0-2])?([0-9]))$", "exceptionStackTrace": null, "matches": ["0", "00"], "nonMatches": ["000", "30"]}, {"regex": "^\\d{2}\\-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\-\\d{4}$", "exceptionStackTrace": null, "matches": ["00-DEC-0000", "00-NOV-0000", "00-OCT-0000", "00-SEP-0000", "00-AUG-0000", "00-JUL-0000", "00-JUN-0000", "00-MAY-0000", "00-APR-0000", "00-MAR-0000", "00-FEB-0000", "00-JAN-0000", "00-dec-0000", "00-nov-0000", "00-oct-0000", "00-sep-0000", "00-aug-0000", "00-jul-0000", "00-jun-0000", "00-may-0000", "00-apr-0000", "00-mar-0000", "00-feb-0000", "00-jan-0000", "00-Dec-0000", "00-Nov-0000", "00-Oct-0000", "00-Sep-0000", "00-Aug-0000", "00-Jul-0000", "00-Jun-0000", "00-May-0000", "00-Apr-0000", "00-Mar-0000", "00-Feb-0000", "00-Jan-0000"], "nonMatches": ["00-Jan-00000", "00-Jan-000", "000-Jan-0000", "0-Jan-0000"]}, {"regex": "sger", "exceptionStackTrace": null, "matches": ["sger"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoods.com ", "exceptionStackTrace": null, "matches": ["Buy Cheap handbags,Discount handbags,Cheap Leather handbags -AlltopgoodsAcom ", "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoods0com ", "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoods-com ", "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoods,com ", "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoods com ", "Buy Cheap handbags,Discount handbags,Cheap Leather handbags -Alltopgoodsacom "], "nonMatches": []}, {"regex": "^(?=0?[1-9]/|1[012]/)(?:(?<month>(?<month31days>0?[13578]|1[02])|(?<month30days>0?[469]|11)|(?<monthFeb>0?2))/)(?<day>(?(month31days)(?:[012]?[1-9]|3[01]))(?(month30days)(?:[012]?[1-9]|30))(?(monthFeb)(?:[01]?[1-9]|2(?(?=\\d/(?:(?:(?:04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)00)|(?:\\d\\d(?:04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))))[0-9]|[0-8]))))/(?<year>(?!0000)\\d{4})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<m"}, "matches": []}, {"regex": "^(?<line1>(?!\\s+)[^\\n]+)\\n(?:(?<line2>(?!\\s+)[^\\n]+)\\n)?(?<city>[^,\\n]+), +(?<state>-i:A[LKSZRAEP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY]) +(?<zip>(?<zip5>\\d{5})(?:[ -]?(?<zip4>\\d{4}))?)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "^(?-i:A[LKSZRAEP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (internal): Unexpected extension ?-"}, "matches": [], "nonMatches": []}, {"regex": "^(?!00000)(?<zip>(?<zip5>\\d{5})(?:[ -](?=\\d))?(?<zip4>\\d{4})?)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<z"}, "matches": []}, {"regex": "^(?:(?:25[0-5]|2[0-4]\\d|[01]\\d\\d|\\d?\\d)(?(?=\\.?\\d)\\.)){4}$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character in group name '?=\\\\.?\\\\d'"}, "matches": []}, {"regex": "^(?:(?<1>[(])?(?<AreaCode>[2-9]\\d{2})(?(1)[)])(?(1)(?<2>[ ])|(?:(?<3>[-])|(?<4>[ ])))?)?(?<Prefix>[1-9]\\d{2})(?(AreaCode)(?:(?(1)(?(2)[- ]|[-]?))|(?(3)[-])|(?(4)[- ]))|[- ]?)(?<Suffix>\\d{4})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<1"}, "matches": []}, {"regex": "^(?:(?<1>[(])?(?<AreaCode>[2-9]\\d{2})(?(1)[)])(?(1)(?<2>[ ])|(?:(?<3>[-])|(?<4>[ ])))?)?(?<Prefix>[1-9]\\d{2})(?(AreaCode)(?:(?(1)(?(2)[- ]|[-]?))|(?(3)[-])|(?(4)[- ]))|[- ]?)(?<Suffix>\\d{4})(?:[ ]?[xX]?(?<Ext>\\d{2,4}))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<1"}, "matches": []}, {"regex": "^(?<field1>[^,]+),(?<field2>[^,]+),(?<field3>[^,]+)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<f"}, "matches": []}, {"regex": "^(?!000)(?!666)(?<SSN3>[0-6]\\d{2}|7(?:[0-6]\\d|7[012]))([- ]?)(?!00)(?<SSN2>\\d\\d)\\1(?!0000)(?<SSN4>\\d{4})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<S"}, "matches": []}, {"regex": "^(?:(?<Visa>4\\d{3})|(?<Mastercard>5[1-5]\\d{2})|(?<Discover>6011)|(?<DinersClub>(?:3[68]\\d{2})|(?:30[0-5]\\d))|(?<AmericanExpress>3[47]\\d{2}))([ -]?)(?(DinersClub)(?:\\d{6}\\1\\d{4})|(?(AmericanExpress)(?:\\d{6}\\1\\d{5})|(?:\\d{4}\\1\\d{4}\\1\\d{4})))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<V"}, "matches": []}, {"regex": "(?n:(^\\$?(?!0,?\\d)\\d{1,3}(?=(?<1>,)|(?<1>))(\\k<1>\\d{3})*(\\.\\d\\d)?)$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?n"}, "matches": []}, {"regex": "(?n:(^(?(?![^,]+?,)((?<first>[A-Z][a-z]*?) )?((?<second>[A-Z][a-z]*?) )?((?<third>[A-Z][a-z]*?) )?)(?<last>[A-Z]((&#39;|[a-z]{1,2})[A-Z])?[a-z]+))(?(?=,)(, (?<first>[A-Z][a-z]*?))?( (?<second>[A-Z][a-z]*?))?( (?<third>[A-Z][a-z]*?))?)$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?n"}, "matches": []}, {"regex": "gtfghty", "exceptionStackTrace": null, "matches": ["gtfghty"], "nonMatches": []}, {"regex": "(?-i)(?=^.{8,}$)((?!.*\\s)(?=.*[A-Z])(?=.*[a-z]))(?=(1)(?=.*\\d)|.*[^A-Za-z0-9])^.*$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "missing :"}, "matches": []}, {"regex": "^[A-Za-z]\\d[A-Za-z][ -]?\\d[A-Za-z]\\d$", "exceptionStackTrace": null, "matches": ["a0a-0A0", "a0a 0a0", "a0A-0a0", "A0a-0a0", "a0a0a0", "a0a-0a0"], "nonMatches": ["a0a--0a0"]}, {"regex": "^(?P<salutation>(Mr|MR|Ms|Miss|Mrs|Dr|Sir)(\\.?))?\\s*((?<first>[A-Za-z\\-]*?) )?((?<second>[A-Za-z\\-]*?) )?((?<third>[A-Za-z\\-]*?) )?(?(?!(PHD|MD|3RD|2ND|RN|JR|II|SR|III))(?<last>([A-Za-z](([a-zA-Z\\-\\&#39;]{1,2})[A-Za-z\\-\\&#39;])?[a-zA-Z\\-\\&#39;]+)))( (?P<suffix>(PHD|MD|3RD|2ND|RN|JR|II|SR|III)))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<f"}, "matches": []}, {"regex": "^((\\d|[1-9]\\d|2[0-4]\\d|25[0-5]|1\\d\\d)(?:\\.(\\d|[1-9]\\d|2[0-4]\\d|25[0-5]|1\\d\\d)){3})$", "exceptionStackTrace": null, "matches": ["0.250.200.200", "0.100.0.0", "0.250.0.0", "0.200.0.0", "0.10.0.0", "100.0.0.0", "250.0.0.0", "200.0.0.0", "10.0.0.0", "0.100.100.100", "0.250.250.250", "0.200.200.200", "0.10.10.10", "0.0.0.0"], "nonMatches": ["256.0.0.0", "00.0.0.0", "0.256.250.250", "0.00.10.10", "0.0.0.0.0", "0.0.0"]}, {"regex": "^((?<dir>[\\-ld])(?<permission>([\\-r][\\-w][\\-xs]){3})\\s+(?<filecode>\\d+)\\s+(?<owner>\\w+)\\s+(?<group>\\w+)\\s+(?<size>\\d+)\\s+(?<timestamp>(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d?\\d)\\s+(?<hour>\\d{2}):(?<minute>\\d{2}))\\s+(?<name>\\w.+))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "^((?<dir>[\\-ld])(?<permission>([\\-r][\\-w][\\-xs]){3})\\s+(?<filecode>\\d+)\\s+(?<owner>\\w+)\\s+(?<group>\\w+)\\s+(?<size>\\d+)\\s+(?<timestamp>(?<month>[a-z|A-Z]{3})\\s+(?<day>(\\d?\\d))\\s+(?<hour>\\d?\\d):(?<minute>\\d{2}))\\s+(?<name>\\w.+))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "1800644571", "exceptionStackTrace": null, "matches": ["1800644571"], "nonMatches": []}, {"regex": "^((0*[0-1]?[0-9]{1,2}\\.)|(0*((2[0-4][0-9])|(25[0-5]))\\.)){3}((0*[0-1]?[0-9]{1,2})|(0*((2[0-4][0-9])|(25[0-5]))))$", "exceptionStackTrace": null, "matches": ["0250.0200.0200.000", "00200.0200.0200.000", "200.0200.0200.000", "000.000.000.00200", "000.000.000.200", "000.000.000.00000", "000.000.000.020", "000.000.000.0000", "000.000.000.00", "00000.000.000.000", "020.000.000.000", "0000.000.000.000", "00.000.000.000", "250.0250.0250.0", "200.0250.0250.0", "0.0250.0250.250", "0.0250.0250.200", "0.0250.0250.0", "0250.0250.0250.000", "0200.0200.0200.000", "000.000.000.0250", "000.000.000.0200", "000.000.000.000"], "nonMatches": ["0256.0250.0250.000", "000.000.000.0256", "000.000.000.000.000", "000.000.000"]}, {"regex": "\\$[0-9]?[0-9]?[0-9]?((\\,[0-9][0-9][0-9])*)?(\\.[0-9][0-9])?$", "exceptionStackTrace": null, "matches": ["$000,000", "$000,000,000.00", "$000.00", "$00,000.00", "$", "$000,000.00"], "nonMatches": ["$000,000.00.00", "$0000,000.00"]}, {"regex": "zxvcxgbc", "exceptionStackTrace": null, "matches": ["zxvcxgbc"], "nonMatches": []}, {"regex": "^\\b\\d{2,3}-*\\d{7}\\b$", "exceptionStackTrace": null, "matches": ["00--0000000", "000-0000000", "000000000", "00-0000000"], "nonMatches": ["00-00000000", "00-000000", "0000-0000000", "0-0000000"]}, {"regex": "^[\\d]{1,}?\\.[\\d]{2}$", "exceptionStackTrace": null, "matches": ["00.00", "0.00"], "nonMatches": ["0.000", "0.0", ".00"]}, {"regex": "1-888-519-5185", "exceptionStackTrace": null, "matches": ["1-888-519-5185"], "nonMatches": []}, {"regex": "1-888-519-5185", "exceptionStackTrace": null, "matches": ["1-888-519-5185"], "nonMatches": []}, {"regex": "computer service ", "exceptionStackTrace": null, "matches": ["computer service "], "nonMatches": []}, {"regex": "computer service ", "exceptionStackTrace": null, "matches": ["computer service "], "nonMatches": []}, {"regex": "quicken technical support phone support ", "exceptionStackTrace": null, "matches": ["quicken technical support phone support "], "nonMatches": []}, {"regex": "Malwarebytes Customer Service Phone Number ", "exceptionStackTrace": null, "matches": ["Malwarebytes Customer Service Phone Number "], "nonMatches": []}, {"regex": "support number ", "exceptionStackTrace": null, "matches": ["support number "], "nonMatches": []}, {"regex": "^[0-9]{2}[-][0-9]{2}[-][0-9]{2}$", "exceptionStackTrace": null, "matches": ["00-00-00"], "nonMatches": ["00-00-000", "00-00-0", "00-000-00", "00-0-00", "000-00-00", "0-00-00"]}, {"regex": "^[+]447\\d{9}$", "exceptionStackTrace": null, "matches": ["+447000000000"], "nonMatches": ["+4470000000000", "+44700000000"]}, {"regex": "https://acaiultralean-france.com/renuvaline/", "exceptionStackTrace": null, "matches": ["https://acaiultralean-franceAcom/renuvaline/", "https://acaiultralean-france:com/renuvaline/", "https://acaiultralean-france0com/renuvaline/", "https://acaiultralean-france/com/renuvaline/", "https://acaiultralean-france-com/renuvaline/", "https://acaiultralean-france com/renuvaline/", "https://acaiultralean-franceacom/renuvaline/"], "nonMatches": []}, {"regex": "https://colodetoxplusfrance.net/lutrevia/", "exceptionStackTrace": null, "matches": ["https://colodetoxplusfranceAnet/lutrevia/", "https://colodetoxplusfrance:net/lutrevia/", "https://colodetoxplusfrance0net/lutrevia/", "https://colodetoxplusfrance/net/lutrevia/", "https://colodetoxplusfrance net/lutrevia/", "https://colodetoxplusfranceanet/lutrevia/"], "nonMatches": []}, {"regex": "(^[+]?\\d*\\.?\\d*[1-9]+\\d*$)|(^[+]?[1-9]+\\d*\\.\\d*$)", "exceptionStackTrace": null, "matches": ["+10.00", "+10.", "+100.0", "+1.0", "+110.0", "10.0", "+0.0100", "+0.01", "+0.0110", "+0.0010", "+0.10", "+0010", "+00.010", "+.010", "0.010", "1.", "1", "+10.0", "+0.010"], "nonMatches": ["+0.0", "+00.0", "++10.0", "+0.00", "+0.000", "+0..010", "++0.010"]}, {"regex": "e(vi?)?", "exceptionStackTrace": null, "matches": ["evivi", "evii", "ev", "e", "evi"], "nonMatches": []}, {"regex": "e(vi?)?", "exceptionStackTrace": null, "matches": ["evivi", "evii", "ev", "e", "evi"], "nonMatches": []}, {"regex": "e(vi?)?", "exceptionStackTrace": null, "matches": ["evivi", "evii", "ev", "e", "evi"], "nonMatches": []}, {"regex": "(vi(v))?d", "exceptionStackTrace": null, "matches": ["vivvivd", "d", "vivd"], "nonMatches": []}, {"regex": "^((\\d{5}-\\d{4})|(\\d{5})|([AaBbCcEeGgHhJjKkLlMmNnPpRrSsTtVvXxYy]\\d[A-Za-z]\\s?\\d[A-Za-z]\\d))$", "exceptionStackTrace": null, "matches": ["y0a 0A0", "y0A 0a0", "x0a 0a0", "v0a 0a0", "t0a 0a0", "s0a 0a0", "r0a 0a0", "p0a 0a0", "n0a 0a0", "m0a 0a0", "l0a 0a0", "k0a 0a0", "j0a 0a0", "h0a 0a0", "g0a 0a0", "e0a 0a0", "c0a 0a0", "b0a 0a0", "a0a 0a0", "Y0a 0a0", "X0a 0a0", "V0a 0a0", "T0a 0a0", "S0a 0a0", "R0a 0a0", "P0a 0a0", "N0a 0a0", "M0a 0a0", "L0a 0a0", "K0a 0a0", "J0a 0a0", "H0a 0a0", "G0a 0a0", "E0a 0a0", "C0a 0a0", "B0a 0a0", "A0a 0a0", "y0a0a0", "y0a 0a0", "00000", "00000-0000"], "nonMatches": ["y0a  0a0", "d0a 0a0", "D0a 0a0", "000000", "0000", "00000-00000", "00000-000", "000000-0000", "0000-0000"]}, {"regex": "^[+|-]?[\\i0-9\\.]{0,}[+|-]?[\\i0-9\\.]{0,}$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad escape \\i"}, "matches": []}, {"regex": "^([a-zA-Z0-9]+)([\\._-]?[a-zA-Z0-9]+)*@([a-zA-Z0-9]+)([\\._-]?[a-zA-Z0-9]+)*([\\.]{1}[a-zA-Z0-9]{2,})+$", "exceptionStackTrace": null, "matches": ["evil-evil@evil-evil.00.00", "evil-evil@evil-evil.a0", "evil-evil@evil-evil.A0", "evil-evil@evil-evil-evil.00", "evil-evil@evil.00", "evil-evil@evil-eVil.00", "evil-evil@evil-EVIL.00", "evil-evil@evil-ev_il.00", "evil-evil@evil-ev4il.00", "evil-evil@evil-e.00", "evil-evil@evil-6.00", "evil-evil@evilevil.00", "evil-evil@evil_evil.00", "evil-evil@evil.evil.00", "evil-evil@eVil-evil.00", "evil-evil@EVIL-evil.00", "evil-evil@ev_il-evil.00", "evil-evil@ev4il-evil.00", "evil-evil@e-evil.00", "evil-evil@6-evil.00", "evil-evil-evil@evil-evil.00", "evil@evil-evil.00", "evil-eVil@evil-evil.00", "evil-EVIL@evil-evil.00", "evil-ev_il@evil-evil.00", "evil-ev4il@evil-evil.00", "evil-e@evil-evil.00", "evil-6@evil-evil.00", "evilevil@evil-evil.00", "evil_evil@evil-evil.00", "evil.evil@evil-evil.00", "eVil-evil@evil-evil.00", "EVIL-evil@evil-evil.00", "ev_il-evil@evil-evil.00", "ev4il-evil@evil-evil.00", "e-evil@evil-evil.00", "6-evil@evil-evil.00", "evil@evil.00", "evil-evil@evil-evil.00"], "nonMatches": ["evil-evil@evil-evil", "evil-evil@evil-evil.0", "evil-evil@evil-evil..00", "evil-evil@evil-evil00", "evil-evil@evil-ev il.00", "evil-evil@evil- .00", "evil-evil@evil-_.00", "evil-evil@evil-.00", "evil-evil@evil--evil.00", "evil-evil@ev il-evil.00", "evil-evil@ -evil.00", "evil-evil@_-evil.00", "evil-evil@-evil.00", "evil-ev il@evil-evil.00", "evil- @evil-evil.00", "evil-_@evil-evil.00", "evil-@evil-evil.00", "evil--evil@evil-evil.00", "ev il-evil@evil-evil.00", " -evil@evil-evil.00", "_-evil@evil-evil.00", "-evil@evil-evil.00"]}, {"regex": "(?:(?:Data Source)|(?:Server))=([\\s*\\w\\.]+?);\\s*?(?:(?:Initial Catalog)|(?:Database))=(\\s*\\w+?);\\s*?(?:(?:User Id)|(?:Uid))=(\\s*\\w+?);\\s*?(?:(?:password)|(?:Pwd))=(\\s*\\w+?);\\s*?(?:(?:Integrated Security)|(?:Integrated security))=(\\s*\\w*);$", "exceptionStackTrace": null, "matches": ["Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= eVil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= EVIL;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= ev_il;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= ev4il;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= e;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security=  ;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= 6;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= _;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= ;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security=  evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security=evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil;  Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil;Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= eVil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= EVIL; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= ev_il; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= ev4il; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= e; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= 6; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= _; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password=  evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password=evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil;  password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil;password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= eVil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= EVIL; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= ev_il; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= ev4il; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= e; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= 6; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= _; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id=  evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id=evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil;  User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil;User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= eVil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= EVIL; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= ev_il; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= ev4il; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= e; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= 6; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= _; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog=  evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog=evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil;  Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil;Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=.; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=*; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=eVil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=EVIL; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=ev_il; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=ev il; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=ev4il; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=e; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source= ; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=6; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=_; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Server=evil;Initial Catalog=evil;User Id=evil;password=evil;Integrated Security=;", "Data Source=evil;Database=evil;User Id=evil;password=evil;Integrated Security=;", "Data Source=evil;Initial Catalog=evil;Uid=evil;password=evil;Integrated Security=;", "Data Source=evil;Initial Catalog=evil;User Id=evil;Pwd=evil;Integrated Security=;", "Data Source=evil;Initial Catalog=evil;User Id=evil;password=evil;Integrated security=;", "Data Source=evil;Initial Catalog=evil;User Id=evil;password=evil;Integrated Security=;", "Server=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Database= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; Uid= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; Pwd= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;"], "nonMatches": ["Data Source=evil; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= ev il;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= ev il; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password=  ; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= evil; password= ; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= ev il; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id=  ; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= evil; User Id= ; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= ev il; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog=  ; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=evil; Initial Catalog= ; User Id= evil; password= evil; Integrated Security= evil;", "Data Source==; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=;; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;", "Data Source=; Initial Catalog= evil; User Id= evil; password= evil; Integrated Security= evil;"]}, {"regex": "([0-9][0-9])((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\-([0-9][0-9])\\-([0-9][0-9][0-9][0-9])", "exceptionStackTrace": null, "matches": ["001001-00-0000", "000130-00-0000", "000110-00-0000", "000101-00-0000"], "nonMatches": ["001301-00-0000", "000132-00-0000", "000100-00-0000", "000001-00-0000"]}, {"regex": "Gmail Recovery", "exceptionStackTrace": null, "matches": ["Gmail Recovery"], "nonMatches": []}, {"regex": "To Resolve All Your Worries, Contact Facebook Help number 1-850-361-8504", "exceptionStackTrace": null, "matches": ["To Resolve All Your Worries, Contact Facebook Help number 1-850-361-8504"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": " facebook help number", "exceptionStackTrace": null, "matches": [" facebook help number"], "nonMatches": []}, {"regex": "\\(([0-9]{2}|0{1}((x|[0-9]){2}[0-9]{2}))\\)\\s*[0-9]{3,4}[- ]*[0-9]{4}", "exceptionStackTrace": null, "matches": ["(00) 000 00000", "(00) 000  0000", "(00) 0000000", "(00) 000-0000", "(00) 0000 0000", "(00)  000 0000", "(00)000 0000", "(00000)0000000", "(0x000)0000000", "(00)0000000", "(00000) 000 0000", "(0xx00) 000 0000", "(00) 000 0000"], "nonMatches": ["(0xx000) 000 0000", "(0xx0) 000 0000", "(0xxx00) 000 0000", "(0x00) 000 0000", "(00xx00) 000 0000", "(xx00) 000 0000", "(00) 000 000", "(00) 00000 0000", "(00) 00 0000", "(000) 000 0000", "(0) 000 0000"]}, {"regex": "fdsfsdf", "exceptionStackTrace": null, "matches": ["fdsfsdf"], "nonMatches": []}, {"regex": "^([a-z0-9]+([\\-a-z0-9]*[a-z0-9]+)?\\.){0,}([a-z0-9]+([\\-a-z0-9]*[a-z0-9]+)?){1,63}(\\.[a-z0-9]{2,7})+$", "exceptionStackTrace": null, "matches": ["evilevilevil.evilevilevil.00.00", "evilevilevil.evilevilevil.0000000", "evilevilevil.evilevilevil.a0", "evilevilevil.evilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevil.00", "evilevilevil.evilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevilevil.00", "evilevilevil.evilevilevilevilevil.00", "evilevilevil.evil.00", "evilevilevil.evilevilev4il.00", "evilevilevil.evilevile.00", "evilevilevil.evilevil6.00", "evilevilevil.evil.evil.00", "evilevilevil.evil-evil.00", "evilevilevil.evilev4ilevil.00", "evilevilevil.evileevil.00", "evilevilevil.evil6evil.00", "evilevilevil.ev4ilevilevil.00", "evilevilevil.eevilevil.00", "evilevilevil.6evilevil.00", "evilevilevil.evilevil.00", "evilevilevil.evilevilevil.evilevilevil.00", "evilevilevil.00", "evilevilevilevilevil.evilevilevil.00", "evil.evilevilevil.00", "evilevilev4il.evilevilevil.00", "evilevile.evilevilevil.00", "evilevil6.evilevilevil.00", "evil.evil.evilevilevil.00", "evil-evil.evilevilevil.00", "evilev4ilevil.evilevilevil.00", "evileevil.evilevilevil.00", "evil6evil.evilevilevil.00", "ev4ilevilevil.evilevilevil.00", "eevilevil.evilevilevil.00", "6evilevil.evilevilevil.00", "evilevil.evilevilevil.00", "evil.00", "evilevilevil.evilevilevil.00"], "nonMatches": ["evilevilevil.evilevilevil", "evilevilevil.evilevilevil.00000000", "evilevilevil.evilevilevil.0", "evilevilevil..00", "evilevilevil.evilevileVil.00", "evilevilevil.evilevilEVIL.00", "evilevilevil.evilevilev_il.00", "evilevilevil.evilevilev il.00", "evilevilevil.evilevil .00", "evilevilevil.evilevil_.00", "evilevilevil.evileVilevil.00", "evilevilevil.evilEVILevil.00", "evilevilevil.evilev_ilevil.00", "evilevilevil.evilev ilevil.00", "evilevilevil.evil evil.00", "evilevilevil.evil_evil.00", "evilevilevil.eVilevilevil.00", "evilevilevil.EVILevilevil.00", "evilevilevil.ev_ilevilevil.00", "evilevilevil.ev ilevilevil.00", "evilevilevil. evilevil.00", "evilevilevil._evilevil.00", "evilevileVil.evilevilevil.00", "evilevilEVIL.evilevilevil.00", "evilevilev_il.evilevilevil.00", "evilevilev il.evilevilevil.00", "evilevil .evilevilevil.00", "evilevil_.evilevilevil.00", "evileVilevil.evilevilevil.00", "evilEVILevil.evilevilevil.00", "evilev_ilevil.evilevilevil.00", "evilev ilevil.evilevilevil.00", "evil evil.evilevilevil.00", "evil_evil.evilevilevil.00", "eVilevilevil.evilevilevil.00", "EVILevilevil.evilevilevil.00", "ev_ilevilevil.evilevilevil.00", "ev ilevilevil.evilevilevil.00", " evilevil.evilevilevil.00", "_evilevil.evilevilevil.00"]}, {"regex": "((xmlns:.*?=[&quot;,&#39;].*?[&quot;,&#39;])|(xmlns=[&quot;,&#39;].*?[&quot;,&#39;]))", "exceptionStackTrace": null, "matches": ["xmlns=;evilu", "xmlns=;evilt", "xmlns=;evilq", "xmlns=;evilo", "xmlns=;evil9", "xmlns=;evil3", "xmlns=;evil,", "xmlns=;evil&", "xmlns=;evil#", "xmlns=;=;", "xmlns=;;;", "xmlns=;:;", "xmlns=;,;", "xmlns=;&;", "xmlns=;#;", "xmlns=;eVil;", "xmlns=;EVIL;", "xmlns=;ev_il;", "xmlns=;ev il;", "xmlns=;ev4il;", "xmlns=;e;", "xmlns=; ;", "xmlns=;6;", "xmlns=;_;", "xmlns=uevil;", "xmlns=tevil;", "xmlns=qevil;", "xmlns=oevil;", "xmlns=9evil;", "xmlns=3evil;", "xmlns=,evil;", "xmlns=&evil;", "xmlns=#evil;", "xmlns:evil=;evilu", "xmlns:evil=;evilt", "xmlns:evil=;evilq", "xmlns:evil=;evilo", "xmlns:evil=;evil9", "xmlns:evil=;evil3", "xmlns:evil=;evil,", "xmlns:evil=;evil&", "xmlns:evil=;evil#", "xmlns:evil=;=;", "xmlns:evil=;;;", "xmlns:evil=;:;", "xmlns:evil=;,;", "xmlns:evil=;&;", "xmlns:evil=;#;", "xmlns:evil=;eVil;", "xmlns:evil=;EVIL;", "xmlns:evil=;ev_il;", "xmlns:evil=;ev il;", "xmlns:evil=;ev4il;", "xmlns:evil=;e;", "xmlns:evil=; ;", "xmlns:evil=;6;", "xmlns:evil=;_;", "xmlns:evil=;;", "xmlns:evil=uevil;", "xmlns:evil=tevil;", "xmlns:evil=qevil;", "xmlns:evil=oevil;", "xmlns:evil=9evil;", "xmlns:evil=3evil;", "xmlns:evil=,evil;", "xmlns:evil=&evil;", "xmlns:evil=#evil;", "xmlns:==;evil;", "xmlns:;=;evil;", "xmlns::=;evil;", "xmlns:,=;evil;", "xmlns:&=;evil;", "xmlns:#=;evil;", "xmlns:eVil=;evil;", "xmlns:EVIL=;evil;", "xmlns:ev_il=;evil;", "xmlns:ev il=;evil;", "xmlns:ev4il=;evil;", "xmlns:e=;evil;", "xmlns: =;evil;", "xmlns:6=;evil;", "xmlns:_=;evil;", "xmlns:=;evil;", "xmlns=;;", "xmlns:=;;", "xmlns=;evil;", "xmlns:evil=;evil;"], "nonMatches": ["xmlns=;evila", "xmlns=;evil0", "xmlns=aevil;", "xmlns=0evil;", "xmlns:evil=;evila", "xmlns:evil=;evil0", "xmlns:evil=aevil;", "xmlns:evil=0evil;"]}, {"regex": "https://www.toptryloburn.com/test-re-gen/", "exceptionStackTrace": null, "matches": ["https://wwwatoptryloburnAcom/test-re-gen/", "https://wwwatoptryloburn:com/test-re-gen/", "https://wwwatoptryloburn0com/test-re-gen/", "https://wwwatoptryloburn/com/test-re-gen/", "https://wwwatoptryloburn-com/test-re-gen/", "https://wwwatoptryloburn com/test-re-gen/", "https://wwwAtoptryloburnacom/test-re-gen/", "https://www:toptryloburnacom/test-re-gen/", "https://www0toptryloburnacom/test-re-gen/", "https://www/toptryloburnacom/test-re-gen/", "https://www-toptryloburnacom/test-re-gen/", "https://www toptryloburnacom/test-re-gen/", "https://wwwatoptryloburnacom/test-re-gen/"], "nonMatches": []}, {"regex": "<\\s*?[^>]+\\s*?>", "exceptionStackTrace": null, "matches": ["< evil  >", "< evil>", "< > >", "< < >", "< eVil >", "< EVIL >", "< ev_il >", "< ev il >", "< ev4il >", "< e >", "<   >", "< 6 >", "< _ >", "<  >", "<  evil >", "<evil >", "<evil>", "< evil >"], "nonMatches": []}, {"regex": "^(((\\d{4})(0[13578]|10|12)(0[1-9]|[12][0-9]|3[01]))|((\\d{4})(0[469]|11)([0][1-9]|[12][0-9]|30))|((\\d{4})(02)(0[1-9]|1[0-9]|2[0-8]))|(([02468][048]00)(02)(29))|(([13579][26]00) (02)(29))|(([0-9][0-9][0][48])(02)(29))|(([0-9][0-9][2468][048])(02)(29))|(([0-9][0-9][13579][26])(02)(29))|(00000000)|(88888888)|(99999999))?$", "exceptionStackTrace": null, "matches": ["00920229", "00760229", "00560229", "00360229", "00160229", "00840229", "00800229", "00680229", "00480229", "00280229", "00040229", "9200 0229", "7600 0229", "5600 0229", "3600 0229", "1600 0229", "84000229", "80000229", "68000229", "48000229", "28000229", "08000229", "00000229", "00000910", "00000601", "00000401", "00000830", "00000810", "00000701", "00000501", "00000301", "00000101", "", "99999999", "88888888", "00000000", "00960229", "00880229", "00080229", "9600 0229", "88000229", "00000220", "00000210", "00000201", "00001101", "00000930", "00000920", "00000901", "00001201", "00001001", "00000831", "00000820", "00000801"], "nonMatches": ["00900229", "00060229", "00810229", "9000 0229", "0600 0229", "81000229", "18000229", "00000200", "000000201", "0000201", "00000900", "000000901", "0000901", "00000832", "0000080100000801", "00000800", "00000001", "000000801", "0000801"]}, {"regex": "[()+-.0-9]*", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: +-."}, "matches": [], "nonMatches": []}, {"regex": "^((\\\\{2}\\w+)\\$?)((\\\\{1}\\w+)*$)", "exceptionStackTrace": null, "matches": ["\\\\evil$\\evil\\evil", "\\\\evil$", "\\\\evil$\\eVil", "\\\\evil$\\EVIL", "\\\\evil$\\ev_il", "\\\\evil$\\ev4il", "\\\\evil$\\e", "\\\\evil$\\6", "\\\\evil$\\_", "\\\\evil\\evil", "\\\\eVil$\\evil", "\\\\EVIL$\\evil", "\\\\ev_il$\\evil", "\\\\ev4il$\\evil", "\\\\e$\\evil", "\\\\6$\\evil", "\\\\_$\\evil", "\\\\evil", "\\\\evil$\\evil"], "nonMatches": ["\\\\evil$\\ev il", "\\\\evil$\\ ", "\\\\evil$\\", "\\\\evil$\\\\evil", "\\\\evil$evil", "\\\\evil$$\\evil", "\\\\ev il$\\evil", "\\\\ $\\evil", "\\\\$\\evil", "\\\\\\evil$\\evil", "\\evil$\\evil"]}, {"regex": ".*?((?:\\b|\\+)\\d[\\d \\-\\(\\)]+\\d)\\b.*", "exceptionStackTrace": null, "matches": ["+0)0", "0)0"], "nonMatches": ["evil0)0-", "evil0)0+", "evil0)0)", "evil0)0(", "evil0)0eVil", "evil0)0EVIL", "evil0)0ev_il", "evil0)0ev il", "evil0)0ev4il", "evil0)0e", "evil0)0 ", "evil0)06", "evil0)0_", "evil0)0", "evil0))0evil", "evil00evil", "evil000evil", "evil0-0evil", "evil0(0evil", "evil0 0evil", "-0)0evil", "+0)0evil", ")0)0evil", "(0)0evil", "eVil0)0evil", "EVIL0)0evil", "ev_il0)0evil", "ev il0)0evil", "ev4il0)0evil", "e0)0evil", " 0)0evil", "60)0evil", "_0)0evil", "0)0evil", "evil+0)0evil", "evil0)0evil"]}, {"regex": "^(((0|128|192|224|240|248|252|254).0.0.0)|(255.(0|128|192|224|240|248|252|254).0.0)|(255.255.(0|128|192|224|240|248|252|254).0)|(255.255.255.(0|128|192|224|240|248|252|254)))$", "exceptionStackTrace": null, "matches": ["255a255a255_0", "255a255a255A0", "255a255a25500", "255a255a255 0", "255a255_255a0", "255a255A255a0", "255a2550255a0", "255a255 255a0", "255_255a255a0", "255A255a255a0", "2550255a255a0", "255 255a255a0", "255a255a0_0", "255a255a0A0", "255a255a000", "255a255a0 0", "255a255_0a0", "255a255A0a0", "255a25500a0", "255a255 0a0", "255_255a0a0", "255A255a0a0", "2550255a0a0", "255 255a0a0", "255a0a0_0", "255a0a0A0", "255a0a000", "255a0a0 0", "255a0_0a0", "255a0A0a0", "255a000a0", "255a0 0a0", "255_0a0a0", "255A0a0a0", "25500a0a0", "255 0a0a0", "0a0a0_0", "0a0a0A0", "0a0a000", "0a0a0 0", "0a0_0a0", "0a0A0a0", "0a000a0", "0a0 0a0", "0_0a0a0", "0A0a0a0", "000a0a0", "0 0a0a0", "255a255a255a254", "255a255a255a252", "255a255a255a248", "255a255a255a240", "255a255a255a224", "255a255a255a192", "255a255a255a128", "255a255a255a0", "255a255a254a0", "255a255a252a0", "255a255a248a0", "255a255a240a0", "255a255a224a0", "255a255a192a0", "255a255a128a0", "255a255a0a0", "255a254a0a0", "255a252a0a0", "255a248a0a0", "255a240a0a0", "255a224a0a0", "255a192a0a0", "255a128a0a0", "255a0a0a0", "254a0a0a0", "252a0a0a0", "248a0a0a0", "240a0a0a0", "224a0a0a0", "192a0a0a0", "128a0a0a0", "0a0a0a0"], "nonMatches": []}, {"regex": "^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})(/([0-9]|[0-2][0-9]|3[0-2]))$", "exceptionStackTrace": null, "matches": ["00.0.0.250/0", "10.100.100.250/0", "250.200.200.250/0", "250.250.250.00/0", "250.250.250.10/0", "100.0.0.250/0", "200.0.0.250/0", "250.0.0.0/0", "250.0.0.100/0", "250.0.0.200/0", "250.0.0.250/30", "250.0.0.250/00", "250.0.0.250/0", "0.0.0.250/0", "100.100.100.250/0", "200.200.200.250/0", "250.250.250.0/0", "250.250.250.100/0", "250.250.250.200/0", "250.250.250.250/30", "250.250.250.250/00", "250.250.250.250/0"], "nonMatches": ["000.0.0.250/0", ".0.0.250/0", "1000.100.100.250/0", "250.250.250.000/0", "250.250.250./0", "250.250.250.1000/0", "250.250.250.250/33", "250.250.250.256/0", "250.250.250.250.250/0", "250.250.250/0", "256.250.250.250/0"]}, {"regex": "([a-zA-Z]:(\\\\w+)*\\\\[a-zA-Z0_9]+)?.xls", "exceptionStackTrace": null, "matches": ["A:\\w\\evil_xls", "A:\\w\\evil\\xls", "A:\\w\\evilAxls", "A:\\w\\evil:xls", "A:\\w\\evil0xls", "A:\\w\\evil xls", "A:\\w\\evilA:\\w\\evilaxls", "A:\\w\\\\axls", "A:\\w\\:axls", "A:\\w\\eVilaxls", "A:\\w\\EVILaxls", "A:\\w\\ev_ilaxls", "A:\\w\\ev ilaxls", "A:\\w\\ev4ilaxls", "A:\\w\\eaxls", "A:\\w\\ axls", "A:\\w\\6axls", "A:\\w\\_axls", "A:\\w\\axls", "A:\\w\\w\\evilaxls", "A:\\evilaxls", "A:\\ww\\evilaxls", "A:\\\\evilaxls", "a:\\w\\evilaxls", "axls", "A:\\w\\evilaxls"], "nonMatches": []}, {"regex": "^[^&#39;]*$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"], "nonMatches": [";", "&", "#"]}, {"regex": "(\\b([A-Z]\\s?[A-Z]\\s?[- .:]*[A-Z0-9]\\s?[A-Z0-9][- .:]*[0-9]\\s?[0-9]?\\s?)\\b)", "exceptionStackTrace": null, "matches": ["A A :0 0:0 0  ", "A A :0 0:0 0", "A A :0 0:0 00 ", "A A :0 0:0  ", "A A :0 0:0  0 ", "A A :0 0:00 ", "A A :0 0::0 0 ", "A A :0 00 0 ", "A A :0 0.0 0 ", "A A :0 0-0 0 ", "A A :0 0 0 0 ", "A A :0 A:0 0 ", "A A :00:0 0 ", "A A :A 0:0 0 ", "A A ::0 0:0 0 ", "A A 0 0:0 0 ", "A A .0 0:0 0 ", "A A -0 0:0 0 ", "A A  0 0:0 0 ", "A A  :0 0:0 0 ", "A A:0 0:0 0 ", "AA :0 0:0 0 ", "AA000", "A A :0 0:0 0 "], "nonMatches": ["A A :0  0:0 0 ", "A  A :0 0:0 0 "]}, {"regex": "\\b(([A-H]|[J-Z])\\s?([A-L]|[N-Z])[-_ :.]*[0-9]\\s?[0-9][-_ :.]*[0-9]\\s?[0-9])\\b|\\b(([B-D]|[F-H]|[J-K]|[L]|[P]|[R-T]|[V-Z])\\s?([B-D]|[F-H]|[J-K]|[L]|[P]|[R-T]|[V-Z])[-_ :.]*([B-D]|[F-H]|[J-K]|[L]|[P]|[R-T]|[V-Z])\\s?([B-D]|[F-H]|[J-K]|[L-N]|[P]|[R-T]|[V-Z])[-_ :.]*[1-9]\\s?[0-9])\\b", "exceptionStackTrace": null, "matches": ["B B.B B.10", "B B.B B..1 0", "B B.B B1 0", "B B.B B_1 0", "B B.B B:1 0", "B B.B B-1 0", "B B.B B 1 0", "B B.BB.1 0", "B B..B B.1 0", "B BB B.1 0", "B B_B B.1 0", "B B:B B.1 0", "B B-B B.1 0", "B B B B.1 0", "BB.B B.1 0", "A A.0 0.00", "A A.0 0..0 0", "A A.0 00 0", "A A.0 0_0 0", "A A.0 0:0 0", "A A.0 0-0 0", "A A.0 0 0 0", "A A.00.0 0", "A A..0 0.0 0", "A A0 0.0 0", "A A_0 0.0 0", "A A:0 0.0 0", "A A-0 0.0 0", "A A 0 0.0 0", "AA.0 0.0 0", "VBBB10", "RBBB10", "PBBB10", "LBBB10", "JBBB10", "FBBB10", "BVBB10", "BRBB10", "BPBB10", "BLBB10", "BJBB10", "BFBB10", "BBVB10", "BBRB10", "BBPB10", "BBLB10", "BBJB10", "BBFB10", "BBBV10", "BBBR10", "BBBP10", "BBBL10", "BBBJ10", "BBBF10", "BBBB10", "JA0000", "AN0000", "AA0000", "V B.B B.1 0", "R B.B B.1 0", "P B.B B.1 0", "L B.B B.1 0", "J B.B B.1 0", "F B.B B.1 0", "B V.B B.1 0", "B R.B B.1 0", "B P.B B.1 0", "B L.B B.1 0", "B J.B B.1 0", "B F.B B.1 0", "B B.V B.1 0", "B B.R B.1 0", "B B.P B.1 0", "B B.L B.1 0", "B B.J B.1 0", "B B.F B.1 0", "B B.B V.1 0", "B B.B R.1 0", "B B.B P.1 0", "B B.B L.1 0", "B B.B J.1 0", "B B.B F.1 0", "B B.B B.1 0", "J A.0 0.0 0", "A N.0 0.0 0", "A A.0 0.0 0"], "nonMatches": ["B B.B B.1  0", "B B.B B.0 0", "B B.B A.1 0", "B B.B  B.1 0", "B B.A B.1 0", "B A.B B.1 0", "B  B.B B.1 0", "A B.B B.1 0", "A A.0 0.0  0", "A A.0  0.0 0", "A M.0 0.0 0", "A  A.0 0.0 0", "I A.0 0.0 0"]}, {"regex": "^(((((0?[1-9])|(1\\d)|(2[0-8]))\\.((0?[1-9])|(1[0-2])))|((31\\.((0[13578])|(1[02])))|((29|30)\\.((0?[1,3-9])|(1[0-2])))))\\.((20[0-9][0-9]))|(29\\.0?2\\.20(([02468][048])|([13579][26]))))$", "exceptionStackTrace": null, "matches": ["29.02.2092", "29.02.2076", "29.02.2056", "29.02.2036", "29.02.2016", "29.02.2084", "29.02.2080", "29.02.2068", "29.02.2048", "29.02.2028", "29.02.2008", "29.03.2000", "31.10.2000", "31.07.2000", "31.05.2000", "31.03.2000", "31.01.2000", "29.01.2000", "01.1.2000", "1.01.2000", "29.2.2096", "29.2.2088", "30.,.2000", "29.,.2000", "20.1.2000", "10.1.2000", "1.10.2000", "1.1.2000", "29.02.2096", "29.02.2088", "30.0,.2000", "29.10.2000", "29.0,.2000", "31.12.2000", "31.08.2000", "20.01.2000", "10.01.2000", "01.10.2000", "01.01.2000"], "nonMatches": ["29.02.2090", "29.02.2006", "29.02.2081", "29.02.2018", "29.002.2088", "29.13.2000", "29.00.2000", "29.00,.2000", "31.11.2000", "31.00.2000", "01.13.2000", "01.00.2000", "01.001.2000", "00.01.2000", "001.01.2000"]}, {"regex": "jhkjhk", "exceptionStackTrace": null, "matches": ["jhkjhk"], "nonMatches": []}, {"regex": "^((0?[1-9])|((1|2)[0-9])|30|31)$", "exceptionStackTrace": null, "matches": ["1", "31", "30", "20", "10", "01"], "nonMatches": ["00", "001"]}, {"regex": "^((((0[13578])|([13578])|(1[02]))[\\/](([1-9])|([0-2][0-9])|(3[01])))|(((0[469])|([469])|(11))[\\/](([1-9])|([0-2][0-9])|(30)))|((2|02)[\\/](([1-9])|([0-2][0-9]))))[\\/]\\d{4}$|^\\d{4}$", "exceptionStackTrace": null, "matches": ["6/1/0000", "4/1/0000", "06/1/0000", "04/1/0000", "10/1/0000", "7/1/0000", "5/1/0000", "3/1/0000", "1/1/0000", "08/30/0000", "07/1/0000", "05/1/0000", "03/1/0000", "01/1/0000", "0000", "02/1/0000", "2/00/0000", "2/1/0000", "11/1/0000", "9/1/0000", "09/30/0000", "09/00/0000", "09/1/0000", "12/1/0000", "8/1/0000", "08/31/0000", "08/00/0000", "08/1/0000"], "nonMatches": ["00000", "000", "2/30/0000", "2/0/0000", "09/0/0000", "0/1/0000", "08/32/0000", "08/1/00000", "08/1/000", "08/0/0000", "00/1/0000"]}, {"regex": "(\\d{1,2})\\W+(\\d{1,2})\\W*(\\d{2,4})?|(\\d{4})\\W(\\d{1,2})\\W(\\d{1,2})|([a-zA-Z]+)\\W*(\\d{1,2})\\W+(\\d{2,4})|(\\d{4})\\W*([a-zA-Z]+)\\W*(\\d{1,2})|(\\d{1,2})\\W*([a-zA-Z]+)\\W*(\\d{2,4})|(\\d{1,2})\\W*([a-zA-Z]+)|([a-zA-Z]+)\\W*(\\d{1,2})|(\\d{2})(\\d{2})(\\d{2,4})?", "exceptionStackTrace": null, "matches": ["000000000", "00000000", "0000000", "00000", "evil;00", "evil;;0", "evila0", "evilA0", "evil00", "evil 0", "eVil;0", "EVIL;0", "ev_il;0", "ev il;0", "ev4il;0", "e;0", "6;0", "0;eVil", "0;EVIL", "0;ev_il", "0;ev il", "0;ev4il", "0;e", "0;6", "0;;evil", "0aevil", "0Aevil", "00evil", "0 evil", "000;evil", "00;evil", "0;evil;00000", "0;evil;0000", "0;evil;0", "0;evil;;00", "0;evil00", "0;evila00", "0;evil_00", "0;evilA00", "0;evil000", "0;evil 00", "0;eVil;00", "0;EVIL;00", "0;ev_il;00", "0;ev il;00", "0;ev4il;00", "0;e;00", "0; ;00", "0;6;00", "0;;evil;00", "0evil;00", "0aevil;00", "0_evil;00", "0Aevil;00", "00evil;00", "0 evil;00", "000;evil;00", "00;evil;00", ";evil;00", "0000;evil;000", "0000;evil;00", "0000;evil;", "0000;evil;;0", "0000;evil0", "0000;evila0", "0000;evil_0", "0000;evilA0", "0000;evil00", "0000;evil 0", "0000;eVil;0", "0000;EVIL;0", "0000;ev_il;0", "0000;ev il;0", "0000;ev4il;0", "0000;e;0", "0000; ;0", "0000;6;0", "0000;_;0", "0000;;evil;0", "0000evil;0", "0000aevil;0", "0000_evil;0", "0000Aevil;0", "00000evil;0", "0000 evil;0", "00000;evil;0", "000;evil;0", "evil;0;00000", "evil;0;0000", "evil;0;0", "evil;0;;00", "evil;000", "evil;0a00", "evil;0_00", "evil;0A00", "evil;0000", "evil;0 00", "evil;000;00", "evil;00;00", "evil;;00", "evil;;0;00", "evila0;00", "evil_0;00", "evilA0;00", "evil00;00", "evil 0;00", "eVil;0;00", "EVIL;0;00", "ev_il;0;00", "ev il;0;00", "ev4il;0;00", "e;0;00", " ;0;00", "6;0;00", "_;0;00", "0000;0;000", "0000;0;00", "0000;0;", "0000;0a0", "0000;0_0", "0000;0A0", "0000;000", "0000;0 0", "0000;000;0", "0000;00;0", "0000;;0", "0000a0;0", "0000_0;0", "0000A0;0", "000000;0", "0000 0;0", "00000;0;0", "000;0;0", "0;0;", "0;0;00000", "0;0;0000", "0;0;0", "0;0;;00", "0;000", "0;0a00", "0;0_00", "0;0A00", "0;0000", "0;0 00", "0;000;00", "0;00;00", "0;;00", "0;;0;00", "00;00", "0a0;00", "0_0;00", "0A0;00", "000;00", "0 0;00", "000;0;00", "00;0;00", ";0;00", "0000", "evil0", "0evil", "0evil00", "0000evil0", "evil0;00", "0;0", "000000", "evil;0", "0;evil", "0;evil;00", "0000;evil;0", "evil;0;00", "0000;0;0", "0;0;00"], "nonMatches": ["evil;", "evil_0", " ;0", "_;0", ";0", "0; ", "0;_", "0;", "0_evil", ";evil", "0;_;00"]}, {"regex": "^(.{0,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{4,})|(.{1,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{3,})|(.{2,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{2,})|(.{3,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{1,})|(.{4,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{0,})$", "exceptionStackTrace": null, "matches": ["aaaa0aevil", "aaaa_Aevil", "aaaa Aevil", "aaaaA0eVil", "aaaaA0EVIL", "aaaaA0ev_il", "aaaaA0ev il", "aaaaA0ev4il", "aaaaA0e", "aaaaA0 ", "aaaaA06", "aaaaA0_", "aaaaA_evil", "aaaaA evil", "aaaaa0evil", "_aaaA0evil", "AaaaA0evil", "0aaaA0evil", " aaaA0evil", "aaa0aevil", "aaa_Aevil", "aaa Aevil", "aaaA0eVil", "aaaA0EVIL", "aaaA0ev_il", "aaaA0ev il", "aaaA0ev4il", "aaaA0e", "aaaA0 ", "aaaA06", "aaaA0_", "aaaA_evil", "aaaA evil", "aaaa0evil", "aaA0evil", "_aaA0evil", "AaaA0evil", "0aaA0evil", " aaA0evil", "aa0aaa", "aa_Aaa", "aa Aaa", "aaA0_a", "aaA0Aa", "aaA00a", "aaA0 a", "aaA_aa", "aaA aa", "aaa0aa", "_aA0aa", "AaA0aa", "0aA0aa", " aA0aa", "evil0aaaa", "evil_Aaaa", "evil Aaaa", "evilA0aa", "evilA0_aa", "evilA0Aaa", "evilA00aa", "evilA0 aa", "evilA_aaa", "evilA aaa", "evila0aaa", "eVilA0aaa", "EVILA0aaa", "ev_ilA0aaa", "ev ilA0aaa", "ev4ilA0aaa", "eA0aaa", " A0aaa", "6A0aaa", "_A0aaa", "evil0aaaaa", "evil_Aaaaa", "evil Aaaaa", "evilA0_aaa", "evilA0Aaaa", "evilA00aaa", "evilA0 aaa", "evilA_aaaa", "evilA aaaa", "evila0aaaa", "eVilA0aaaa", "EVILA0aaaa", "ev_ilA0aaaa", "ev ilA0aaaa", "ev4ilA0aaaa", "eA0aaaa", " A0aaaa", "6A0aaaa", "_A0aaaa", "aaaa0A", "aaaaA0", "0Aaaaa", "A0aaaa", "aaaa0Aevil", "aaaaA0evil", "aaa0Aevil", "aaaA0evil", "aa0Aaa", "aaA0aa", "evil0Aaaa", "evilA0aaa", "evil0Aaaaa", "evilA0aaaa"], "nonMatches": ["aaaaaAevil", "aaaaAaevil", "aaaaAAevil", "aaaaAevil", "aaaA0", "aaaAaevil", "aaaAAevil", "aaaAaa", "aaA0a", "aaAaaa", "aaAAaa", "aA0aa", "evilaAaaa", "evilAaaaa", "evilAAaaa", "A0aaa", "evilaAaaaa", "evilAaaaaa", "evilAAaaaa"]}, {"regex": "^\\d[0-9]*[-/]\\d[0-9]*$", "exceptionStackTrace": null, "matches": ["00/000", "00/0", "00-00", "000/00", "0/00", "0/0", "00/00"], "nonMatches": []}, {"regex": "^(?:(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY]))$", "exceptionStackTrace": null, "matches": ["WV", "WI", "WA", "VI", "VA", "TN", "SC", "PA", "OK", "OH", "NV", "NM", "NJ", "NH", "NE", "ND", "NC", "MS", "MO", "MN", "MI", "ME", "MD", "MA", "KS", "IL", "ID", "IA", "DC", "CO", "CA", "AR", "AL", "AK", "WY", "VT", "UT", "TX", "SD", "RI", "PR", "OR", "NY", "MT", "LA", "KY", "IN", "HI", "GA", "FL", "DE", "CT", "AZ"], "nonMatches": ["WB", "VB", "TA", "SA", "PB", "OA", "NA", "MB", "KA", "IB", "DA", "CB", "AA"]}, {"regex": "^(19[0-9]{2}|[2-9][0-9]{3})-((0(1|3|5|7|8)|10|12)-(0[1-9]|1[0-9]|2[0-9]|3[0-1])|(0(4|6|9)|11)-(0[1-9]|1[0-9]|2[0-9]|30)|(02)-(0[1-9]|1[0-9]|2[0-9]))\\x20(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$", "exceptionStackTrace": null, "matches": ["2000-01-01 00:00:00", "1900-02-20 00:00:00", "1900-02-10 00:00:00", "1900-02-01 00:00:00", "1900-11-01 00:00:00", "1900-09-01 00:00:00", "1900-06-01 00:00:00", "1900-04-30 00:00:00", "1900-04-20 00:00:00", "1900-04-10 00:00:00", "1900-04-01 00:00:00", "1900-12-01 00:00:00", "1900-10-01 00:00:00", "1900-08-01 00:00:00", "1900-07-01 00:00:00", "1900-05-01 00:00:00", "1900-03-01 00:00:00", "1900-01-30 00:00:00", "1900-01-20 00:00:00", "1900-01-10 00:00:00", "1900-01-01 20:00:00", "1900-01-01 10:00:00", "1900-01-01 00:00:00"], "nonMatches": ["20000-01-01 00:00:00", "200-01-01 00:00:00", "0000-01-01 00:00:00", "1900-02-00 00:00:00", "1900-04-00 00:00:00", "1900-01-32 00:00:00", "1900-01-01 24:00:00", "1900-01-01 00:00:00:00", "1900-01-01 00:00", "1900-01-01 00:60:00", "1900-01-00 00:00:00", "19000-01-01 00:00:00", "190-01-01 00:00:00"]}, {"regex": "(^[a-zA-Z][a-zA-Z0-9_]*)|(^[_][a-zA-Z0-9_]+)", "exceptionStackTrace": null, "matches": ["_eVil", "_EVIL", "_ev_il", "_ev il", "_ev4il", "_e", "_6", "__", "AeVil", "AEVIL", "Aev_il", "Aev il", "Aev4il", "Ae", "A ", "A6", "A_", "aevil", "A", "_evil", "Aevil"], "nonMatches": ["_ ", "_"]}, {"regex": "&#39;&quot;", "exceptionStackTrace": null, "matches": ["&#39;&quot;"], "nonMatches": []}, {"regex": "[+-](^0.*)", "exceptionStackTrace": null, "matches": [], "nonMatches": ["-0-", "-0+", "-0eVil", "-0EVIL", "-0ev_il", "-0ev il", "-0ev4il", "-0e", "-0 ", "-06", "-0_", "+0evil", "-0", "-0evil"]}, {"regex": "(((0*[1-9]|[12][0-9]|3[01])([-./])(0*[13578]|10|12)([-./])(\\d{4}))|((0*[1-9]|[12][0-9]|30)([-./])(0*[469]|11)([-./])(\\d{4}))|((0*[1-9]|1[0-9]|2[0-8])([-./])(02|2)([-./])(\\d{4}))|((29)(\\.|-|\\/)(02|2)([-./])([02468][048]00))|((29)([-./])(02|2)([-./])([13579][26]00))|((29)([-./])(02|2)([-./])([0-9][0-9][0][48]))|((29)([-./])(02|2)([-./])([0-9][0-9][2468][048]))|((29)([-./])(02|2)([-./])([0-9][0-9][13579][26])))", "exceptionStackTrace": null, "matches": ["29/02/0092", "29/02/0090", "29/02/0076", "29/02/0056", "29/02/0036", "29/02/0016", "29/02/0006", "29/02.0096", "29/02-0096", "29.02/0096", "29-02/0096", "29/02/0084", "29/02/0081", "29/02/0080", "29/02/0068", "29/02/0048", "29/02/0028", "29/02.0088", "29/02-0088", "29.02/0088", "29-02/0088", "29/02/0004", "29/02.0008", "29/02-0008", "29.02/0008", "29-02/0008", "29/02/9200", "29/02/9000", "29/02/7600", "29/02/5600", "29/02/3600", "29/02/1600", "29/02/0600", "29/02.9600", "29/02-9600", "29.02/9600", "29-02/9600", "29.02/8400", "29.02/8100", "29.02/8000", "29.02/6800", "29.02/4800", "29.02/2800", "29.02/1800", "29.02/0800", "29.02.8800", "29.02-8800", "29/02/0000", "01/02/00000", "01/02.0000", "01/02-0000", "01.02/0000", "01-02/0000", "001/02/0000", "10/09/0000", "01/09/00000", "01/09.0000", "01/09-0000", "01/06/0000", "01/04/0000", "01/009/0000", "01/9/0000", "01.09/0000", "01-09/0000", "001/09/0000", "1/09/0000", "32/08/0000", "30/08/0000", "10/08/0000", "01/08/00000", "01/08.0000", "01/08-0000", "01/07/0000", "01/05/0000", "01/03/0000", "01/01/0000", "01/008/0000", "01/8/0000", "01.08/0000", "01-08/0000", "001/08/0000", "1/08/0000", "1/2/0000", "1/02/0000", "30/9/0000", "20/9/0000", "1/11/0000", "1/9/0000", "31/8/0000", "20/8/0000", "1/12/0000", "1/10/0000", "1/8/0000", "29/2/0096", "29/02/0096", "29/2/0088", "29/02/0088", "29/2/0008", "29/02/0008", "29/2/9600", "29/02/9600", "29/02/8800", "29-02/8800", "29.2/8800", "29.02/8800", "20/02/0000", "10/02/0000", "01/2/0000", "01/02/0000", "30/09/0000", "20/09/0000", "01/11/0000", "01/09/0000", "31/08/0000", "20/08/0000", "01/12/0000", "01/10/0000", "01/08/0000"], "nonMatches": ["01/02/000", "00/02/0000", "01/09/000", "00/09/0000", "01/08/000", "01/00/0000", "00/08/0000"]}, {"regex": "([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", "exceptionStackTrace": null, "matches": ["0000-0-000", "0000-0-00", "0000-00-0", "00000-0-0", "0000-0-0"], "nonMatches": ["0000-0-", "0000-000-0", "0000--0", "000-0-0"]}, {"regex": "#<a\\s*(?:href=[\\&#39;&quot;]([^\\&#39;&quot;]+)[\\&#39;&quot;])?\\s*(?:title=[\\&#39;&quot;]([^\\&#39;&quot;]+)[\\&#39;&quot;])?.*?>((?:(?!</a>).)*)</a>#i", "exceptionStackTrace": null, "matches": ["#<a href=;evil; title=;evil;evil>aa</a>#i", "#<a href=;evil; title=;evil;evil></a>#i", "#<a href=;evil; title=;evil;evil>A</a>#i", "#<a href=;evil; title=;evil;evil>></a>#i", "#<a href=;evil; title=;evil;evil>=</a>#i", "#<a href=;evil; title=;evil;evil><</a>#i", "#<a href=;evil; title=;evil;evil>;</a>#i", "#<a href=;evil; title=;evil;evil>0</a>#i", "#<a href=;evil; title=;evil;evil>/</a>#i", "#<a href=;evil; title=;evil;evil>&</a>#i", "#<a href=;evil; title=;evil;evil>#</a>#i", "#<a href=;evil; title=;evil;evil> </a>#i", "#<a href=;evil; title=;evil;>>a</a>#i", "#<a href=;evil; title=;evil;=>a</a>#i", "#<a href=;evil; title=;evil;<>a</a>#i", "#<a href=;evil; title=;evil;;>a</a>#i", "#<a href=;evil; title=;evil;/>a</a>#i", "#<a href=;evil; title=;evil;&>a</a>#i", "#<a href=;evil; title=;evil;#>a</a>#i", "#<a href=;evil; title=;evil;eVil>a</a>#i", "#<a href=;evil; title=;evil;EVIL>a</a>#i", "#<a href=;evil; title=;evil;ev_il>a</a>#i", "#<a href=;evil; title=;evil;ev il>a</a>#i", "#<a href=;evil; title=;evil;ev4il>a</a>#i", "#<a href=;evil; title=;evil;e>a</a>#i", "#<a href=;evil; title=;evil; >a</a>#i", "#<a href=;evil; title=;evil;6>a</a>#i", "#<a href=;evil; title=;evil;_>a</a>#i", "#<a href=;evil; title=;evil;>a</a>#i", "#<a href=;evil; title=;evil;title=;evil;evil>a</a>#i", "#<a href=;evil; evil>a</a>#i", "#<a href=;evil; title=;eviluevil>a</a>#i", "#<a href=;evil; title=;eviltevil>a</a>#i", "#<a href=;evil; title=;evilqevil>a</a>#i", "#<a href=;evil; title=;eviloevil>a</a>#i", "#<a href=;evil; title=;evilaevil>a</a>#i", "#<a href=;evil; title=;evil9evil>a</a>#i", "#<a href=;evil; title=;evil3evil>a</a>#i", "#<a href=;evil; title=;evil0evil>a</a>#i", "#<a href=;evil; title=;evil&evil>a</a>#i", "#<a href=;evil; title=;evil#evil>a</a>#i", "#<a href=;evil; title=;>;evil>a</a>#i", "#<a href=;evil; title=;=;evil>a</a>#i", "#<a href=;evil; title=;<;evil>a</a>#i", "#<a href=;evil; title=;;;evil>a</a>#i", "#<a href=;evil; title=;/;evil>a</a>#i", "#<a href=;evil; title=;&;evil>a</a>#i", "#<a href=;evil; title=;#;evil>a</a>#i", "#<a href=;evil; title=;eVil;evil>a</a>#i", "#<a href=;evil; title=;EVIL;evil>a</a>#i", "#<a href=;evil; title=;ev_il;evil>a</a>#i", "#<a href=;evil; title=;ev il;evil>a</a>#i", "#<a href=;evil; title=;ev4il;evil>a</a>#i", "#<a href=;evil; title=;e;evil>a</a>#i", "#<a href=;evil; title=; ;evil>a</a>#i", "#<a href=;evil; title=;6;evil>a</a>#i", "#<a href=;evil; title=;_;evil>a</a>#i", "#<a href=;evil; title=;;evil>a</a>#i", "#<a href=;evil; title=uevil;evil>a</a>#i", "#<a href=;evil; title=tevil;evil>a</a>#i", "#<a href=;evil; title=qevil;evil>a</a>#i", "#<a href=;evil; title=oevil;evil>a</a>#i", "#<a href=;evil; title=aevil;evil>a</a>#i", "#<a href=;evil; title=9evil;evil>a</a>#i", "#<a href=;evil; title=3evil;evil>a</a>#i", "#<a href=;evil; title=0evil;evil>a</a>#i", "#<a href=;evil; title=&evil;evil>a</a>#i", "#<a href=;evil; title=#evil;evil>a</a>#i", "#<a href=;evil;  title=;evil;evil>a</a>#i", "#<a href=;evil;title=;evil;evil>a</a>#i", "#<a href=;evil;href=;evil; title=;evil;evil>a</a>#i", "#<a  title=;evil;evil>a</a>#i", "#<a href=;evilu title=;evil;evil>a</a>#i", "#<a href=;evilt title=;evil;evil>a</a>#i", "#<a href=;evilq title=;evil;evil>a</a>#i", "#<a href=;evilo title=;evil;evil>a</a>#i", "#<a href=;evila title=;evil;evil>a</a>#i", "#<a href=;evil9 title=;evil;evil>a</a>#i", "#<a href=;evil3 title=;evil;evil>a</a>#i", "#<a href=;evil0 title=;evil;evil>a</a>#i", "#<a href=;evil& title=;evil;evil>a</a>#i", "#<a href=;evil# title=;evil;evil>a</a>#i", "#<a href=;>; title=;evil;evil>a</a>#i", "#<a href=;=; title=;evil;evil>a</a>#i", "#<a href=;<; title=;evil;evil>a</a>#i", "#<a href=;;; title=;evil;evil>a</a>#i", "#<a href=;/; title=;evil;evil>a</a>#i", "#<a href=;&; title=;evil;evil>a</a>#i", "#<a href=;#; title=;evil;evil>a</a>#i", "#<a href=;eVil; title=;evil;evil>a</a>#i", "#<a href=;EVIL; title=;evil;evil>a</a>#i", "#<a href=;ev_il; title=;evil;evil>a</a>#i", "#<a href=;ev il; title=;evil;evil>a</a>#i", "#<a href=;ev4il; title=;evil;evil>a</a>#i", "#<a href=;e; title=;evil;evil>a</a>#i", "#<a href=; ; title=;evil;evil>a</a>#i", "#<a href=;6; title=;evil;evil>a</a>#i", "#<a href=;_; title=;evil;evil>a</a>#i", "#<a href=;; title=;evil;evil>a</a>#i", "#<a href=uevil; title=;evil;evil>a</a>#i", "#<a href=tevil; title=;evil;evil>a</a>#i", "#<a href=qevil; title=;evil;evil>a</a>#i", "#<a href=oevil; title=;evil;evil>a</a>#i", "#<a href=aevil; title=;evil;evil>a</a>#i", "#<a href=9evil; title=;evil;evil>a</a>#i", "#<a href=3evil; title=;evil;evil>a</a>#i", "#<a href=0evil; title=;evil;evil>a</a>#i", "#<a href=&evil; title=;evil;evil>a</a>#i", "#<a href=#evil; title=;evil;evil>a</a>#i", "#<a  href=;evil; title=;evil;evil>a</a>#i", "#<ahref=;evil; title=;evil;evil>a</a>#i", "#<a></a>#i", "#<a href=;evil; title=;evil;evil>a</a>#i"], "nonMatches": []}, {"regex": "^(http|https|ftp)\\://([a-zA-Z0-9\\.\\-]+(\\:[a-zA-Z0-9\\.&amp;%\\$\\-]+)*@)?((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+\\.[a-zA-Z]{2,4})(\\:[0-9]+)?(/[^/][a-zA-Z0-9\\.\\,\\?\\&#39;\\\\/\\+&amp;%\\$#\\=~_\\-@]*)*$", "exceptionStackTrace": null, "matches": ["http://evil:evil@evil.evil.AAAA:0/aevil", "http://evil:evil@evil.evil.aA:0/aevil", "http://evil:evil@evil.-.AA:0/aevil", "http://evil:evil@evil.eVil.AA:0/aevil", "http://evil:evil@evil.EVIL.AA:0/aevil", "http://evil:evil@evil.ev4il.AA:0/aevil", "http://evil:evil@evil.e.AA:0/aevil", "http://evil:evil@evil.6.AA:0/aevil", "http://evil:evil@evil.evil.evil.AA:0/aevil", "http://evil:evil@evil.AA:0/aevil", "http://evil:evil@-.evil.AA:0/aevil", "http://evil:evil@eVil.evil.AA:0/aevil", "http://evil:evil@EVIL.evil.AA:0/aevil", "http://evil:evil@ev4il.evil.AA:0/aevil", "http://evil:evil@e.evil.AA:0/aevil", "http://evil:evil@6.evil.AA:0/aevil", "http://evil:evil@100.250.250.250:0/aevil", "http://evil:evil@110.250.250.250:0/aevil", "http://evil:evil@250.100.250.250:0/aevil", "http://evil:evil@250.110.250.250:0/aevil", "http://evil:evil@250.250.100.250:0/aevil", "http://evil:evil@250.250.110.250:0/aevil", "http://evil:evil@250.250.250.100:0/aevil", "http://evil:evil@250.250.250.1:0/aevil", "http://evil:evil@250.250.250.110:0/aevil", "http://evil:evil@250.250.250.250:0/aevil/aevil", "http://evil:evil@250.250.250.250:0", "http://evil:evil@250.250.250.250:0/a~", "http://evil:evil@250.250.250.250:0/a\\", "http://evil:evil@250.250.250.250:0/a@", "http://evil:evil@250.250.250.250:0/a?", "http://evil:evil@250.250.250.250:0/a=", "http://evil:evil@250.250.250.250:0/a;", "http://evil:evil@250.250.250.250:0/a/", "http://evil:evil@250.250.250.250:0/a.", "http://evil:evil@250.250.250.250:0/a-", "http://evil:evil@250.250.250.250:0/a,", "http://evil:evil@250.250.250.250:0/a+", "http://evil:evil@250.250.250.250:0/a&", "http://evil:evil@250.250.250.250:0/a%", "http://evil:evil@250.250.250.250:0/a$", "http://evil:evil@250.250.250.250:0/a#", "http://evil:evil@250.250.250.250:0/aeVil", "http://evil:evil@250.250.250.250:0/aEVIL", "http://evil:evil@250.250.250.250:0/aev_il", "http://evil:evil@250.250.250.250:0/aev4il", "http://evil:evil@250.250.250.250:0/ae", "http://evil:evil@250.250.250.250:0/a6", "http://evil:evil@250.250.250.250:0/a_", "http://evil:evil@250.250.250.250:0/a", "http://evil:evil@250.250.250.250:0/~evil", "http://evil:evil@250.250.250.250:0/_evil", "http://evil:evil@250.250.250.250:0/\\evil", "http://evil:evil@250.250.250.250:0/Aevil", "http://evil:evil@250.250.250.250:0/@evil", "http://evil:evil@250.250.250.250:0/?evil", "http://evil:evil@250.250.250.250:0/=evil", "http://evil:evil@250.250.250.250:0/;evil", "http://evil:evil@250.250.250.250:0/:evil", "http://evil:evil@250.250.250.250:0/0evil", "http://evil:evil@250.250.250.250:0/.evil", "http://evil:evil@250.250.250.250:0/-evil", "http://evil:evil@250.250.250.250:0/,evil", "http://evil:evil@250.250.250.250:0/+evil", "http://evil:evil@250.250.250.250:0/&evil", "http://evil:evil@250.250.250.250:0/%evil", "http://evil:evil@250.250.250.250:0/$evil", "http://evil:evil@250.250.250.250:0/#evil", "http://evil:evil@250.250.250.250:0/ evil", "http://evil:evil@250.250.250.250/aevil", "http://evil:evil@250.250.250.250:00/aevil", "http://250.250.250.250:0/aevil", "http://evil:evil:evil@250.250.250.250:0/aevil", "http://evil@250.250.250.250:0/aevil", "http://evil:;@250.250.250.250:0/aevil", "http://evil:.@250.250.250.250:0/aevil", "http://evil:-@250.250.250.250:0/aevil", "http://evil:&@250.250.250.250:0/aevil", "http://evil:%@250.250.250.250:0/aevil", "http://evil:$@250.250.250.250:0/aevil", "http://evil:eVil@250.250.250.250:0/aevil", "http://evil:EVIL@250.250.250.250:0/aevil", "http://evil:ev4il@250.250.250.250:0/aevil", "http://evil:e@250.250.250.250:0/aevil", "http://evil:6@250.250.250.250:0/aevil", "http://.:evil@250.250.250.250:0/aevil", "http://-:evil@250.250.250.250:0/aevil", "http://eVil:evil@250.250.250.250:0/aevil", "http://EVIL:evil@250.250.250.250:0/aevil", "http://ev4il:evil@250.250.250.250:0/aevil", "http://e:evil@250.250.250.250:0/aevil", "http://6:evil@250.250.250.250:0/aevil", "ftp://250.250.250.250", "https://250.250.250.250", "http://evil.AA", "http://1.250.250.250", "http://10.250.250.250", "http://000.250.250.250", "http://200.250.250.250", "http://250.0.250.250", "http://250.1.250.250", "http://250.10.250.250", "http://250.000.250.250", "http://250.200.250.250", "http://250.250.0.250", "http://250.250.1.250", "http://250.250.10.250", "http://250.250.000.250", "http://250.250.200.250", "http://250.250.250.0", "http://250.250.250.10", "http://250.250.250.000", "http://250.250.250.200", "http://250.250.250.250", "ftp://evil:evil@250.250.250.250:0/aevil", "https://evil:evil@250.250.250.250:0/aevil", "http://evil:evil@evil.evil.AA:0/aevil", "http://evil:evil@1.250.250.250:0/aevil", "http://evil:evil@10.250.250.250:0/aevil", "http://evil:evil@000.250.250.250:0/aevil", "http://evil:evil@200.250.250.250:0/aevil", "http://evil:evil@250.0.250.250:0/aevil", "http://evil:evil@250.1.250.250:0/aevil", "http://evil:evil@250.10.250.250:0/aevil", "http://evil:evil@250.000.250.250:0/aevil", "http://evil:evil@250.200.250.250:0/aevil", "http://evil:evil@250.250.0.250:0/aevil", "http://evil:evil@250.250.1.250:0/aevil", "http://evil:evil@250.250.10.250:0/aevil", "http://evil:evil@250.250.000.250:0/aevil", "http://evil:evil@250.250.200.250:0/aevil", "http://evil:evil@250.250.250.0:0/aevil", "http://evil:evil@250.250.250.10:0/aevil", "http://evil:evil@250.250.250.000:0/aevil", "http://evil:evil@250.250.250.200:0/aevil", "http://evil:evil@250.250.250.250:0/aevil"], "nonMatches": ["http://evil:evil@evil.evil.AAAAA:0/aevil", "http://evil:evil@evil.evil.A:0/aevil", "http://evil:evil@evil.~.AA:0/aevil", "http://evil:evil@evil.\\.AA:0/aevil", "http://evil:evil@evil.@.AA:0/aevil", "http://evil:evil@evil.?.AA:0/aevil", "http://evil:evil@evil.=.AA:0/aevil", "http://evil:evil@evil.;.AA:0/aevil", "http://evil:evil@evil.:.AA:0/aevil", "http://evil:evil@evil./.AA:0/aevil", "http://evil:evil@evil...AA:0/aevil", "http://evil:evil@evil.,.AA:0/aevil", "http://evil:evil@evil.+.AA:0/aevil", "http://evil:evil@evil.&.AA:0/aevil", "http://evil:evil@evil.%.AA:0/aevil", "http://evil:evil@evil.$.AA:0/aevil", "http://evil:evil@evil.#.AA:0/aevil", "http://evil:evil@evil.ev_il.AA:0/aevil", "http://evil:evil@evil.ev il.AA:0/aevil", "http://evil:evil@evil. .AA:0/aevil", "http://evil:evil@evil._.AA:0/aevil", "http://evil:evil@evil..AA:0/aevil", "http://evil:evil@~.evil.AA:0/aevil", "http://evil:evil@\\.evil.AA:0/aevil", "http://evil:evil@@.evil.AA:0/aevil", "http://evil:evil@?.evil.AA:0/aevil", "http://evil:evil@=.evil.AA:0/aevil", "http://evil:evil@;.evil.AA:0/aevil", "http://evil:evil@:.evil.AA:0/aevil", "http://evil:evil@/.evil.AA:0/aevil", "http://evil:evil@..evil.AA:0/aevil", "http://evil:evil@,.evil.AA:0/aevil", "http://evil:evil@+.evil.AA:0/aevil", "http://evil:evil@&.evil.AA:0/aevil", "http://evil:evil@%.evil.AA:0/aevil", "http://evil:evil@$.evil.AA:0/aevil", "http://evil:evil@#.evil.AA:0/aevil", "http://evil:evil@ev_il.evil.AA:0/aevil", "http://evil:evil@ev il.evil.AA:0/aevil", "http://evil:evil@ .evil.AA:0/aevil", "http://evil:evil@_.evil.AA:0/aevil", "http://evil:evil@.evil.AA:0/aevil", "http://evil:evil@0.250.250.250:0/aevil", "http://evil:evil@0000.250.250.250:0/aevil", "http://evil:evil@00.250.250.250:0/aevil", "http://evil:evil@250.0000.250.250:0/aevil", "http://evil:evil@250.00.250.250:0/aevil", "http://evil:evil@250.250.0000.250:0/aevil", "http://evil:evil@250.250.00.250:0/aevil", "http://evil:evil@250.250.250.0000:0/aevil", "http://evil:evil@250.250.250.00:0/aevil", "http://evil:evil@250.250.250.250:0/a:", "http://evil:evil@250.250.250.250:0/aev il", "http://evil:evil@250.250.250.250:0/a ", "http://evil:evil@250.250.250.250:0//evil", "http://evil:evil@250.250.250.250:0:0/aevil", "http://evil:evil@250.250.250.250:/aevil", "http://evil:evil@250.250.250.256:0/aevil", "http://evil:evil@250.250.256.250:0/aevil", "http://evil:evil@250.256.250.250:0/aevil", "http://evil:evil@256.250.250.250:0/aevil", "http://evil:evil@evil:evil@250.250.250.250:0/aevil", "http://evil:~@250.250.250.250:0/aevil", "http://evil:\\@250.250.250.250:0/aevil", "http://evil:@@250.250.250.250:0/aevil", "http://evil:?@250.250.250.250:0/aevil", "http://evil:=@250.250.250.250:0/aevil", "http://evil::@250.250.250.250:0/aevil", "http://evil:/@250.250.250.250:0/aevil", "http://evil:,@250.250.250.250:0/aevil", "http://evil:+@250.250.250.250:0/aevil", "http://evil:#@250.250.250.250:0/aevil", "http://evil:ev_il@250.250.250.250:0/aevil", "http://evil:ev il@250.250.250.250:0/aevil", "http://evil: @250.250.250.250:0/aevil", "http://evil:_@250.250.250.250:0/aevil", "http://evil:@250.250.250.250:0/aevil", "http://~:evil@250.250.250.250:0/aevil", "http://\\:evil@250.250.250.250:0/aevil", "http://@:evil@250.250.250.250:0/aevil", "http://?:evil@250.250.250.250:0/aevil", "http://=:evil@250.250.250.250:0/aevil", "http://;:evil@250.250.250.250:0/aevil", "http://::evil@250.250.250.250:0/aevil", "http:///:evil@250.250.250.250:0/aevil", "http://,:evil@250.250.250.250:0/aevil", "http://+:evil@250.250.250.250:0/aevil", "http://&:evil@250.250.250.250:0/aevil", "http://%:evil@250.250.250.250:0/aevil", "http://$:evil@250.250.250.250:0/aevil", "http://#:evil@250.250.250.250:0/aevil", "http://ev_il:evil@250.250.250.250:0/aevil", "http://ev il:evil@250.250.250.250:0/aevil", "http:// :evil@250.250.250.250:0/aevil", "http://_:evil@250.250.250.250:0/aevil", "http://:evil@250.250.250.250:0/aevil"]}, {"regex": "&lt;input[^&gt;]*?type[/s]*=[/s]*([&#39;|&quot;]?)text\\1[^&gt;]*?value[/s]*=[/s]*([&#39;|&quot;])(.*?)\\2[^&gt;]*?&gt;\n\n\n\n", "exceptionStackTrace": null, "matches": ["&lt;inputeviltypes=s;text;evilvalues=s;evil;|&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;=&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;;&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;/&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;#&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;eVil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;EVIL&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;ev_il&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;ev il&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;ev4il&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;e&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil; &gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;6&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;_&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;|;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;=;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;;;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;/;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;&;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;#;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;eVil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;EVIL;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;ev_il;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;ev il;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;ev4il;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;e;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s; ;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;6;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;_;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=ss;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=/;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvaluess=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalue=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalue/=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;|values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;=values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;/values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;#values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;eVilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;EVILvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;ev_ilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;ev ilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;ev4ilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text; values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;6values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;_values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=ss;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=/;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypess=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltype=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltype/=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input|types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input=types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input/types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input#types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeViltypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputEVILtypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputev_iltypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputev iltypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputev4iltypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputetypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input6types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input_types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputtypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n"], "nonMatches": ["&lt;inputeviltypes=s;text;evilvalues=s;evil;&&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s|evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=suevil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=stevil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=sqevil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=soevil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=saevil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s9evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s3evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s0evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s&evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=s#evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvalues=a;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;evilvaluea=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;;values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;text;&values=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s;;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=stext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s|text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=sutext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=sttext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=sqtext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=sotext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=satext;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s9text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s3text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s0text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s&text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=s#text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypes=a;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputeviltypea=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input;types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;input&types=s;text;evilvalues=s;evil;evil&gt;\n\n\n\n", "&lt;inputtype=text;value=;;&gt;\n\n\n\n"]}, {"regex": "&lt;select(.|\\n)*?selected(.|\\n)*?&gt;(.*?)&lt;/option&gt;(.|\\n)*?&lt;/select&gt;", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "&lt;textarea(.|\\n)*?&gt;((.|\\n)*?)&lt;/textarea&gt;", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^(9,)*([1-9]\\d{2}-?)*[1-9]\\d{2}-?\\d{4}$", "exceptionStackTrace": null, "matches": ["9,100-1000000", "9,100-100-100-0000", "9,100-0000", "9,100100-0000", "9,9,100-100-0000", "100-100-0000", "1000000", "9,100-100-0000"], "nonMatches": ["9,100-100-00000", "9,100-100-000", "9,100-100--0000", "9,100-1000-0000", "9,100-10-0000", "9,100-000-0000", "9,100--100-0000", "9,1000-100-0000", "9,10-100-0000", "9,000-100-0000"]}, {"regex": "^(\\s(SUN|MON|TUE|WED|THU|FRI|SAT)\\s+(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\\s+(0?[1-9]|[1-2][0-9]|3[01])\\s+(2[0-3]|[0-1][0-9]):([0-5][0-9]):((60|[0-5][0-9]))\\s+(19[0-9]{2}|[2-9][0-9]{3}|[0-9]{2}))$", "exceptionStackTrace": null, "matches": [" SUN JAN 30 20:00:60 1900", " SUN JAN 01 20:00:60  1900", " SUN JAN 01  20:00:60 1900", " SUN JAN  01 20:00:60 1900", " SUN  JAN 01 20:00:60 1900", " SAT JAN 1 20:00:60 1900", " FRI JAN 1 20:00:60 1900", " THU JAN 1 20:00:60 1900", " WED JAN 1 20:00:60 1900", " TUE JAN 1 20:00:60 1900", " MON JAN 1 20:00:60 1900", " SUN DEC 1 20:00:60 1900", " SUN NOV 1 20:00:60 1900", " SUN OCT 1 20:00:60 1900", " SUN SEP 1 20:00:60 1900", " SUN AUG 1 20:00:60 1900", " SUN JUL 1 20:00:60 1900", " SUN JUN 1 20:00:60 1900", " SUN MAY 1 20:00:60 1900", " SUN APR 1 20:00:60 1900", " SUN MAR 1 20:00:60 1900", " SUN FEB 1 20:00:60 1900", " SUN JAN 1 00:00:60 1900", " SUN JAN 1 20:00:00 1900", " SUN JAN 1 20:00:60 00", " SUN JAN 1 20:00:60 2000", " SUN JAN 1 20:00:60 1900", " SAT JAN 01 20:00:60 1900", " FRI JAN 01 20:00:60 1900", " THU JAN 01 20:00:60 1900", " WED JAN 01 20:00:60 1900", " TUE JAN 01 20:00:60 1900", " MON JAN 01 20:00:60 1900", " SUN DEC 01 20:00:60 1900", " SUN NOV 01 20:00:60 1900", " SUN OCT 01 20:00:60 1900", " SUN SEP 01 20:00:60 1900", " SUN AUG 01 20:00:60 1900", " SUN JUL 01 20:00:60 1900", " SUN JUN 01 20:00:60 1900", " SUN MAY 01 20:00:60 1900", " SUN APR 01 20:00:60 1900", " SUN MAR 01 20:00:60 1900", " SUN FEB 01 20:00:60 1900", " SUN JAN 31 20:00:60 1900", " SUN JAN 10 20:00:60 1900", " SUN JAN 01 00:00:60 1900", " SUN JAN 01 20:00:00 1900", " SUN JAN 01 20:00:60 00", " SUN JAN 01 20:00:60 2000", " SUN JAN 01 20:00:60 1900"], "nonMatches": [" SUN JAN 32 20:00:60 1900", " SUN JAN 01 20:00:60 000", " SUN JAN 01 20:00:60 0", " SUN JAN 01 20:00:60 20000", " SUN JAN 01 20:00:60 200", " SUN JAN 01 20:00:60 0000", " SUN JAN 01 20:00:60 19000", " SUN JAN 01 20:00:60 190", " SUN JAN 01 20:00:601900", " SUN JAN 01 20:60:60 1900", " SUN JAN 01 24:00:60 1900", " SUN JAN 0120:00:60 1900", " SUN JAN 00 20:00:60 1900", " SUN JAN 001 20:00:60 1900", " SUN JAN01 20:00:60 1900", " SUNJAN 01 20:00:60 1900"]}, {"regex": "^100$|^100.00$|^\\d{0,2}(\\.\\d{1,2})? *%?$", "exceptionStackTrace": null, "matches": ["0.0 ", "0.0  %", "0.0%", "0 %", "0.00 %", "00.0 %", ".0 %", "100A00", "100000", "100.00", "100%00", "100 00", "", "0.0 %", "100a00", "100"], "nonMatches": ["0.0 %%", "0.0.0 %", "0.000 %", "0. %", "000.0 %"]}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "Forgot Gmail Password ", "exceptionStackTrace": null, "matches": ["Forgot Gmail Password "], "nonMatches": []}, {"regex": "(^(((GIR)\\s{0,1}((0AA))))|(([A-PR-UWYZ][0-9][0-9]?)|([A-PR-UWYZ][A-HK-Y][0-9][0-9]?)|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\\s{0,1}([0-9][ABD-HJLNP-UW-Z]{2})$)", "exceptionStackTrace": null, "matches": ["ZK0X 0NN", "ZK0W 0NN", "ZK0V 0NN", "ZK0R 0NN", "ZK0P 0NN", "ZK0N 0NN", "ZK0M 0NN", "ZK0H 0NN", "ZK0E 0NN", "ZK0C 0NN", "ZK0B 0NN", "ZK0A 0NN", "ZA0Y 0NN", "YK0Y 0NN", "WK0Y 0NN", "RK0Y 0NN", "AK0Y 0NN", "Z0U 0NN", "Z0T 0NN", "Z0S 0NN", "Z0K 0NN", "Z0J 0NN", "Z0A 0NN", "Y0W 0NN", "W0W 0NN", "R0W 0NN", "A0W 0NN", "ZK0 0NN", "ZI00 0NN", "ZA00 0NN", "YK00 0NN", "WK00 0NN", "RK00 0NN", "QK00 0NN", "AK00 0NN", "Z00 0WN", "Z00 0PN", "Z00 0LN", "Z00 0JN", "Z00 0DN", "Z00 0BN", "Z00 0AN", "Z000NN", "Z0 0NN", "Y00 0NN", "W00 0NN", "R00 0NN", "A00 0NN", "ZK0Y0NN", "Z0W0NN", "ZK00NN", "Z00NN", "GIR0AA", "ZK0Y 0NN", "Z0W 0NN", "ZK00 0NN", "Z00 0NN", "GIR 0AA"], "nonMatches": ["ZI0Y 0NN", "QK0Y 0NN", "Z0I 0NN", "Q0W 0NN", "ZK000 0NN", "Z00 0NNN", "Z00 0N", "Z00 0CN", "Z00  0NN", "Z000 0NN", "Q00 0NN", "GIR  0AA"]}, {"regex": "(^([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9])(\\s{0,1})(AM|PM|am|pm|aM|Am|pM|Pm{2,2})$)|(^([0-9]|[1][0-9]|[2][0-3])(\\s{0,1})(AM|PM|am|pm|aM|Am|pM|Pm{2,2})$)", "exceptionStackTrace": null, "matches": ["20AM", "10AM", "0Pmm", "0pM", "0Am", "0aM", "0pm", "0am", "0PM", "0AM", "20:00AM", "00:00AM", "0:00Pmm", "0:00pM", "0:00Am", "0:00aM", "0:00pm", "0:00am", "0:00PM", "0:00AM", "20 AM", "10 AM", "0 Pmm", "0 pM", "0 Am", "0 aM", "0 pm", "0 am", "0 PM", "0 AM", "20:00 AM", "00:00 AM", "0:00 Pmm", "0:00 pM", "0:00 Am", "0:00 aM", "0:00 pm", "0:00 am", "0:00 PM", "0:00 AM"], "nonMatches": ["24 AM", "0 Pmmm", "0 Pm", "0  AM", "24:00 AM", "0:00 Pmmm", "0:00 Pm", "0:00  AM", "0:60 AM"]}, {"regex": "^(8-?|\\+?7-?)?(\\(?\\d{3}\\)?)-?(\\d-?){6}\\d$", "exceptionStackTrace": null, "matches": ["+7(000)-0-0-0-0-0-0-0", "7-(000)-0-0-0-0-0-0-0", "8-(000)-00-0-0-0-0-0", "8-(000)0-0-0-0-0-0-0", "8-(000-0-0-0-0-0-0-0", "8-000)-0-0-0-0-0-0-0", "(000)-0-0-0-0-0-0-0", "8(000)-0-0-0-0-0-0-0", "00000-0-0-0-0-0", "+7-(000)-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-0-0"], "nonMatches": ["+7--(000)-0-0-0-0-0-0-0", "++7-(000)-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-0", "8-(000)-0--0-0-0-0-0-0", "8-(000)--0-0-0-0-0-0-0", "8-(000))-0-0-0-0-0-0-0", "8-(0000)-0-0-0-0-0-0-0", "8-(00)-0-0-0-0-0-0-0", "8-((000)-0-0-0-0-0-0-0", "8-8-(000)-0-0-0-0-0-0-0", "8--(000)-0-0-0-0-0-0-0"]}, {"regex": "^((31(?!([-])(Feb|Apr|June?|Sep|Nov)))|((30|29)(?!([-])Feb))|(29(?=([-])Feb([-])(((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))|(0?[1-9])|1\\d|2[0-8])([-])(Jan|Feb|Ma(r|y)|Apr|Ju(l|n)|Aug|Oct|(Sep|Nov|Dec))([-])((1[6-9]|[2-9]\\d)\\d{2}\\s(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?)$", "exceptionStackTrace": null, "matches": ["1-Jan-1600 00:00:00", "31-Jan-1600 00:00", "31-Jan-1600 00:00:0", "31-Jan-1600 00:0:00", "31-Jan-1600 0:00:00", "20-Jan-1600 0:0", "10-Jan-1600 0:0", "1-Jan-1600 0:0", "29-Jan-1600 0:0", "30-Jan-1600 0:0", "31-Dec-1600 0:0", "31-Oct-1600 0:0", "31-Aug-1600 0:0", "31-Jul-1600 0:0", "31-May-1600 0:0", "31-Mar-1600 0:0", "31-Jan-2000 0:0", "31-Jan-1600 20:0", "31-Jan-1600 0:0", "20-Jan-1600 00:00:00", "10-Jan-1600 00:00:00", "01-Jan-1600 00:00:00", "29-Jan-1600 00:00:00", "30-Jan-1600 00:00:00", "31-Dec-1600 00:00:00", "31-Oct-1600 00:00:00", "31-Aug-1600 00:00:00", "31-Jul-1600 00:00:00", "31-May-1600 00:00:00", "31-Mar-1600 00:00:00", "31-Jan-2000 00:00:00", "31-Jan-1600 20:00:00", "31-Jan-1600 00:00:00"], "nonMatches": ["00-Jan-1600 00:00:00", "001-Jan-1600 00:00:00", "31-Jan-0000 00:00:00", "31-Jan-1600 24:00:00", "31-Jan-1600 00:00:00:00", "31-Jan-1600 00:00:000", "31-Jan-1600 00:00:60", "31-Jan-1600 00:000:00", "31-Jan-1600 00:60:00", "31-Jan-1600 000:00:00", "31-Jan-16000 00:00:00", "31-Jan-160 00:00:00", "31-Jan-1000 00:00:00", "31-Nov-1600 0:0", "31-Sep-1600 0:0", "31-Jun-1600 0:0", "31-Apr-1600 0:0", "31-Feb-1600 0:0", "31-Nov-1600 00:00:00", "31-Sep-1600 00:00:00", "31-Jun-1600 00:00:00", "31-Apr-1600 00:00:00", "31-Feb-1600 00:00:00"]}, {"regex": "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510? Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr. Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3...", "exceptionStackTrace": null, "matches": ["Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaA", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa;", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa0", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa/", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa-", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa,", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa&", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa#", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aa ", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aAa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a;a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a0a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a/a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a-a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a,a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a&a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a#a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3a a", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3Aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3;aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P30aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3/aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3-aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3,aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3&aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3#aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3 aa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / NrA Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr; Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr0 Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr/ Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr- Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr, Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr& Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr# Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nr  Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 251 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa", "Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 2510 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa"], "nonMatches": ["Ersatzakku f&#252;r Fujitsu Siemens Amilo Pa 25100 Brandneue 4400mAh Fujitsu Siemens Amilo Pa 2510 Akku ist Ersatz f&#252;r Laptop-Modelle / Nra Amilo Pi 2512 ,Amilo Pi 2550 ,Fujitsu Siemens ,Amilo Li 1818 ,Fujitsu Siemens ,Amilo Pa 1510 ,Fujitsu 23GL1GA0F-8A ,Fujitsu L50-3S4000-S1P3aaa"]}, {"regex": "Akku f&#252;r DELL XPS L321X, Ersatzakku DELL XPS L321X", "exceptionStackTrace": null, "matches": ["Akku f&#252;r DELL XPS L321X, Ersatzakku DELL XPS L321X"], "nonMatches": []}, {"regex": "ASUS A32-N55 Battery", "exceptionStackTrace": null, "matches": ["ASUS A32-N55 Battery"], "nonMatches": []}, {"regex": "ASUS A32-K72 Laptop AC Adapter", "exceptionStackTrace": null, "matches": ["ASUS A32-K72 Laptop AC Adapter"], "nonMatches": []}, {"regex": "ASUS A32-K53 Laptop AC Adapter", "exceptionStackTrace": null, "matches": ["ASUS A32-K53 Laptop AC Adapter"], "nonMatches": []}, {"regex": "^[0,1]?\\d{1}\\/(([0-2]?\\d{1})|([3][0,1]{1}))\\/(([1]{1}[9]{1}[9]{1}\\d{1})|([2-9]{1}\\d{3}))$", "exceptionStackTrace": null, "matches": ["10/3/1990", "10/3,/1990", "10/0/1990", "10/30/1990", "1/00/1990", "0/00/1990", "00/00/1990", ",0/00/1990", "0/31/1990", "0/0/2000", "0/0/1990", "10/31/1990", "10/00/2000", "10/00/1990"], "nonMatches": ["10/311/1990", "10/32/1990", "10/00/20000", "10/00/200", "10/00/22000", "10/00/000", "10/00/0000", "10/00/19900", "10/00/199", "10/00/19990", "10/00/190", "10/00/11990", "10/00/990", "10/000/1990", "100/00/1990", "110/00/1990", "20/00/1990"]}, {"regex": "^[a-zA-Z][a-zA-Z\\-&#39; ]*[a-zA-Z ]$", "exceptionStackTrace": null, "matches": ["Aevila", "AevilA", "A; ", "A- ", "A& ", "A# ", "AeVil ", "AEVIL ", "Aev il ", "Ae ", "A  ", "aevil ", "A ", "Aevil "], "nonMatches": ["Aev_il ", "Aev4il ", "A6 ", "A_ "]}, {"regex": "fgrdghtf", "exceptionStackTrace": null, "matches": ["fgrdghtf"], "nonMatches": []}, {"regex": ";?(?:(?:&quot;((?:[^&quot;]|&quot;&quot;)*)&quot;)|([^;]*))", "exceptionStackTrace": null, "matches": [";;", ";&", ";eVil", ";EVIL", ";ev_il", ";ev il", ";ev4il", ";e", "; ", ";6", ";_", ";", ";&quot;aa&quot;", ";&quot;&quot;", ";&quot;u&quot;", ";&quot;t&quot;", ";&quot;q&quot;", ";&quot;o&quot;", ";&quot;A&quot;", ";&quot;;&quot;", ";&quot;0&quot;", ";&quot;&&quot;", ";&quot; &quot;", ";;&quot;a&quot;", "&quot;a&quot;", "", "&quot;&quot;", ";evil", ";&quot;&quot;&quot;&quot;", ";&quot;a&quot;"], "nonMatches": []}, {"regex": "^[A-Za-z0-9_]+$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev4il", "e", "6", "_", "evil"], "nonMatches": ["ev il", " ", ""]}, {"regex": "Email Support Number", "exceptionStackTrace": null, "matches": ["Email Support Number"], "nonMatches": []}, {"regex": "ATT Email Support Number", "exceptionStackTrace": null, "matches": ["ATT Email Support Number"], "nonMatches": []}, {"regex": "AOL Email Support Number", "exceptionStackTrace": null, "matches": ["AOL Email Support Number"], "nonMatches": []}, {"regex": "Gmail Support Number", "exceptionStackTrace": null, "matches": ["Gmail Support Number"], "nonMatches": []}, {"regex": "Hotmail Support Number", "exceptionStackTrace": null, "matches": ["Hotmail Support Number"], "nonMatches": []}, {"regex": "(str\\=)\\s*(?&lt;value&gt;([a-zA-Z0-9\\,\\.]{1})*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^\\d{1,3}\\.\\d{1,4}$", "exceptionStackTrace": null, "matches": ["0.0000", "000.0", "0.0"], "nonMatches": ["0.00000", "0.", "0000.0", ".0"]}, {"regex": "^[0][5][0]-\\d{7}|[0][5][2]-\\d{7}|[0][5][4]-\\d{7}|[0][5][7]-\\d{7}$", "exceptionStackTrace": null, "matches": ["054-00000000", "052-00000000", "050-00000000", "057-0000000", "054-0000000", "052-0000000", "050-0000000"], "nonMatches": ["057-00000000", "057-000000", "054-000000", "052-000000", "050-000000"]}, {"regex": "(?!^[0-9]*$)(?!^[a-zA-Z]*$)^([a-zA-Z0-9]{6,15})$", "exceptionStackTrace": null, "matches": ["a00000", "A00000"], "nonMatches": ["0000000000000000", "000000000000000", "00000", "000000"]}, {"regex": "^[0-9]{10}$|^\\(0[1-9]{1}\\)[0-9]{8}$|^[0-9]{8}$|^[0-9]{4}[ ][0-9]{3}[ ][0-9]{3}$|^\\(0[1-9]{1}\\)[ ][0-9]{4}[ ][0-9]{4}$|^[0-9]{4}[ ][0-9]{4}$", "exceptionStackTrace": null, "matches": ["0000 0000", "(01) 0000 0000", "0000 000 000", "00000000", "(01)00000000", "0000000000"], "nonMatches": ["0000 00000", "0000 000", "00000 0000", "000 0000", "(01) 0000 00000", "(01) 0000 000", "(01) 00000 0000", "(01) 000 0000", "(011) 0000 0000", "(0) 0000 0000", "(00) 0000 0000", "0000 000 0000", "0000 000 00", "0000 0000 000", "0000 00 000", "00000 000 000", "000 000 000", "0000000", "(01)000000000", "(01)0000000", "(011)00000000", "(0)00000000", "(00)00000000", "00000000000", "000000000"]}, {"regex": "([A-Z][\\w\\d\\.\\-]+)(?:(?:\\+)([\\w\\d\\.\\-]+))?@([A-Z0-9][\\w\\.-]*[A-Z0-9]\\.[A-Z][A-Z\\.]*[A-Z])", "exceptionStackTrace": null, "matches": ["Aevil+evil@0evil0.A.A", "Aevil+evil@0evil0.AEVILA", "Aevil+evil@0evil0.AA", "Aevil@00.AA"], "nonMatches": ["Aevil+evil@0evil0.A@A", "Aevil+evil@0evil0.A-A", "Aevil+evil@0evil0.A+A", "Aevil+evil@0evil0.AeVilA", "Aevil+evil@0evil0.Aev_ilA", "Aevil+evil@0evil0.Aev ilA", "Aevil+evil@0evil0.Aev4ilA", "Aevil+evil@0evil0.AeA", "Aevil+evil@0evil0.A A", "Aevil+evil@0evil0.A6A", "Aevil+evil@0evil0.A_A", "Aevil+evil@0evilA.AevilA", "Aevil+evil@0@0.AevilA", "Aevil+evil@0.0.AevilA", "Aevil+evil@0-0.AevilA", "Aevil+evil@0+0.AevilA", "Aevil+evil@0eVil0.AevilA", "Aevil+evil@0EVIL0.AevilA", "Aevil+evil@0ev_il0.AevilA", "Aevil+evil@0ev il0.AevilA", "Aevil+evil@0ev4il0.AevilA", "Aevil+evil@0e0.AevilA", "Aevil+evil@0 0.AevilA", "Aevil+evil@060.AevilA", "Aevil+evil@0_0.AevilA", "Aevil+evil@00.AevilA", "Aevil+evil@Aevil0.AevilA", "Aevil+evil+evil@0evil0.AevilA", "Aevil@0evil0.AevilA", "Aevil+@@0evil0.AevilA", "Aevil+.@0evil0.AevilA", "Aevil+-@0evil0.AevilA", "Aevil++@0evil0.AevilA", "Aevil+eVil@0evil0.AevilA", "Aevil+EVIL@0evil0.AevilA", "Aevil+ev_il@0evil0.AevilA", "Aevil+ev il@0evil0.AevilA", "Aevil+ev4il@0evil0.AevilA", "Aevil+e@0evil0.AevilA", "Aevil+ @0evil0.AevilA", "Aevil+6@0evil0.AevilA", "Aevil+_@0evil0.AevilA", "Aevil+@0evil0.AevilA", "A@+evil@0evil0.AevilA", "A.+evil@0evil0.AevilA", "A-+evil@0evil0.AevilA", "A++evil@0evil0.AevilA", "AeVil+evil@0evil0.AevilA", "AEVIL+evil@0evil0.AevilA", "Aev_il+evil@0evil0.AevilA", "Aev il+evil@0evil0.AevilA", "Aev4il+evil@0evil0.AevilA", "Ae+evil@0evil0.AevilA", "A +evil@0evil0.AevilA", "A6+evil@0evil0.AevilA", "A_+evil@0evil0.AevilA", "A+evil@0evil0.AevilA", "Aevil+evil@0evil0.AevilA"]}, {"regex": "^(?:(?:0?[1-9])|(?:[12]\\d)|3[01])/(?:(?:0?[1-9])|(?:1[012]))/(?:(?:19|20))\\d{2}$", "exceptionStackTrace": null, "matches": ["30/01/1900", "10/01/1900", "01/11/1900", "01/10/1900", "01/1/1900", "1/01/1900", "31/1/1900", "20/1/1900", "1/12/1900", "1/1/2000", "1/1/1900", "31/01/1900", "20/01/1900", "01/12/1900", "01/01/2000", "01/01/1900"], "nonMatches": ["32/01/1900", "01/13/1900", "01/01/19000", "01/01/190", "01/00/1900", "01/001/1900", "00/01/1900", "001/01/1900"]}, {"regex": "(\\d{4})-?(\\d{2})-?(\\d{2})[T\\s]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(\\.\\d+)?)?(Z|(?:([+-]\\d{2})(?::?(\\d{2}))?))?", "exceptionStackTrace": null, "matches": ["0000-00-00T00:00:00.0-00:00:00", "0000-00-00T00:00:00.0-00", "0000-00-00T00:00:00.0-00:000", "0000-00-00T00:00:00.0-00:0", "0000-00-00T00:00:00.0-00::00", "0000-00-00T00:00:00.0-0000", "0000-00-00T00:00:00.0-000:00", "0000-00-00T00:00:00.0-0:00", "0000-00-00T00:00:00.0+00:00", "0000-00-00T00:00:00.0ZZ", "0000-00-00T00:00:00.0", "0000-00-00T00:00:00.0:00.0Z", "0000-00-00T00:00Z", "0000-00-00T00:00:00.0.0Z", "0000-00-00T00:00:00Z", "0000-00-00T00:00:00.00Z", "0000-00-00T00:00:00.Z", "0000-00-00T00:00:000.0Z", "0000-00-00T00:00:0.0Z", "0000-00-00T00:00::00.0Z", "0000-00-00T00:0000.0Z", "0000-00-00T00:000:00.0Z", "0000-00-00T0000:00.0Z", "0000-00-0000:00:00.0Z", "0000-00-00 00:00:00.0Z", "0000-0000T00:00:00.0Z", "000000-00T00:00:00.0Z", "00000-00-00T00:00:00.0Z", "000000000000", "0000-00-00T00:00:00.0-00:00", "0000-00-00T00:00:00.0Z"], "nonMatches": ["0000-00-00T00:0:00.0Z", "0000-00-00T00::00:00.0Z", "0000-00-00T000:00:00.0Z", "0000-00-00T0:00:00.0Z", "0000-00-00TT00:00:00.0Z", "0000-00-00A00:00:00.0Z", "0000-00-000T00:00:00.0Z", "0000-00-0T00:00:00.0Z", "0000-00--00T00:00:00.0Z", "0000-000-00T00:00:00.0Z", "0000-0-00T00:00:00.0Z", "0000--00-00T00:00:00.0Z", "000-00-00T00:00:00.0Z"]}]