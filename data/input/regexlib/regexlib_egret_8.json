[{"regex": "(^\\$(\\d{1,3},?(\\d{3},?)*\\d{3}(\\.\\d{1,3})?|\\d{1,3}(\\.\\d{2})?)$|^\\d{1,2}(\\.\\d{1,2})? *%$|^100%$)", "exceptionStackTrace": null, "matches": ["0.0  %", "0.0%", "0 %", "0.00 %", "00.0 %", "$0000.00", "$000.00", "$0,000,000", "$0,000,000.000", "$0,000,000,000.0", "$0,000.0", "$0,000000.0", "$0000,000.0", "$0000,000,000.0", "$000,000,000.0", "0%", "$0", "$0000", "100%", "0.0 %", "$0.00", "$0,000,000.0"], "nonMatches": ["0.0.0 %", "0.000 %", "0. %", "000.0 %", ".0 %", "$0.00.00", "$0.000", "$0.0", "$.00", "$0,000,000.0.0", "$0,000,000.0000", "$0,000,000.", "$0,000,0000.0", "$0,000,00.0", "$0,000,,000.0", "$0,0000,000.0", "$0,00,000.0", "$0,,000,000.0", "$,000,000.0"]}, {"regex": "www.runescape-money.eu", "exceptionStackTrace": null, "matches": ["wwwarunescape-moneyAeu", "wwwarunescape-money0eu", "wwwarunescape-money-eu", "wwwarunescape-money eu", "wwwArunescape-moneyaeu", "www0runescape-moneyaeu", "www-runescape-moneyaeu", "www runescape-moneyaeu", "wwwarunescape-moneyaeu"], "nonMatches": []}, {"regex": "_", "exceptionStackTrace": null, "matches": ["_"], "nonMatches": []}, {"regex": "jhrtuj", "exceptionStackTrace": null, "matches": ["jhrtuj"], "nonMatches": []}, {"regex": "^\\d+(?:\\.\\d{0,2})?$", "exceptionStackTrace": null, "matches": ["0.00", "0.", "00.0", "0", "0.0"], "nonMatches": ["0.0.0", "0.000", ".0"]}, {"regex": "^([0-1]?[0-9]|[2][0-3])[:|.]([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["00|00", "00:00", "0.00", "20.00", "00.00"], "nonMatches": ["24.00", "00.60", "000.00"]}, {"regex": "^\\d+\\/?\\d*$", "exceptionStackTrace": null, "matches": ["0/00", "0/", "00", "00/0", "0", "0/0"], "nonMatches": ["0//0", "/0"]}, {"regex": "^(\\d?)*(\\.\\d{1}|\\.\\d{2})?$", "exceptionStackTrace": null, "matches": ["0", "00.0", ".0", "", "0.00", "0.0"], "nonMatches": ["0.000", "0.0.0", "0."]}, {"regex": "[^<>/?&{};#]+", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "evil"], "nonMatches": ["}", "{", "?", ">", "<", ";", "/", "&", "#", ""]}, {"regex": "^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$", "exceptionStackTrace": null, "matches": ["AA-AA-AA-AA-AA-0A", "AA:AA-AA-AA-AA-AA", "0A-AA-AA-AA-AA-AA", "AA-AA-AA-AA-AA-AA"], "nonMatches": ["AA-AA-AA-AA-AA-AAA", "AA-AA-AA-AA-AA-A", "AA-AA-AA-AA-AA-GA", "AA-AA-AA-AA-AA-AA-AA", "AA-AA-AA-AA-AA", "AAA-AA-AA-AA-AA-AA", "A-AA-AA-AA-AA-AA", "GA-AA-AA-AA-AA-AA"]}, {"regex": "^(?-i:[A-Z]{1}[a-z]+(?<fnh>[-]{1})?(?(fnh)[A-Z]{1}[a-z]+)\\s[A-Z]{1}(?<apos>[&#39;]{1})?(?(apos)[A-Z]{1})[a-z]+(?<lnh>[-]{1})?(?(lnh)[A-Z]{1}[a-z]+))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<f"}, "matches": []}, {"regex": "^([a-zA-z\\s]{2,})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^([a-zA-z\\s]{4,32})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "(?<protocol>http(s)?|ftp)://(?<server>([A-Za-z0-9-]+\\.)*(?<basedomain>[A-Za-z0-9-]+\\.[A-Za-z0-9]+))+((/?)(?<path>(?<dir>[A-Za-z0-9\\._\\-]+)(/){0,1}[A-Za-z0-9.-/]*)){0,1}", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<p"}, "matches": []}, {"regex": "^(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])$", "exceptionStackTrace": null, "matches": ["250.200.200.10", "10.10.10.100", "10.10.10.1", "10.10.10.110", "10.10.10.0", "10.10.10.20", "10.10.10.00", "100.10.10.10", "1.10.10.10", "110.10.10.10", "0.10.10.10", "20.10.10.10", "00.10.10.10", "250.250.250.0", "200.250.250.0", "0.250.250.250", "0.250.250.200", "0.250.250.0", "250.250.250.10", "200.200.200.10", "10.10.10.250", "10.10.10.200", "10.10.10.10"], "nonMatches": ["256.250.250.10", "10.10.10.256", "10.10.10.1000", "10.10.10.10.10", "10.10.10", "1000.10.10.10"]}, {"regex": "^((?!string).)*$", "exceptionStackTrace": null, "matches": ["aa", "_", "A", "0", " ", "", "a"], "nonMatches": []}, {"regex": "(([\\w-]+://?|www[.])[^\\s()<>]+)", "exceptionStackTrace": null, "matches": ["evil://>", "evil://<", "evil://:", "evil:///", "evil://.", "evil://-", "evil://)", "evil://(", "evil://eVil", "evil://EVIL", "evil://ev_il", "evil://ev il", "evil://ev4il", "evil://e", "evil:// ", "evil://6", "evil://_", "evil://", "evil:///evil", "-://evil", "eVil://evil", "EVIL://evil", "ev_il://evil", "ev il://evil", "ev4il://evil", "e://evil", "6://evil", "_://evil", "evil:/evil", "www.evil", "evil://evil"], "nonMatches": [">://evil", "<://evil", ":://evil", "/://evil", ".://evil", ")://evil", "(://evil", " ://evil", "://evil"]}, {"regex": "^<a[^>]*(http://[^&quot;]*)[^>]*>([ 0-9a-zA-Z]+)</a>$", "exceptionStackTrace": null, "matches": ["<aevilhttp://evilevil>eVil</a>", "<aevilhttp://evilevil>EVIL</a>", "<aevilhttp://evilevil>ev il</a>", "<aevilhttp://evilevil>ev4il</a>", "<aevilhttp://evilevil>e</a>", "<aevilhttp://evilevil> </a>", "<aevilhttp://evilevil>6</a>", "<aevilhttp://evil>>evil</a>", "<aevilhttp://evil<>evil</a>", "<aevilhttp://evil;>evil</a>", "<aevilhttp://evil:>evil</a>", "<aevilhttp://evil/>evil</a>", "<aevilhttp://evil&>evil</a>", "<aevilhttp://evileVil>evil</a>", "<aevilhttp://evilEVIL>evil</a>", "<aevilhttp://evilev_il>evil</a>", "<aevilhttp://evilev il>evil</a>", "<aevilhttp://evilev4il>evil</a>", "<aevilhttp://evile>evil</a>", "<aevilhttp://evil >evil</a>", "<aevilhttp://evil6>evil</a>", "<aevilhttp://evil_>evil</a>", "<aevilhttp://>evil>evil</a>", "<aevilhttp://<evil>evil</a>", "<aevilhttp://;evil>evil</a>", "<aevilhttp://:evil>evil</a>", "<aevilhttp:///evil>evil</a>", "<aevilhttp://&evil>evil</a>", "<aevilhttp://eVilevil>evil</a>", "<aevilhttp://EVILevil>evil</a>", "<aevilhttp://ev_ilevil>evil</a>", "<aevilhttp://ev ilevil>evil</a>", "<aevilhttp://ev4ilevil>evil</a>", "<aevilhttp://eevil>evil</a>", "<aevilhttp:// evil>evil</a>", "<aevilhttp://6evil>evil</a>", "<aevilhttp://_evil>evil</a>", "<aevilhttp://evil>evil</a>", "<a<http://evilevil>evil</a>", "<a;http://evilevil>evil</a>", "<a:http://evilevil>evil</a>", "<a/http://evilevil>evil</a>", "<a&http://evilevil>evil</a>", "<aeVilhttp://evilevil>evil</a>", "<aEVILhttp://evilevil>evil</a>", "<aev_ilhttp://evilevil>evil</a>", "<aev ilhttp://evilevil>evil</a>", "<aev4ilhttp://evilevil>evil</a>", "<aehttp://evilevil>evil</a>", "<a http://evilevil>evil</a>", "<a6http://evilevil>evil</a>", "<a_http://evilevil>evil</a>", "<ahttp://evilevil>evil</a>", "<ahttp://>evil</a>", "<aevilhttp://evilevil>evil</a>"], "nonMatches": ["<aevilhttp://evilevil>ev_il</a>", "<aevilhttp://evilevil>_</a>", "<aevilhttp://evilevil></a>", "<a>http://evilevil>evil</a>"]}, {"regex": "^((5)/(1|2|5)/([0-9])/([0-9])/([0-9])/([0-9])/([0-9])/([0-9])/([2-9]))$", "exceptionStackTrace": null, "matches": ["5/5/0/0/0/0/0/0/2", "5/2/0/0/0/0/0/0/2", "5/1/0/0/0/0/0/0/2"], "nonMatches": ["5/1/0/0/0/0/0/0/0"]}, {"regex": "^((31(?! (FEB|APR|JUN|SEP|NOV)))|((30|29)(?! FEB))|(29(?= FEB (((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))|(0?[1-9])|1\\d|2[0-8])[./-]((JAN|FEB|MAR|MAY|APR|JUL|JUN|AUG|OCT|SEP|NOV|DEC)|([0-9]{2}))[./-]([0-9]{4}|[0-9]{2})((?:$|(?=\\x20\\d)\\x20))?((?:(?:0?[1-9]|1[012])(?::[0-5]\\d){0,2}(?:\\x20[aApP][mM]))|(?:[01]\\d|2[0-3])(?::[0-5]\\d){1,2})?$", "exceptionStackTrace": null, "matches": ["1-JAN-000001:00 PM", "31-JAN-001:00 PM", "31-JAN-000010:00:00", "31-JAN-000000:00", "31-JAN-000011:00 PM", "31-JAN-000010:00 PM", "31-JAN-000001:00 Pm", "31-JAN-000001:00 pM", "31-JAN-000001:00 aM", "31-JAN-000001:00 AM", "31-JAN-000001:00:00 PM", "31-JAN-000001 PM", "31-JAN-00001:00 PM", "31-JAN/000001:00 PM", "31-JAN.000001:00 PM", "31/JAN-000001:00 PM", "31.JAN-000001:00 PM", "20-JAN-0000", "10-JAN-0000", "1-JAN-0000", "29-JAN-0000", "30-JAN-0000", "31-00-0000", "31-DEC-0000", "31-NOV-0000", "31-SEP-0000", "31-OCT-0000", "31-AUG-0000", "31-JUN-0000", "31-JUL-0000", "31-APR-0000", "31-MAY-0000", "31-MAR-0000", "31-FEB-0000", "31-JAN-00", "31-JAN-0000", "20-JAN-000001:00 PM", "10-JAN-000001:00 PM", "01-JAN-000001:00 PM", "29-JAN-000001:00 PM", "30-JAN-000001:00 PM", "31-00-000001:00 PM", "31-DEC-000001:00 PM", "31-NOV-000001:00 PM", "31-SEP-000001:00 PM", "31-OCT-000001:00 PM", "31-AUG-000001:00 PM", "31-JUN-000001:00 PM", "31-JUL-000001:00 PM", "31-APR-000001:00 PM", "31-MAY-000001:00 PM", "31-MAR-000001:00 PM", "31-FEB-000001:00 PM", "31-JAN-0001:00 PM", "31-JAN-0000 01:00 PM", "31-JAN-000020:00", "31-JAN-000010:00", "31-JAN-000012:00 PM", "31-JAN-000001:00 PM"], "nonMatches": ["00-JAN-000001:00 PM", "001-JAN-000001:00 PM", "31-000-000001:00 PM", "31-0-000001:00 PM", "31-JAN-000024:00", "31-JAN-000010:00:00:00", "31-JAN-000010", "31-JAN-000010:60", "31-JAN-000013:00 PM", "31-JAN-000001:00 PM01:00 PM", "31-JAN-000001:00 Pa", "31-JAN-000001:00 PA", "31-JAN-000001:00 bM", "31-JAN-000001:00 BM", "31-JAN-000001:00:00:00 PM", "31-JAN-000001:60 PM", "31-JAN-000000:00 PM", "31-JAN-0000001:00 PM"]}, {"regex": "(?!^0*$)(?!^0*\\.0*$)^\\d{1,16}(\\.\\d{1,2})?$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["0.0.0", "0.000", "0.00", "0.", "00000000000000000.0", "0000000000000000.0", ".0", "0", "0.0"]}, {"regex": "^[^\\x00-\\x1f\\x21-\\x26\\x28-\\x2d\\x2f-\\x40\\x5b-\\x60\\x7b-\\xff]+$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 0"}, "matches": [], "nonMatches": []}, {"regex": "^(\\d{1,})$|^(\\d{1,}\\.)$|^(\\d{0,}?\\.\\d{1,})$|^([+-]\\d{1,}(\\.)?)$|^([+-](\\d{1,})?\\.\\d{1,})$", "exceptionStackTrace": null, "matches": ["-0.00", "-00.0", "+0.0", "-00.", "+0.", "0.00", "00.0", "00.", "00", "-.0", "-0", ".0", "-0.0", "-0.", "0.0", "0.", "0"], "nonMatches": ["-0..", "-.", ".", ""]}, {"regex": "^((?:4\\d{3})|(?:5[1-5]\\d{2})|(?:6011)|(?:3[68]\\d{2})|(?:30[012345]\\d))[ -]?(\\d{4})[ -]?(\\d{4})[ -]?(\\d{4}|3[4,7]\\d{13})$", "exceptionStackTrace": null, "matches": ["3040-0000-0000-0000", "3030-0000-0000-0000", "3020-0000-0000-0000", "3010-0000-0000-0000", "3600-0000-0000-0000", "3000-0000-0000-0000", "4000-0000-0000-340000000000000", "4000-0000-0000-3,0000000000000", "4000-0000-00000000", "4000-0000-0000 0000", "4000-00000000-0000", "4000-0000 0000-0000", "40000000-0000-0000", "4000 0000-0000-0000", "3050000000000000", "3800000000000000", "6011000000000000", "5100000000000000", "400000000000370000000000000", "4000000000000000", "3050-0000-0000-0000", "3800-0000-0000-0000", "6011-0000-0000-0000", "5100-0000-0000-0000", "4000-0000-0000-370000000000000", "4000-0000-0000-0000"], "nonMatches": ["3060-0000-0000-0000", "38000-0000-0000-0000", "380-0000-0000-0000", "51000-0000-0000-0000", "510-0000-0000-0000", "5000-0000-0000-0000", "4000-0000-0000-3700000000000000", "4000-0000-0000-37000000000000", "4000-0000-0000-300000000000000", "4000-0000-0000-00000", "4000-0000-0000-000", "4000-0000-0000--0000", "4000-0000-00000-0000", "4000-0000-000-0000", "4000-0000--0000-0000", "4000-00000-0000-0000", "4000-000-0000-0000", "4000--0000-0000-0000", "40000-0000-0000-0000", "400-0000-0000-0000"]}, {"regex": "([^,0-9]\\D*)([0-9]*|\\d*\\,\\d*)$", "exceptionStackTrace": null, "matches": ["aevil0,00", "aevil0,", "aevil00,0", "aevil,0", "aevil00", "aevil", "a,0", "aeVil0", "aEVIL0", "aev_il0", "aev il0", "aev4il0", "ae0", "a 0", "a60", "a_0", "a0", "Aevil0", "0evil0", ",evil0", " evil0", "a,", "a", "aevil0,0", "aevil0"], "nonMatches": []}, {"regex": "(^\\-|\\+)?([1-9]{1}[0-9]{0,2}(\\,\\d{3})*|[1-9]{1}\\d{0,})$|^0?$", "exceptionStackTrace": null, "matches": ["-100", "-1", "-110", "-10,000,000", "-100,000", "-1,000", "-110,000", "--10,000", "10,000", "", "1", "0", "+10,000", "-10", "-10,000"], "nonMatches": ["00", "-0", "-00", "-10,0000", "-10,00", "-1000,000", "-0,000", "-00,000"]}, {"regex": "^((([0-9]|([0-1][0-9])|(2[0-3]))[hH:][0-5][0-9])|(([0-9]|(1[0-9])|(2[0-3]))[hH]))$", "exceptionStackTrace": null, "matches": ["0h", "0h00", "0H00", "20H", "10H", "0H", "20:00", "00:00", "0:00"], "nonMatches": ["24H", "0a", "0A", "24:00", "0:60", "0a00", "0A00"]}, {"regex": "^([a-zA-Z0-9@*#]{8,15})$", "exceptionStackTrace": null, "matches": ["###############", "a#######", "A#######", "@#######", "0#######", "*#######", "########"], "nonMatches": ["################", "#######"]}, {"regex": "(([+]?34) ?)?(6(([0-9]{8})|([0-9]{2} [0-9]{6})|([0-9]{2} [0-9]{3} [0-9]{3}))|9(([0-9]{8})|([0-9]{2} [0-9]{6})|([1-9] [0-9]{7})|([0-9]{2} [0-9]{3} [0-9]{3})|([0-9]{2} [0-9]{2} [0-9]{2} [0-9]{2})))", "exceptionStackTrace": null, "matches": ["+34 900 00 00 000", "+34 900 000 0000", "+34 91 00000000", "+34 900 0000000", "+34 9000000000", "+34 600 000 0000", "+34 600 0000000", "+34 6000000000", "+34 +34 600000000", "+34  600000000", "+34600000000", "++34 600000000", "34 600000000", "900 00 00 00", "900 000 000", "91 0000000", "900 000000", "900000000", "600 000 000", "600 000000", "600000000", "+34 900 00 00 00", "+34 900 000 000", "+34 91 0000000", "+34 900 000000", "+34 900000000", "+34 600 000 000", "+34 600 000000", "+34 600000000"], "nonMatches": ["+34 900 00 00 0", "+34 900 00 000 00", "+34 900 00 0 00", "+34 900 000 00 00", "+34 900 0 00 00", "+34 9000 00 00 00", "+34 90 00 00 00", "+34 900 000 00", "+34 900 0000 000", "+34 900 00 000", "+34 9000 000 000", "+34 90 000 000", "+34 91 000000", "+34 90 0000000", "+34 900 00000", "+34 9000 000000", "+34 90 000000", "+34 90000000", "+34 600 000 00", "+34 600 0000 000", "+34 600 00 000", "+34 6000 000 000", "+34 60 000 000", "+34 600 00000", "+34 6000 000000", "+34 60 000000", "+34 60000000"]}, {"regex": "(0?[1-9]|[1-9][0-9])[0-9]{6}(-| )?[trwagmyfpdxbnjzsqvhlcke]", "exceptionStackTrace": null, "matches": ["01000000-z", "01000000-y", "01000000-x", "01000000-w", "01000000-v", "01000000-t", "01000000-s", "01000000-r", "01000000-q", "01000000-p", "01000000-n", "01000000-m", "01000000-l", "01000000-k", "01000000-j", "01000000-h", "01000000-g", "01000000-f", "01000000-d", "01000000-c", "01000000-b", "01000000-a", "01000000e", "010000000-e", "001000000-e", "1000000-e", "10000000e", "1000000e", "10000000-e", "01000000 e", "01000000-e"], "nonMatches": ["01000000-i", "01000000--e", "0100000-e", "00000000-e"]}, {"regex": "^[A-Z]{1}[AEIOUX]{1}[A-Z]{2}((\\d{2}((0[13578]|1[02])(0[1-9]|[12][0-9]|3[01])|(0[13-9]|1[0-2])(0[1-9]|[12][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8])))|([02468][048]|[13579][26])0229)[HM]{1}(AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE)[B-DF-HJ-NP-TV-Z]{3}[0-9A-Z]{1}[0-9]$", "exceptionStackTrace": null, "matches": ["AXAA920229MASVVVA0", "AXAA760229MASVVVA0", "AXAA560229MASVVVA0", "AXAA360229MASVVVA0", "AXAA160229MASVVVA0", "AXAA840229MASVVVA0", "AXAA800229MASVVVA0", "AXAA680229MASVVVA0", "AXAA480229MASVVVA0", "AXAA280229MASVVVA0", "AXAA080229MASVVVA0", "AXAA000229MASVVVA0", "AXAA000110MASVVVA0", "AXAA001101MASVVVA0", "AXAA000830MASVVVA0", "AXAA000810MASVVVA0", "AXAA000801MASVVV00", "AXAA000801MASPVVA0", "AXAA000801MASJVVA0", "AXAA000801MASFVVA0", "AXAA000801MASBVVA0", "AXAA000801HASVVVA0", "AXAA000701MASVVVA0", "AXAA000501MASVVVA0", "AXAA000301MASVVVA0", "AUAA000801MASVVVA0", "AOAA000801MASVVVA0", "AIAA000801MASVVVA0", "AEAA000801MASVVVA0", "AAAA000801MASVVVA0", "AXAA960229MASVVVA0", "AXAA880229MASVVVA0", "AXAA000220MASVVVA0", "AXAA000210MASVVVA0", "AXAA000201MASVVVA0", "AXAA001001MASVVVA0", "AXAA000130MASVVVA0", "AXAA000120MASVVVA0", "AXAA000101MASVVVA0", "AXAA001201MASVVVA0", "AXAA000831MASVVVA0", "AXAA000820MASVVVA0", "AXAA000801MNEVVVA0", "AXAA000801MZSVVVA0", "AXAA000801MYNVVVA0", "AXAA000801MVZVVVA0", "AXAA000801MTLVVVA0", "AXAA000801MTSVVVA0", "AXAA000801MTCVVVA0", "AXAA000801MSRVVVA0", "AXAA000801MSLVVVA0", "AXAA000801MSPVVVA0", "AXAA000801MQRVVVA0", "AXAA000801MQTVVVA0", "AXAA000801MPLVVVA0", "AXAA000801MOCVVVA0", "AXAA000801MNLVVVA0", "AXAA000801MNTVVVA0", "AXAA000801MMSVVVA0", "AXAA000801MMNVVVA0", "AXAA000801MMCVVVA0", "AXAA000801MJCVVVA0", "AXAA000801MHGVVVA0", "AXAA000801MGRVVVA0", "AXAA000801MGTVVVA0", "AXAA000801MDGVVVA0", "AXAA000801MDFVVVA0", "AXAA000801MCMVVVA0", "AXAA000801MCLVVVA0", "AXAA000801MCHVVVA0", "AXAA000801MCSVVVA0", "AXAA000801MCCVVVA0", "AXAA000801MBSVVVA0", "AXAA000801MBCVVVA0", "AXAA000801MASVVVA0"], "nonMatches": ["AXAA900229MASVVVA0", "AXAA060229MASVVVA0", "AXAA810229MASVVVA0", "AXAA180229MASVVVA0", "AXAA000200MASVVVA0", "AXAA001301MASVVVA0", "AXAA000100MASVVVA0", "AXAA000832MASVVVA0", "AXAA000801MASVVVAA0", "AXAA000801MASVVV0", "AXAA000801MASVVVVA0", "AXAA000801MASVVA0", "AXAA000801MASAVVA0", "AXAA000801MMASVVVA0", "AXAA000801ASVVVA0", "AXAA000801AASVVVA0", "AXAA000800MASVVVA0", "AXAA000001MASVVVA0", "AXAA0000801MASVVVA0", "AXAA00801MASVVVA0", "AXAAA000801MASVVVA0", "AXA000801MASVVVA0", "AXXAA000801MASVVVA0", "AAA000801MASVVVA0", "ABAA000801MASVVVA0", "AAXAA000801MASVVVA0", "XAA000801MASVVVA0"]}, {"regex": "&lt;a[\\s]+[^&gt;]*?href[\\s]?=[\\s\\&quot;\\&#39;]+(.*?)[\\&quot;\\&#39;]+.*?&gt;([^&lt;]+|.*?)?&lt;\\/a&gt;", "exceptionStackTrace": null, "matches": ["&lt;a evilhref =;evil;evil&gt;evilevil&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;=&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;;&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;/&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;&&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;#&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;eVil&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;EVIL&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;ev_il&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;ev il&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;ev4il&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;e&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt; &lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;6&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;_&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;&lt;/a&gt;", "&lt;a evilhref =;evil;=&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;;&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;/&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;&&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;#&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;eVil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;EVIL&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;ev_il&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;ev il&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;ev4il&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;e&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil; &gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;6&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;_&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil;;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;eviluevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;eviltevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evilqevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;eviloevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil9evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil3evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil&evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil#evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;=;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;;;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;/;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;&;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;#;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;eVil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;EVIL;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;ev_il;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;ev il;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;ev4il;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;e;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =; ;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;6;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;_;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;;evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =uevil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =tevil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =qevil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =oevil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =9evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =3evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =&evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =#evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref = evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref=;evil;evil&gt;evil&lt;/a&gt;", "&lt;a =href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a /href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a #href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a eVilhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a EVILhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a ev_ilhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a ev ilhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a ev4ilhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a ehref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a  href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a 6href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a _href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a  evilhref =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a href=;;&gt;&lt;/a&gt;", "&lt;a evilhref =;evil;evil&gt;evil&lt;/a&gt;"], "nonMatches": ["&lt;a evilhref =;evilevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evilaevil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil0evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =aevil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =0evil;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref  =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a ;href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;a &href =;evil;evil&gt;evil&lt;/a&gt;", "&lt;aevilhref =;evil;evil&gt;evil&lt;/a&gt;"]}, {"regex": "^.+\\@.+\\..+$", "exceptionStackTrace": null, "matches": ["evil@evil.@", "evil@evil..", "evil@evil.eVil", "evil@evil.EVIL", "evil@evil.ev_il", "evil@evil.ev il", "evil@evil.ev4il", "evil@evil.e", "evil@evil. ", "evil@evil.6", "evil@evil._", "evil@@.evil", "evil@..evil", "evil@eVil.evil", "evil@EVIL.evil", "evil@ev_il.evil", "evil@ev il.evil", "evil@ev4il.evil", "evil@e.evil", "evil@ .evil", "evil@6.evil", "evil@_.evil", "@@evil.evil", ".@evil.evil", "eVil@evil.evil", "EVIL@evil.evil", "ev_il@evil.evil", "ev il@evil.evil", "ev4il@evil.evil", "e@evil.evil", " @evil.evil", "6@evil.evil", "_@evil.evil", "evil@evil.evil"], "nonMatches": ["evil@evil.", "evil@.evil", "@evil.evil"]}, {"regex": "(((ht|f)tp(s?):\\/\\/)|(([\\w]{1,})\\.[^ \\[\\]\\(\\)\\n\\r\\t]+)|(([012]?[0-9]{1,2}\\.){3}[012]?[0-9]{1,2})\\/)([^ \\[\\]\\(\\),;&quot;&#39;<>\\n\\r\\t]+)([^\\. \\[\\]\\(\\),;&quot;&#39;<>\\n\\r\\t])|(([012]?[0-9]{1,2}\\.){3}[012]?[0-9]{1,2})", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^(NAME)(\\s?)<?(\\w*)(\\s*)([0-9]*)>?$", "exceptionStackTrace": null, "matches": ["NAME <evil 0", "NAME <evil 00>", "NAME <evil >", "NAME <evil  0>", "NAME <evil0>", "NAME <eVil 0>", "NAME <EVIL 0>", "NAME <ev_il 0>", "NAME <ev4il 0>", "NAME <e 0>", "NAME <  0>", "NAME <6 0>", "NAME <_ 0>", "NAME < 0>", "NAME evil 0>", "NAME<evil 0>", "NAME", "NAME <evil 0>"], "nonMatches": ["NAME <evil 0>>", "NAME <ev il 0>", "NAME <<evil 0>", "NAME  <evil 0>"]}, {"regex": "(^[0-9]{0,10}$)", "exceptionStackTrace": null, "matches": ["0000000000", "", "0"], "nonMatches": ["00000000000"]}, {"regex": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-2]) ([0-1][0-9]|2[0-4]):([0-4][0-9]|5[0-9]):([0-4][0-9]|5[0-9])$", "exceptionStackTrace": null, "matches": ["0000-10-01 00:00:00", "0000-01-30 00:00:00", "0000-01-10 00:00:00", "0000-01-01 20:00:00", "0000-01-01 00:50:00", "0000-01-01 00:00:50", "0000-01-01 00:00:00"], "nonMatches": ["0000-13-01 00:00:00", "0000-01-33 00:00:00", "0000-01-01 25:00:00", "0000-01-00 00:00:00", "0000-00-01 00:00:00", "00000-01-01 00:00:00", "000-01-01 00:00:00"]}, {"regex": "(?<=>)[A-Z]{2}[\\d|\\w]{9}\\d{1}(?=(<))", "exceptionStackTrace": null, "matches": [], "nonMatches": ["AA|||||||||00", "AA|||||||||", "AA||||||||||0", "AA||||||||0", "AAa||||||||0", "AA_||||||||0", "AAA||||||||0", "AA0||||||||0", "AAA|||||||||0", "A|||||||||0", "AA|||||||||0"]}, {"regex": "<img\\s((width|height|alt|align|style)=&quot;[^&quot;]*&quot;\\s)*src=&quot;(\\/?[a-z0-9_-]\\/?)+\\.(png|jpg|jpeg|gif)&quot;(\\s(width|height|alt|align|style)=&quot;[^&quot;]*&quot;)*\\s*\\/>", "exceptionStackTrace": null, "matches": ["<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot;  />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot;/>", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;>&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;=&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;<&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;/&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;.&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;-&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;eVil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;EVIL&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;ev_il&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;ev il&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;ev4il&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;e&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot; &quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;6&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;_&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;&quot; />", "<img width=&quot;evil&quot; src=&quot;/-//-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/a/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/_/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/0/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;>&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;=&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;<&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;/&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;.&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;-&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;eVil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;EVIL&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;ev_il&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;ev il&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;ev4il&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;e&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot; &quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;6&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;_&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img src=&quot;-.gif&quot;/>", "<img src=&quot;-.jpeg&quot;/>", "<img src=&quot;-.jpg&quot;/>", "<img src=&quot;-.png&quot;/>", "<img style=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img align=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img alt=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img height=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.gif&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.jpeg&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.jpg&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; style=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; align=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; alt=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; height=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />"], "nonMatches": ["<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;;&quot; />", "<img width=&quot;evil&quot; src=&quot;/-/.png&quot; width=&quot;&&quot; />", "<img width=&quot;evil&quot; src=&quot;.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;/-//.png&quot; width=&quot;evil&quot; />", "<img width=&quot;evil&quot; src=&quot;//-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;;&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />", "<img width=&quot;&&quot; src=&quot;/-/.png&quot; width=&quot;evil&quot; />"]}, {"regex": "fesdgfr", "exceptionStackTrace": null, "matches": ["fesdgfr"], "nonMatches": []}, {"regex": "(\\d{6}[-\\s]?\\d{12})|(\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4})", "exceptionStackTrace": null, "matches": ["0000-0000-0000-00000", "0000-0000-00000000", "0000-0000-0000 0000", "0000-00000000-0000", "0000-0000 0000-0000", "00000000-0000-0000", "0000 0000-0000-0000", "00000-0000-0000-0000", "000000-0000000000000", "000000 000000000000", "0000000-000000000000", "00000-000000000000", "0000000000000000", "000000000000000000", "0000-0000-0000-0000", "000000-000000000000"], "nonMatches": ["0000-0000-0000-000", "0000-0000-0000--0000", "0000-0000-00000-0000", "0000-0000-000-0000", "0000-0000--0000-0000", "0000-00000-0000-0000", "0000-000-0000-0000", "0000--0000-0000-0000", "000-0000-0000-0000", "000000-00000000000", "000000--000000000000"]}, {"regex": "^([0]\\d|[1][0-2])\\/([0-2]\\d|[3][0-1])\\/([2][01]|[1][6-9])\\d{2}(\\s([0]\\d|[1][0-2])(\\:[0-5]\\d){1,2})*\\s*([aApP][mM]{0,2})?$", "exceptionStackTrace": null, "matches": ["00/00/2100 00:00 ", "00/00/2100 00:00 PMM", "00/00/2100 00:00 P", "00/00/2100 00:00 Pm", "00/00/2100 00:00 pM", "00/00/2100 00:00 aM", "00/00/2100 00:00 AM", "00/00/2100 00:00  PM", "00/00/2100 00:00PM", "00/00/2100 00:00 00:00 PM", "00/00/2100 PM", "00/00/2100 00:00:00 PM", "00/00/2000 00:00 PM", "10/00/2100", "00/30/2100", "00/00/1600", "00/00/2100", "10/00/2100 00:00 PM", "00/30/2100 00:00 PM", "00/00/1600 00:00 PM", "00/00/2100 10:00 PM", "00/00/2100 00:00 PM"], "nonMatches": ["13/00/2100 00:00 PM", "00/32/2100 00:00 PM", "00/00/1000 00:00 PM", "00/00/2100 13:00 PM", "00/00/2100 00:00 PMPM", "00/00/2100 00:00 PMMM", "00/00/2100 00:00 Pa", "00/00/2100 00:00 PA", "00/00/2100 00:00 bM", "00/00/2100 00:00 BM", "00/00/2100 00:00:00:00 PM", "00/00/2100 00 PM", "00/00/2100 00:60 PM", "00/00/21000 00:00 PM", "00/00/210 00:00 PM", "00/00/2200 00:00 PM"]}, {"regex": "^(((((0?[1-9]|[12]\\d|3[01])[-/]([0]?[13578]|1[02]))|((0?[1-9]|[12]\\d|30)[-/]([0]?[469]|11))|(([01]?\\d|2[0-8])[-/]0?2))[-/]((20|19)?\\d{2}|\\d{1,2}))|(29[-/]0?2[-/]((19)|(20))?([13579][26]|[24680][048])))$", "exceptionStackTrace": null, "matches": ["29/02/1904", "29/02/1900", "29/02/1988", "29/02/1968", "29/02/1948", "29/02/1928", "29/02/1992", "29/02/1976", "29/02/1956", "29/02/1936", "29/02/1916", "29/02/96", "29/02-1996", "29/2/1996", "29-02/1996", "29/02/2000", "10/2/2000", "10-02/2000", "0/02/2000", "00/02/2000", "10/09/2000", "01/06/2000", "01/04/2000", "01/9/2000", "01-09/2000", "1/09/2000", "30/08/2000", "10/08/2000", "01/10/2000", "01/08/00", "01/08-2000", "01/07/2000", "01/05/2000", "01/03/2000", "01/01/2000", "01/8/2000", "01-08/2000", "1/08/2000", "29/2/08", "29/2/96", "20/2/00", "0/2/00", "30/9/00", "20/9/00", "1/11/00", "1/9/00", "31/8/00", "20/8/00", "1/12/00", "1/8/0", "1/8/00", "29/02/2096", "29/02/1908", "29/02/1996", "20/02/2000", "10/02/2000", "30/09/2000", "20/09/2000", "01/11/2000", "01/09/2000", "31/08/2000", "20/08/2000", "01/12/2000", "01/08/0", "01/08/1900", "01/08/2000"], "nonMatches": ["29/02/1901", "29/02/1918", "29/02/1990", "29/02/1906", "29/02/191996", "29/002/1996", "10/002/2000", "110/02/2000", "01/009/2000", "00/09/2000", "001/09/2000", "32/08/2000", "01/08/000", "01/08/", "01/08/20000", "01/08/200", "01/08/202000", "01/00/2000", "01/008/2000", "00/08/2000", "001/08/2000"]}, {"regex": "(?s)(?i)^(?!^.*(dont match me).*$).*$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"], "nonMatches": []}, {"regex": "^((((([13578])|(1[0-2]))[\\-\\/\\s]?(([1-9])|([1-2][0-9])|(3[01])))|((([469])|(11))[\\-\\/\\s]?(([1-9])|([1-2][0-9])|(30)))|(2[\\-\\/\\s]?(([1-9])|([1-2][0-9]))))[\\-\\/\\s]?\\d{4})(\\s((([1-9])|(1[02]))\\:([0-5][0-9])((\\s)|(\\:([0-5][0-9])\\s))([AM|PM|am|pm]{2,2})))?$", "exceptionStackTrace": null, "matches": ["21/0000 1:00 mm", "2-1/0000 1:00 mm", "2 1/0000 1:00 mm", "91/0000 1:00 mm", "9-1/0000 1:00 mm", "9 1/0000 1:00 mm", "6/1/0000 1:00 mm", "4/1/0000 1:00 mm", "8/30/0000 1:00 mm", "8/1/0000 10:00 mm", "8/1/0000", "8/1/0000 1:00 |m", "8/1/0000 1:00 pm", "8/1/0000 1:00 am", "8/1/0000 1:00 Pm", "8/1/0000 1:00 Mm", "8/1/0000 1:00 Am", "8/10000 1:00 mm", "8/1-0000 1:00 mm", "8/1 0000 1:00 mm", "81/0000 1:00 mm", "8-1/0000 1:00 mm", "8 1/0000 1:00 mm", "7/1/0000 1:00 mm", "5/1/0000 1:00 mm", "3/1/0000 1:00 mm", "1/1/0000 1:00 mm", "2100000", "210000", "1110000", "9300000", "9100000", "910000", "1010000", "8310000", "8100000", "810000", "2/10/0000 1:00 mm", "2/1/0000 1:00 mm", "11/1/0000 1:00 mm", "9/30/0000 1:00 mm", "9/10/0000 1:00 mm", "9/1/0000 1:00 mm", "10/1/0000 1:00 mm", "8/31/0000 1:00 mm", "8/10/0000 1:00 mm", "8/1/0000 12:00 mm", "8/1/0000 1:00:00 mm", "8/1/0000 1:00 mm"], "nonMatches": ["2/00/0000 1:00 mm", "2/0/0000 1:00 mm", "2//1/0000 1:00 mm", "9/00/0000 1:00 mm", "9/0/0000 1:00 mm", "9//1/0000 1:00 mm", "13/1/0000 1:00 mm", "8/32/0000 1:00 mm", "8/00/0000 1:00 mm", "8/1/0000 11:00 mm", "8/1/0000 1:00:60 mm", "8/1/0000 1:00 mm 1:00 mm", "8/1/0000 1:00 mmm", "8/1/0000 1:00 m", "8/1/0000 1:00 bm", "8/1/0000 1:00 Bm", "8/1/0000 1:60 mm", "8/1/0000 0:00 mm", "8/1/00000 1:00 mm", "8/1/000 1:00 mm", "8/1//0000 1:00 mm", "8/0/0000 1:00 mm", "8//1/0000 1:00 mm", "0/1/0000 1:00 mm"]}, {"regex": "^[a-z]+[0-9]*[a-z]+$", "exceptionStackTrace": null, "matches": ["evil0e", "evil00evil", "e0evil", "evilevil", "evil0evil"], "nonMatches": ["evil0eVil", "evil0EVIL", "evil0ev_il", "evil0ev il", "evil0ev4il", "evil0 ", "evil06", "evil0_", "evil0", "eVil0evil", "EVIL0evil", "ev_il0evil", "ev il0evil", "ev4il0evil", " 0evil", "60evil", "_0evil", "0evil"]}, {"regex": "([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$", "exceptionStackTrace": null, "matches": ["AevilA@AevilA.AAAAAAAAA", "AevilA@AevilA.aA", "AevilA@AevilA.AevilA.AA", "AevilA@Aevila.AA", "AevilA@Aevil0.AA", "AevilA@A-A.AA", "AevilA@AeVilA.AA", "AevilA@AEVILA.AA", "AevilA@Aev_ilA.AA", "AevilA@Aev4ilA.AA", "AevilA@AeA.AA", "AevilA@A6A.AA", "AevilA@A_A.AA", "AevilA@AA.AA", "AevilA@aevilA.AA", "AevilA@0evilA.AA", "AevilAevilA@AevilA.AA", "A@AevilA.AA", "Aevila@AevilA.AA", "Aevil0@AevilA.AA", "A@A@AevilA.AA", "A.A@AevilA.AA", "A-A@AevilA.AA", "AeVilA@AevilA.AA", "AEVILA@AevilA.AA", "Aev_ilA@AevilA.AA", "Aev ilA@AevilA.AA", "Aev4ilA@AevilA.AA", "AeA@AevilA.AA", "A A@AevilA.AA", "A6A@AevilA.AA", "A_A@AevilA.AA", "AA@AevilA.AA", "aevilA@AevilA.AA", "0evilA@AevilA.AA", "A@AA.AA", "AevilA@AevilA.AA"], "nonMatches": ["AevilA@AevilA.AAAAAAAAAA", "AevilA@AevilA.A", "AevilA@AA", "AevilA@A@A.AA", "AevilA@A.A.AA", "AevilA@Aev ilA.AA", "AevilA@A A.AA"]}, {"regex": "(?<Sedol>[B-Db-dF-Hf-hJ-Nj-nP-Tp-tV-Xv-xYyZz\\d]{6}\\d)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<S"}, "matches": []}, {"regex": "[AaEeIiOoUuYy]", "exceptionStackTrace": null, "matches": ["u", "o", "i", "e", "a", "Y", "U", "O", "I", "E", "A", "y"], "nonMatches": ["b", "B"]}, {"regex": "((\\s)*(?&lt;Key&gt;([^\\=^\\s^\\n]+))[\\s^\\n]* # key part (surrounding whitespace stripped)\n\\=\n(\\s)*(?&lt;Value&gt;([^\\n^\\s]+(\\n){0,1}))) # value part (surrounding whitespace stripped)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^((\\d{2,4})/)?((\\d{6,8})|(\\d{2})-(\\d{2})-(\\d{2,4})|(\\d{3,4})-(\\d{3,4}))$", "exceptionStackTrace": null, "matches": ["00/000-0000", "00/0000-000", "00/00-00-0000", "00/00000000", "0000/000000", "000-000", "00-00-00", "000000", "00/000-000", "00/00-00-00", "00/000000"], "nonMatches": ["00/000-00000", "00/000-00", "00/00000-000", "00/00-000", "00/00-00-00000", "00/00-00-0", "00/00-000-00", "00/00-0-00", "00/000-00-00", "00/0-00-00", "00/000000000", "00/00000", "00/00/000000", "00000/000000", "0/000000"]}, {"regex": "^(([1..9])|(0[1..9])|(1\\d)|(2\\d)|(3[0..1])).((\\d)|(0\\d)|(1[0..2])).(\\d{4})$", "exceptionStackTrace": null, "matches": ["30a0a0000", "3.a0a0000", "01a0a0000", "0.a0a0000", "9a10a0000", "9a1.a0000", "9a0A0000", "9a000000", "9a0.0000", "9a0 0000", "9A0a0000", "900a0000", "9.0a0000", "9 0a0000", "1a0a0000", ".a0a0000", "31a0a0000", "20a0a0000", "10a0a0000", "09a0a0000", "9a12a0000", "9a00a0000", "9a0a0000"], "nonMatches": ["32a0a0000", "00a0a0000", "9a11a0000", "9a0a00000", "9a0a000", "0a0a0000"]}, {"regex": "^100$|^\\d{0,2}(\\.\\d{1,2})? *%?$", "exceptionStackTrace": null, "matches": ["0.0 ", "0.0  %", "0.0%", "0 %", "0.00 %", "00.0 %", ".0 %", "", "0.0 %", "100"], "nonMatches": ["0.0 %%", "0.0.0 %", "0.000 %", "0. %", "000.0 %"]}, {"regex": "(?<=(\\A|,))(?<val>(\\w|\\W){1})(?=(,|\\Z))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<v"}, "matches": []}, {"regex": "<([^\\s>]*)(\\s[^<]*)>", "exceptionStackTrace": null, "matches": ["<evil >>", "<evil eVil>", "<evil EVIL>", "<evil ev_il>", "<evil ev il>", "<evil ev4il>", "<evil e>", "<evil  >", "<evil 6>", "<evil _>", "<evil >", "<< evil>", "<eVil evil>", "<EVIL evil>", "<ev_il evil>", "<ev il evil>", "<ev4il evil>", "<e evil>", "<  evil>", "<6 evil>", "<_ evil>", "< evil>", "< >", "<evil evil>"], "nonMatches": ["<evil <>", "<> evil>"]}, {"regex": "<([^<>\\s]*)(\\s[^<>]*)?>", "exceptionStackTrace": null, "matches": ["<evil evil evil>", "<evil>", "<evil >>", "<evil <>", "<evil eVil>", "<evil EVIL>", "<evil ev_il>", "<evil ev il>", "<evil ev4il>", "<evil e>", "<evil  >", "<evil 6>", "<evil _>", "<evil >", "<> evil>", "<< evil>", "<eVil evil>", "<EVIL evil>", "<ev_il evil>", "<ev il evil>", "<ev4il evil>", "<e evil>", "<  evil>", "<6 evil>", "<_ evil>", "< evil>", "<>", "<evil evil>"], "nonMatches": []}, {"regex": "\\A([A-Za-z0-9&#39;~`!@#$%&amp;^_+=\\(\\){},\\-\\[\\]\\;])+?([ A-Za-z0-9&#39;~`\n!@#$%&amp;^_+=\\(\\){},\\-\\[\\];]|([.]))*?(?(3)(([ A-Za-z0-9&#39;~`!@#$\n%&amp;^_+=\\(\\){},\\-\\[\\]\\;]*?)([A-Za-z0-9&#39;~`!@#$%&amp;^_+=\\(\\){},\\-\\[\n\\];])+\\z)|(\\z))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad escape \\z"}, "matches": []}, {"regex": "^(?:(?&lt;1&gt;[(])?(?&lt;AreaCode&gt;[2-9]\\d{2})(?(1)[)][ ]?|[- \\/.]?))?\n(?&lt;Prefix&gt;[1-9]\\d{2})[- .]?(?&lt;Suffix&gt;\\d{4})\n(?:(?:[ ]+|[xX]|Ext\\.?[ ]?){1,2}(?&lt;Ext&gt;\\d{1,5}))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^((([A-PR-UWYZ])([0-9][0-9A-HJKS-UW]?))|(([A-PR-UWYZ][A-HK-Y])([0-9][0-9ABEHMNPRV-Y]?))\\s{0,2}(([0-9])([ABD-HJLNP-UW-Z])([ABD-HJLNP-UW-Z])))|(((GI)(R))\\s{0,2}((0)(A)(A)))$", "exceptionStackTrace": null, "matches": ["GIR  0AA", "ZK0R 0NW", "ZK0R 0NP", "ZK0R 0NL", "ZK0R 0NJ", "ZK0R 0ND", "ZK0R 0NB", "ZK0R 0NA", "ZK0R 0WN", "ZK0R 0PN", "ZK0R 0LN", "ZK0R 0JN", "ZK0R 0DN", "ZK0R 0BN", "ZK0R 0AN", "ZK0R  0NN", "ZK0R0NN", "ZK0 0NN", "ZK0V 0NN", "ZK0P 0NN", "ZK0N 0NN", "ZK0M 0NN", "ZK0H 0NN", "ZK0E 0NN", "ZK0B 0NN", "ZK0A 0NN", "ZK00 0NN", "ZA0R 0NN", "YK0R 0NN", "WK0R 0NN", "RK0R 0NN", "AK0R 0NN", "Z0WW", "Z0S", "Z0K", "Z0J", "Z0I", "Z0A", "Z00", "Y0W", "W0W", "R0W", "A0W", "GIR0AA", "ZK00NN", "Z0", "GIR 0AA", "ZK0R 0NN", "Z0W"], "nonMatches": ["GIR   0AA", "ZK0R 0NC", "ZK0R 0CN", "ZK0R   0NN", "ZK0RR 0NN", "ZK0C 0NN", "ZI0R 0NN", "QK0R 0NN", "Q0W"]}, {"regex": "^[a-zA-Z]{1}[\\w\\sa-zA-Z\\d_]*[^\\s]$", "exceptionStackTrace": null, "matches": ["Aevil_", "AevilA", "Aevil0", "AeVila", "AEVILa", "Aev_ila", "Aev ila", "Aev4ila", "Aea", "A a", "A6a", "A_a", "AAevila", "evila", "aevila", "Aa", "Aevila"], "nonMatches": ["Aevil "]}, {"regex": "(?!^0*$)(?!^0*\\.0*$)^\\d{1,5}(\\.\\d{1,3})?$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["0.0.0", "0.0000", "0.000", "0.", "000000.0", "00000.0", ".0", "0", "0.0"]}, {"regex": "<[^/bp][^><]*>|<p[a-z][^><]*>|<b[^r][^><]*>|<br[a-z][^><]*>|</[^bp]+>|</p[a-z]+>|</b[^r]+>|</br[a-z]+>", "exceptionStackTrace": null, "matches": ["</bre>", "</b>>", "</b<>", "</b/>", "</beVil>", "</bEVIL>", "</bev_il>", "</bev il>", "</bev4il>", "</be>", "</b >", "</b6>", "</b_>", "</pe>", "</>>", "</<>", "<//>", "</eVil>", "</EVIL>", "</ev_il>", "</ev il>", "</ev4il>", "</e>", "</ >", "</6>", "</_>", "<bra>>", "<bra/>", "<braeVil>", "<braEVIL>", "<braev_il>", "<braev il>", "<braev4il>", "<brae>", "<bra >", "<bra6>", "<bra_>", "<ba>>", "<ba/>", "<baeVil>", "<baEVIL>", "<baev_il>", "<baev il>", "<baev4il>", "<bae>", "<ba >", "<ba6>", "<ba_>", "<brevil>", "<bAevil>", "<b>evil>", "<b<evil>", "<b0evil>", "<b/evil>", "<b evil>", "<pa>>", "<pa/>", "<paeVil>", "<paEVIL>", "<paev_il>", "<paev il>", "<paev4il>", "<pae>", "<pa >", "<pa6>", "<pa_>", "<a>>", "<a/>", "<aeVil>", "<aEVIL>", "<aev_il>", "<aev il>", "<aev4il>", "<ae>", "<a >", "<a6>", "<a_>", "<pevil>", "<bevil>", "<Aevil>", "<>evil>", "<<evil>", "<0evil>", "< evil>", "<bra>", "<ba>", "<pa>", "<a>", "</brevil>", "</bevil>", "</pevil>", "</evil>", "<braevil>", "<baevil>", "<paevil>", "<aevil>"], "nonMatches": ["</breVil>", "</brEVIL>", "</brev_il>", "</brev il>", "</brev4il>", "</br >", "</br6>", "</br_>", "</br>", "</b>", "</peVil>", "</pEVIL>", "</pev_il>", "</pev il>", "</pev4il>", "</p >", "</p6>", "</p_>", "</p>", "</>", "<bra<>", "<ba<>", "<pa<>", "<a<>"]}, {"regex": "^(?=.{16,})(?=.*[1-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[(!@#$%^&*()_+|~\\- =\\`{}[\\]:\u201d;&#39;<>?,.\\/, )])(?!.*(.)\\1{2,}).+$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["~", "}", "|", "{", "`", "^", "]", "[", "@", "?", ">", "=", "<", ";", ":", "/", ".", "-", ",", "+", "*", ")", "(", "&", "%", "$", "#", "!", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"]}, {"regex": "(\\d+)([,|.\\d])*\\d", "exceptionStackTrace": null, "matches": ["0..0", "0|0", "000", "0,0", "00.0", "00", "0.0"], "nonMatches": [".0"]}, {"regex": "^[3|4|5|6]([0-9]{15}$|[0-9]{12}$|[0-9]{13}$|[0-9]{14}$)", "exceptionStackTrace": null, "matches": ["|000000000000000", "5000000000000000", "4000000000000000", "3000000000000000", "600000000000000", "60000000000000", "6000000000000", "6000000000000000"], "nonMatches": ["600000000000", "60000000000000000", "0000000000000000"]}, {"regex": "^[A-Za-z0-9](([_\\.\\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\\.\\-]?[a-zA-Z0-9]+)*)\\.([A-Za-z]{2,})$", "exceptionStackTrace": null, "matches": ["0-evil@evil-evil.Aa", "0-evil@evil-evil-evil.aa", "0-evil@evil.aa", "0-evil@evil-eVil.aa", "0-evil@evil-EVIL.aa", "0-evil@evil-ev4il.aa", "0-evil@evil-e.aa", "0-evil@evil-6.aa", "0-evil@evilevil.aa", "0-evil@evil.evil.aa", "0-evil@eVil-evil.aa", "0-evil@EVIL-evil.aa", "0-evil@ev4il-evil.aa", "0-evil@e-evil.aa", "0-evil@6-evil.aa", "0-evil-evil@evil-evil.aa", "0@evil-evil.aa", "0-eVil@evil-evil.aa", "0-EVIL@evil-evil.aa", "0-ev_il@evil-evil.aa", "0-ev4il@evil-evil.aa", "0-e@evil-evil.aa", "0-6@evil-evil.aa", "0evil@evil-evil.aa", "0_evil@evil-evil.aa", "0.evil@evil-evil.aa", "a-evil@evil-evil.aa", "A-evil@evil-evil.aa", "0@evil.aa", "0-evil@evil-evil.aa"], "nonMatches": ["0-evil@evil-evil.a", "0-evil@evil-ev_il.aa", "0-evil@evil-ev il.aa", "0-evil@evil- .aa", "0-evil@evil-_.aa", "0-evil@evil-.aa", "0-evil@evil--evil.aa", "0-evil@ev_il-evil.aa", "0-evil@ev il-evil.aa", "0-evil@ -evil.aa", "0-evil@_-evil.aa", "0-evil@-evil.aa", "0-ev il@evil-evil.aa", "0- @evil-evil.aa", "0-_@evil-evil.aa", "0-@evil-evil.aa", "0--evil@evil-evil.aa"]}, {"regex": "(\\s*\\(?0\\d{4}\\)?(\\s*|-)\\d{3}(\\s*|-)\\d{3}\\s*)|(\\s*\\(?0\\d{3}\\)?(\\s*|-)\\d{3}(\\s*|-)\\d{4}\\s*)|(\\s*(7|8)(\\d{7}|\\d{3}(\\-|\\s{1})\\d{4})\\s*)", "exceptionStackTrace": null, "matches": [" 7000-00000 ", " 70000000  ", " 70000000", " 700000000 ", "  70000000 ", "70000000 ", " (0000) 000 0000  ", " (0000) 000 0000", " (0000) 000 00000 ", " (0000) 000  0000 ", " (0000) 0000000 ", " (0000)  000 0000 ", " (0000)000 0000 ", " (0000 000 0000 ", " ((0000) 000 0000 ", " 0000) 000 0000 ", "  (0000) 000 0000 ", "(0000) 000 0000 ", " (00000) 000 000  ", " (00000) 000 000", " (00000) 000 0000 ", " (00000) 000  000 ", " (00000) 000000 ", " (00000)  000 000 ", " (00000)000 000 ", " (00000 000 000 ", " (000000) 000 000 ", " ((00000) 000 000 ", " 00000) 000 000 ", "  (00000) 000 000 ", "(00000) 000 000 ", "80000000", "7000 0000", "7000-0000", "70000000", "0000-0000000", "0000000-0000", "00000-000000", "00000000-000", "00000000000", " 80000000 ", " 7000 0000 ", " 7000-0000 ", " 70000000 ", " (0000)-000 0000 ", " (0000) 000-0000 ", " (0000) 000 0000 ", " (00000)-000 000 ", " (00000) 000-000 ", " (00000) 000 000 "], "nonMatches": [" 7000  0000 ", " 7000-000 ", " 70000-0000 ", " 700-0000 ", " 7000000 ", " (0000) 0000 0000 ", " (0000) 00 0000 ", " (0000)) 000 0000 ", " (000) 000 0000 ", " (00000) 000 00 ", " (00000) 0000 000 ", " (00000) 00 000 ", " (00000)) 000 000 ", " (0000) 000 000 "]}, {"regex": "(\\s*\\(?0\\d{4}\\)?(\\s*|-)\\d{3}(\\s*|-)\\d{3}\\s*)|(\\s*\\(?0\\d{3}\\)?(\\s*|-)\\d{3}(\\s*|-)\\d{4}\\s*)|(\\s*(7|8)(\\d{7}|\\d{3}(\\-|\\s{1})\\d{4})\\s*)", "exceptionStackTrace": null, "matches": [" 7000-00000 ", " 70000000  ", " 70000000", " 700000000 ", "  70000000 ", "70000000 ", " (0000) 000 0000  ", " (0000) 000 0000", " (0000) 000 00000 ", " (0000) 000  0000 ", " (0000) 0000000 ", " (0000)  000 0000 ", " (0000)000 0000 ", " (0000 000 0000 ", " ((0000) 000 0000 ", " 0000) 000 0000 ", "  (0000) 000 0000 ", "(0000) 000 0000 ", " (00000) 000 000  ", " (00000) 000 000", " (00000) 000 0000 ", " (00000) 000  000 ", " (00000) 000000 ", " (00000)  000 000 ", " (00000)000 000 ", " (00000 000 000 ", " (000000) 000 000 ", " ((00000) 000 000 ", " 00000) 000 000 ", "  (00000) 000 000 ", "(00000) 000 000 ", "80000000", "7000 0000", "7000-0000", "70000000", "0000-0000000", "0000000-0000", "00000-000000", "00000000-000", "00000000000", " 80000000 ", " 7000 0000 ", " 7000-0000 ", " 70000000 ", " (0000)-000 0000 ", " (0000) 000-0000 ", " (0000) 000 0000 ", " (00000)-000 000 ", " (00000) 000-000 ", " (00000) 000 000 "], "nonMatches": [" 7000  0000 ", " 7000-000 ", " 70000-0000 ", " 700-0000 ", " 7000000 ", " (0000) 0000 0000 ", " (0000) 00 0000 ", " (0000)) 000 0000 ", " (000) 000 0000 ", " (00000) 000 00 ", " (00000) 0000 000 ", " (00000) 00 000 ", " (00000)) 000 000 ", " (0000) 000 000 "]}, {"regex": "^((http|https|ftp):\\/\\/)?((.*?):(.*?)@)?([a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])((\\.[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])*)(:([0-9]{1,5}))?((\\/.*?)(\\?(.*?))?(\\#(.*))?)?$", "exceptionStackTrace": null, "matches": ["http://evil:evil@0-0.0-0:0/evil?evil#evil/evil?evil#evil", "http://evil:evil@0-0.0-0:0", "http://evil:evil@0-0.0-0:0/evil?evil#evil#evil", "http://evil:evil@0-0.0-0:0/evil?evil", "http://evil:evil@0-0.0-0:0/evil?evil#@", "http://evil:evil@0-0.0-0:0/evil?evil#?", "http://evil:evil@0-0.0-0:0/evil?evil#:", "http://evil:evil@0-0.0-0:0/evil?evil#/", "http://evil:evil@0-0.0-0:0/evil?evil#.", "http://evil:evil@0-0.0-0:0/evil?evil#-", "http://evil:evil@0-0.0-0:0/evil?evil##", "http://evil:evil@0-0.0-0:0/evil?evil#eVil", "http://evil:evil@0-0.0-0:0/evil?evil#EVIL", "http://evil:evil@0-0.0-0:0/evil?evil#ev_il", "http://evil:evil@0-0.0-0:0/evil?evil#ev il", "http://evil:evil@0-0.0-0:0/evil?evil#ev4il", "http://evil:evil@0-0.0-0:0/evil?evil#e", "http://evil:evil@0-0.0-0:0/evil?evil# ", "http://evil:evil@0-0.0-0:0/evil?evil#6", "http://evil:evil@0-0.0-0:0/evil?evil#_", "http://evil:evil@0-0.0-0:0/evil?evil#", "http://evil:evil@0-0.0-0:0/evil?evil?evil#evil", "http://evil:evil@0-0.0-0:0/evil#evil", "http://evil:evil@0-0.0-0:0/evil?@#evil", "http://evil:evil@0-0.0-0:0/evil??#evil", "http://evil:evil@0-0.0-0:0/evil?:#evil", "http://evil:evil@0-0.0-0:0/evil?/#evil", "http://evil:evil@0-0.0-0:0/evil?.#evil", "http://evil:evil@0-0.0-0:0/evil?-#evil", "http://evil:evil@0-0.0-0:0/evil?##evil", "http://evil:evil@0-0.0-0:0/evil?eVil#evil", "http://evil:evil@0-0.0-0:0/evil?EVIL#evil", "http://evil:evil@0-0.0-0:0/evil?ev_il#evil", "http://evil:evil@0-0.0-0:0/evil?ev il#evil", "http://evil:evil@0-0.0-0:0/evil?ev4il#evil", "http://evil:evil@0-0.0-0:0/evil?e#evil", "http://evil:evil@0-0.0-0:0/evil? #evil", "http://evil:evil@0-0.0-0:0/evil?6#evil", "http://evil:evil@0-0.0-0:0/evil?_#evil", "http://evil:evil@0-0.0-0:0/evil?#evil", "http://evil:evil@0-0.0-0:0/@?evil#evil", "http://evil:evil@0-0.0-0:0/??evil#evil", "http://evil:evil@0-0.0-0:0/:?evil#evil", "http://evil:evil@0-0.0-0:0//?evil#evil", "http://evil:evil@0-0.0-0:0/.?evil#evil", "http://evil:evil@0-0.0-0:0/-?evil#evil", "http://evil:evil@0-0.0-0:0/#?evil#evil", "http://evil:evil@0-0.0-0:0/eVil?evil#evil", "http://evil:evil@0-0.0-0:0/EVIL?evil#evil", "http://evil:evil@0-0.0-0:0/ev_il?evil#evil", "http://evil:evil@0-0.0-0:0/ev il?evil#evil", "http://evil:evil@0-0.0-0:0/ev4il?evil#evil", "http://evil:evil@0-0.0-0:0/e?evil#evil", "http://evil:evil@0-0.0-0:0/ ?evil#evil", "http://evil:evil@0-0.0-0:0/6?evil#evil", "http://evil:evil@0-0.0-0:0/_?evil#evil", "http://evil:evil@0-0.0-0:0/?evil#evil", "http://evil:evil@0-0.0-0/evil?evil#evil", "http://evil:evil@0-0.0-0:00000/evil?evil#evil", "http://evil:evil@0-0.0-0.0-0:0/evil?evil#evil", "http://evil:evil@0-0:0/evil?evil#evil", "http://evil:evil@0-0.0-a:0/evil?evil#evil", "http://evil:evil@0-0.0-A:0/evil?evil#evil", "http://evil:evil@0-0.0-------------------------------------------------------------0:0/evil?evil#evil", "http://evil:evil@0-0.00:0/evil?evil#evil", "http://evil:evil@0-0.0a0:0/evil?evil#evil", "http://evil:evil@0-0.0A0:0/evil?evil#evil", "http://evil:evil@0-0.000:0/evil?evil#evil", "http://evil:evil@0-0.a-0:0/evil?evil#evil", "http://evil:evil@0-0.A-0:0/evil?evil#evil", "http://evil:evil@0-a.0-0:0/evil?evil#evil", "http://evil:evil@0-A.0-0:0/evil?evil#evil", "http://evil:evil@0-------------------------------------------------------------0.0-0:0/evil?evil#evil", "http://evil:evil@00.0-0:0/evil?evil#evil", "http://evil:evil@0a0.0-0:0/evil?evil#evil", "http://evil:evil@0A0.0-0:0/evil?evil#evil", "http://evil:evil@000.0-0:0/evil?evil#evil", "http://evil:evil@a-0.0-0:0/evil?evil#evil", "http://evil:evil@A-0.0-0:0/evil?evil#evil", "http://evil:evil@evil:evil@0-0.0-0:0/evil?evil#evil", "http://0-0.0-0:0/evil?evil#evil", "http://evil:@@0-0.0-0:0/evil?evil#evil", "http://evil:?@0-0.0-0:0/evil?evil#evil", "http://evil::@0-0.0-0:0/evil?evil#evil", "http://evil:/@0-0.0-0:0/evil?evil#evil", "http://evil:.@0-0.0-0:0/evil?evil#evil", "http://evil:-@0-0.0-0:0/evil?evil#evil", "http://evil:#@0-0.0-0:0/evil?evil#evil", "http://evil:eVil@0-0.0-0:0/evil?evil#evil", "http://evil:EVIL@0-0.0-0:0/evil?evil#evil", "http://evil:ev_il@0-0.0-0:0/evil?evil#evil", "http://evil:ev il@0-0.0-0:0/evil?evil#evil", "http://evil:ev4il@0-0.0-0:0/evil?evil#evil", "http://evil:e@0-0.0-0:0/evil?evil#evil", "http://evil: @0-0.0-0:0/evil?evil#evil", "http://evil:6@0-0.0-0:0/evil?evil#evil", "http://evil:_@0-0.0-0:0/evil?evil#evil", "http://evil:@0-0.0-0:0/evil?evil#evil", "http://@:evil@0-0.0-0:0/evil?evil#evil", "http://?:evil@0-0.0-0:0/evil?evil#evil", "http://::evil@0-0.0-0:0/evil?evil#evil", "http:///:evil@0-0.0-0:0/evil?evil#evil", "http://.:evil@0-0.0-0:0/evil?evil#evil", "http://-:evil@0-0.0-0:0/evil?evil#evil", "http://#:evil@0-0.0-0:0/evil?evil#evil", "http://eVil:evil@0-0.0-0:0/evil?evil#evil", "http://EVIL:evil@0-0.0-0:0/evil?evil#evil", "http://ev_il:evil@0-0.0-0:0/evil?evil#evil", "http://ev il:evil@0-0.0-0:0/evil?evil#evil", "http://ev4il:evil@0-0.0-0:0/evil?evil#evil", "http://e:evil@0-0.0-0:0/evil?evil#evil", "http:// :evil@0-0.0-0:0/evil?evil#evil", "http://6:evil@0-0.0-0:0/evil?evil#evil", "http://_:evil@0-0.0-0:0/evil?evil#evil", "http://:evil@0-0.0-0:0/evil?evil#evil", "http://http://evil:evil@0-0.0-0:0/evil?evil#evil", "evil:evil@0-0.0-0:0/evil?evil#evil", "00", "ftp://evil:evil@0-0.0-0:0/evil?evil#evil", "https://evil:evil@0-0.0-0:0/evil?evil#evil", "http://evil:evil@0-0.0-0:0/evil?evil#evil"], "nonMatches": ["http://evil:evil@0-0.0-0:0:0/evil?evil#evil", "http://evil:evil@0-0.0-0:000000/evil?evil#evil", "http://evil:evil@0-0.0-0:/evil?evil#evil", "http://evil:evil@0-0.0--------------------------------------------------------------0:0/evil?evil#evil", "http://evil:evil@0--------------------------------------------------------------0.0-0:0/evil?evil#evil"]}, {"regex": "Pattern that matches all DVLA Vehicle Registration Marks (VRM). Allows for an optional single space between segments.\n\nSource:\nhttp://www.carreg.co.uk/number_plates/registration_numbers", "exceptionStackTrace": null, "matches": ["Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregaco_uk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoAuk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregaco:uk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregaco0uk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregaco/uk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregaco uk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarreg_coauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregAcoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarreg:coauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarreg0coauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarreg/coauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarreg coauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://www_carregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwAcarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://www:carregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://www0carregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://www/carregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://www carregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segments_\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsA\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segments:\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segments0\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segments/\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segments \n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRM_ Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMA Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRM: Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRM0 Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRM/ Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRM  Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers", "Pattern that matches all DVLA Vehicle Registration Marks VRMa Allows for an optional single space between segmentsa\n\nSource:\nhttp://wwwacarregacoauk/number_plates/registration_numbers"], "nonMatches": []}, {"regex": "^[1-9]{3}\\s{0,1}[0-9]{3}$", "exceptionStackTrace": null, "matches": ["111000", "111 000"], "nonMatches": ["111 0000", "111 00", "111  000", "1111 000", "11 000", "011 000"]}, {"regex": "(?<=(,|;|:))\\s(?=((?:(?!<).)*>))", "exceptionStackTrace": null, "matches": [], "nonMatches": [" "]}, {"regex": "http[s]?://(www.facebook|[a-zA-Z]{2}-[a-zA-Z]{2}.facebook|facebook)\\.com/(pages/[a-zA-Z0-9\\.-]+/[0-9]+|[a-zA-Z0-9\\.-]+)[/]?$", "exceptionStackTrace": null, "matches": ["https://AA-AAAfacebook.com/pages/evil/0/", "https://AA-AA:facebook.com/pages/evil/0/", "https://AA-AA0facebook.com/pages/evil/0/", "https://AA-AA/facebook.com/pages/evil/0/", "https://AA-AA.facebook.com/pages/evil/0/", "https://AA-AA-facebook.com/pages/evil/0/", "https://AA-AA facebook.com/pages/evil/0/", "https://AA-aAafacebook.com/pages/evil/0/", "https://aA-AAafacebook.com/pages/evil/0/", "https://wwwafacebook.com/./", "https://wwwafacebook.com/-/", "https://wwwafacebook.com/eVil/", "https://wwwafacebook.com/EVIL/", "https://wwwafacebook.com/ev4il/", "https://wwwafacebook.com/e/", "https://wwwafacebook.com/6/", "https://wwwafacebook.com/pages/evil/0", "https://wwwafacebook.com/pages/evil/00/", "https://wwwafacebook.com/pages/./0/", "https://wwwafacebook.com/pages/-/0/", "https://wwwafacebook.com/pages/eVil/0/", "https://wwwafacebook.com/pages/EVIL/0/", "https://wwwafacebook.com/pages/ev4il/0/", "https://wwwafacebook.com/pages/e/0/", "https://wwwafacebook.com/pages/6/0/", "https://wwwAfacebook.com/pages/evil/0/", "https://www:facebook.com/pages/evil/0/", "https://www0facebook.com/pages/evil/0/", "https://www/facebook.com/pages/evil/0/", "https://www.facebook.com/pages/evil/0/", "https://www-facebook.com/pages/evil/0/", "https://www facebook.com/pages/evil/0/", "http://wwwafacebook.com/pages/evil/0/", "http://facebook.com/pages/evil/0", "http://AA-AAafacebook.com/pages/evil/0", "http://wwwafacebook.com/evil", "http://wwwafacebook.com/pages/evil/0", "https://facebook.com/pages/evil/0/", "https://AA-AAafacebook.com/pages/evil/0/", "https://wwwafacebook.com/evil/", "https://wwwafacebook.com/pages/evil/0/"], "nonMatches": ["https://AA-AAAafacebook.com/pages/evil/0/", "https://AA-Aafacebook.com/pages/evil/0/", "https://AAA-AAafacebook.com/pages/evil/0/", "https://A-AAafacebook.com/pages/evil/0/", "https://wwwafacebook.com/:/", "https://wwwafacebook.com///", "https://wwwafacebook.com/ev_il/", "https://wwwafacebook.com/ev il/", "https://wwwafacebook.com/ /", "https://wwwafacebook.com/_/", "https://wwwafacebook.com//", "https://wwwafacebook.com/pages/evil/0//", "https://wwwafacebook.com/pages/evil//", "https://wwwafacebook.com/pages/:/0/", "https://wwwafacebook.com/pages///0/", "https://wwwafacebook.com/pages/ev_il/0/", "https://wwwafacebook.com/pages/ev il/0/", "https://wwwafacebook.com/pages/ /0/", "https://wwwafacebook.com/pages/_/0/", "https://wwwafacebook.com/pages//0/", "httpss://wwwafacebook.com/pages/evil/0/"]}, {"regex": "^(http(?:s)?\\:\\/\\/[a-zA-Z0-9]+(?:(?:\\.|\\-)[a-zA-Z0-9]+)+(?:\\:\\d+)?(?:\\/[\\w\\-]+)*(?:\\/?|\\/\\w+\\.[a-zA-Z]{2,7}(?:\\?[\\w]+\\=[\\w\\-]+)?)?(?:\\&[\\w]+\\=[\\w\\-]+)*)$", "exceptionStackTrace": null, "matches": ["https://evil.evil:0/evil/evil.AA&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=-&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=eVil&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=EVIL&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=ev_il&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=ev4il&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=e&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=6&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=_&evil=evil", "https://evil.evil:0/evil/evil.AA?eVil=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?EVIL=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?ev_il=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?ev4il=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?e=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?6=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?_=evil&evil=evil", "https://evil.evil:0/evil/evil.AAAAAAA?evil=evil&evil=evil", "https://evil.evil:0/evil/evil.aA?evil=evil&evil=evil", "https://evil.evil:0/evil/eVil.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/EVIL.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/ev_il.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/ev4il.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/e.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/6.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/_.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/&evil=evil&evil=evil", "https://evil.evil:0/evil/", "https://evil.evil:0/evil/&evil=-", "https://evil.evil:0/evil/&evil=eVil", "https://evil.evil:0/evil/&evil=EVIL", "https://evil.evil:0/evil/&evil=ev_il", "https://evil.evil:0/evil/&evil=ev4il", "https://evil.evil:0/evil/&evil=e", "https://evil.evil:0/evil/&evil=6", "https://evil.evil:0/evil/&evil=_", "https://evil.evil:0/evil/&eVil=evil", "https://evil.evil:0/evil/&EVIL=evil", "https://evil.evil:0/evil/&ev_il=evil", "https://evil.evil:0/evil/&ev4il=evil", "https://evil.evil:0/evil/&e=evil", "https://evil.evil:0/evil/&6=evil", "https://evil.evil:0/evil/&_=evil", "https://evil.evil:0/evil&evil=evil", "https://evil.evil:0/evil/evil/&evil=evil", "https://evil.evil:0/&evil=evil", "https://evil.evil:0/-/&evil=evil", "https://evil.evil:0/eVil/&evil=evil", "https://evil.evil:0/EVIL/&evil=evil", "https://evil.evil:0/ev_il/&evil=evil", "https://evil.evil:0/ev4il/&evil=evil", "https://evil.evil:0/e/&evil=evil", "https://evil.evil:0/6/&evil=evil", "https://evil.evil:0/_/&evil=evil", "https://evil.evil/evil/&evil=evil", "https://evil.evil:00/evil/&evil=evil", "https://evil.evil.evil:0/evil/&evil=evil", "https://evil.eVil:0/evil/&evil=evil", "https://evil.EVIL:0/evil/&evil=evil", "https://evil.ev4il:0/evil/&evil=evil", "https://evil.e:0/evil/&evil=evil", "https://evil.6:0/evil/&evil=evil", "https://eVil.evil:0/evil/&evil=evil", "https://EVIL.evil:0/evil/&evil=evil", "https://ev4il.evil:0/evil/&evil=evil", "https://e.evil:0/evil/&evil=evil", "https://6.evil:0/evil/&evil=evil", "http://evil.evil:0/evil/&evil=evil", "http://evil-evil", "http://evil.evil", "https://evil-evil:0/evil/&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/&evil=evil"], "nonMatches": ["https://evil.evil:0/evil/evil.AA?evil=evil?evil=evil&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=?&evil=evil", "https://evil.evil:0/evil/evil.AA?evil==&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=:&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=/&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=.&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=&&evil=evil", "https://evil.evil:0/evil/evil.AA?evil=ev il&evil=evil", "https://evil.evil:0/evil/evil.AA?evil= &evil=evil", "https://evil.evil:0/evil/evil.AA?evil=&evil=evil", "https://evil.evil:0/evil/evil.AA?ev il=evil&evil=evil", "https://evil.evil:0/evil/evil.AA? =evil&evil=evil", "https://evil.evil:0/evil/evil.AA?=evil&evil=evil", "https://evil.evil:0/evil/evil.AAAAAAAA?evil=evil&evil=evil", "https://evil.evil:0/evil/evil.A?evil=evil&evil=evil", "https://evil.evil:0/evil/ev il.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/ .AA?evil=evil&evil=evil", "https://evil.evil:0/evil/.AA?evil=evil&evil=evil", "https://evil.evil:0/evil/&evil=?", "https://evil.evil:0/evil/&evil==", "https://evil.evil:0/evil/&evil=:", "https://evil.evil:0/evil/&evil=/", "https://evil.evil:0/evil/&evil=.", "https://evil.evil:0/evil/&evil=&", "https://evil.evil:0/evil/&evil=ev il", "https://evil.evil:0/evil/&evil= ", "https://evil.evil:0/evil/&evil=", "https://evil.evil:0/evil/&ev il=evil", "https://evil.evil:0/evil/& =evil", "https://evil.evil:0/evil/&=evil", "https://evil.evil:0/evil//&evil=evil", "https://evil.evil:0/?/&evil=evil", "https://evil.evil:0/=/&evil=evil", "https://evil.evil:0/:/&evil=evil", "https://evil.evil:0///&evil=evil", "https://evil.evil:0/./&evil=evil", "https://evil.evil:0/&/&evil=evil", "https://evil.evil:0/ev il/&evil=evil", "https://evil.evil:0/ /&evil=evil", "https://evil.evil:0//&evil=evil", "https://evil.evil:0:0/evil/&evil=evil", "https://evil.evil:/evil/&evil=evil", "https://evil:0/evil/&evil=evil", "https://evil.ev_il:0/evil/&evil=evil", "https://evil.ev il:0/evil/&evil=evil", "https://evil. :0/evil/&evil=evil", "https://evil._:0/evil/&evil=evil", "https://evil.:0/evil/&evil=evil", "https://ev_il.evil:0/evil/&evil=evil", "https://ev il.evil:0/evil/&evil=evil", "https:// .evil:0/evil/&evil=evil", "https://_.evil:0/evil/&evil=evil", "https://.evil:0/evil/&evil=evil", "httpss://evil.evil:0/evil/&evil=evil"]}, {"regex": "^([a-zA-Z0-9]+(?:[.-]?[a-zA-Z0-9]+)*@[a-zA-Z0-9]+(?:[.-]?[a-zA-Z0-9]+)*\\.[a-zA-Z]{2,7})$", "exceptionStackTrace": null, "matches": ["evil-evil@evil-evil.AAAAAAA", "evil-evil@evil-evil.aA", "evil-evil@evil-evil-evil.AA", "evil-evil@evil.AA", "evil-evil@evil-eVil.AA", "evil-evil@evil-EVIL.AA", "evil-evil@evil-ev4il.AA", "evil-evil@evil-e.AA", "evil-evil@evil-6.AA", "evil-evil@evilevil.AA", "evil-evil@evil.evil.AA", "evil-evil@eVil-evil.AA", "evil-evil@EVIL-evil.AA", "evil-evil@ev4il-evil.AA", "evil-evil@e-evil.AA", "evil-evil@6-evil.AA", "evil-evil-evil@evil-evil.AA", "evil@evil-evil.AA", "evil-eVil@evil-evil.AA", "evil-EVIL@evil-evil.AA", "evil-ev4il@evil-evil.AA", "evil-e@evil-evil.AA", "evil-6@evil-evil.AA", "evilevil@evil-evil.AA", "evil.evil@evil-evil.AA", "eVil-evil@evil-evil.AA", "EVIL-evil@evil-evil.AA", "ev4il-evil@evil-evil.AA", "e-evil@evil-evil.AA", "6-evil@evil-evil.AA", "evil@evil.AA", "evil-evil@evil-evil.AA"], "nonMatches": ["evil-evil@evil-evil.AAAAAAAA", "evil-evil@evil-evil.A", "evil-evil@evil-ev_il.AA", "evil-evil@evil-ev il.AA", "evil-evil@evil- .AA", "evil-evil@evil-_.AA", "evil-evil@evil-.AA", "evil-evil@evil--evil.AA", "evil-evil@ev_il-evil.AA", "evil-evil@ev il-evil.AA", "evil-evil@ -evil.AA", "evil-evil@_-evil.AA", "evil-evil@-evil.AA", "evil-ev_il@evil-evil.AA", "evil-ev il@evil-evil.AA", "evil- @evil-evil.AA", "evil-_@evil-evil.AA", "evil-@evil-evil.AA", "evil--evil@evil-evil.AA", "ev_il-evil@evil-evil.AA", "ev il-evil@evil-evil.AA", " -evil@evil-evil.AA", "_-evil@evil-evil.AA", "-evil@evil-evil.AA"]}, {"regex": "^(http\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,7}(?:\\/[\\w\\-]+)*\\.(?:jpg|jpeg|gif|png))$", "exceptionStackTrace": null, "matches": ["http://evil.AA/evil/evil.jpg", "http://evil.AA/-.jpg", "http://evil.AA/eVil.jpg", "http://evil.AA/EVIL.jpg", "http://evil.AA/ev_il.jpg", "http://evil.AA/ev4il.jpg", "http://evil.AA/e.jpg", "http://evil.AA/6.jpg", "http://evil.AA/_.jpg", "http://evil.AAAAAAA/evil.jpg", "http://evil.aA/evil.jpg", "http://..AA/evil.jpg", "http://-.AA/evil.jpg", "http://eVil.AA/evil.jpg", "http://EVIL.AA/evil.jpg", "http://ev4il.AA/evil.jpg", "http://e.AA/evil.jpg", "http://6.AA/evil.jpg", "http://evil.AA.png", "http://evil.AA.gif", "http://evil.AA.jpeg", "http://evil.AA.jpg", "http://evil.AA/evil.png", "http://evil.AA/evil.gif", "http://evil.AA/evil.jpeg", "http://evil.AA/evil.jpg"], "nonMatches": ["http://evil.AA/:.jpg", "http://evil.AA//.jpg", "http://evil.AA/..jpg", "http://evil.AA/ev il.jpg", "http://evil.AA/ .jpg", "http://evil.AA/.jpg", "http://evil.AAAAAAAA/evil.jpg", "http://evil.A/evil.jpg", "http://:.AA/evil.jpg", "http:///.AA/evil.jpg", "http://ev_il.AA/evil.jpg", "http://ev il.AA/evil.jpg", "http:// .AA/evil.jpg", "http://_.AA/evil.jpg", "http://.AA/evil.jpg"]}, {"regex": "^((?:\\?[a-zA-Z0-9_]+\\=[a-zA-Z0-9_]+)?(?:\\&[a-zA-Z0-9_]+\\=[a-zA-Z0-9_]+)*)$", "exceptionStackTrace": null, "matches": ["?evil=evil&evil=evil&evil=evil", "?evil=evil", "?evil=evil&evil=eVil", "?evil=evil&evil=EVIL", "?evil=evil&evil=ev_il", "?evil=evil&evil=ev4il", "?evil=evil&evil=e", "?evil=evil&evil=6", "?evil=evil&evil=_", "?evil=evil&eVil=evil", "?evil=evil&EVIL=evil", "?evil=evil&ev_il=evil", "?evil=evil&ev4il=evil", "?evil=evil&e=evil", "?evil=evil&6=evil", "?evil=evil&_=evil", "&evil=evil", "?evil=eVil&evil=evil", "?evil=EVIL&evil=evil", "?evil=ev_il&evil=evil", "?evil=ev4il&evil=evil", "?evil=e&evil=evil", "?evil=6&evil=evil", "?evil=_&evil=evil", "?eVil=evil&evil=evil", "?EVIL=evil&evil=evil", "?ev_il=evil&evil=evil", "?ev4il=evil&evil=evil", "?e=evil&evil=evil", "?6=evil&evil=evil", "?_=evil&evil=evil", "", "?evil=evil&evil=evil"], "nonMatches": ["?evil=evil&evil=?", "?evil=evil&evil==", "?evil=evil&evil=&", "?evil=evil&evil=ev il", "?evil=evil&evil= ", "?evil=evil&evil=", "?evil=evil&?=evil", "?evil=evil&==evil", "?evil=evil&&=evil", "?evil=evil&ev il=evil", "?evil=evil& =evil", "?evil=evil&=evil", "?evil=evil?evil=evil&evil=evil", "?evil=?&evil=evil", "?evil==&evil=evil", "?evil=&&evil=evil", "?evil=ev il&evil=evil", "?evil= &evil=evil", "?evil=&evil=evil", "??=evil&evil=evil", "?==evil&evil=evil", "?&=evil&evil=evil", "?ev il=evil&evil=evil", "? =evil&evil=evil", "?=evil&evil=evil"]}, {"regex": "^((?:\\/[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*(?:\\-[a-zA-Z0-9]+)*)+)$", "exceptionStackTrace": null, "matches": ["/evil_evil-evil/evil_evil-evil", "/evil_evil-evil-evil", "/evil_evil", "/evil_evil-eVil", "/evil_evil-EVIL", "/evil_evil-ev4il", "/evil_evil-e", "/evil_evil-6", "/evil_evil_evil-evil", "/evil-evil", "/evil_eVil-evil", "/evil_EVIL-evil", "/evil_ev_il-evil", "/evil_ev4il-evil", "/evil_e-evil", "/evil_6-evil", "/eVil_evil-evil", "/EVIL_evil-evil", "/ev_il_evil-evil", "/ev4il_evil-evil", "/e_evil-evil", "/6_evil-evil", "/evil", "/evil_evil-evil"], "nonMatches": ["", "/evil_evil-ev_il", "/evil_evil-ev il", "/evil_evil- ", "/evil_evil-_", "/evil_evil-", "/evil_ev il-evil", "/evil_ -evil", "/evil__-evil", "/evil_-evil", "/ev il_evil-evil", "/ _evil-evil", "/__evil-evil", "/_evil-evil"]}, {"regex": "^((?>[a-zA-Z\\d!#$%&&#39;*+\\-/=?^_`{|}~]+\\x20*|&quot;((?=[\\x01-\\x7f])[^&quot;\\\\]|\\\\[\\x01-\\x7f])*&quot;\\x20*)*(?<angle><))?((?!\\.)(?>\\.?[a-zA-Z\\d!#$%&&#39;*+\\-/=?^_`{|}~]+)+|&quot;((?=[\\x01-\\x7f])[^&quot;\\\\]|\\\\[\\x01-\\x7f])*&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?<!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?<!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)>)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?>"}, "matches": []}, {"regex": "rtjhrtu", "exceptionStackTrace": null, "matches": ["rtjhrtu"], "nonMatches": []}, {"regex": "^(\\d{3}-\\d{3}-\\d{4})*$", "exceptionStackTrace": null, "matches": ["000-000-0000000-000-0000", "", "000-000-0000"], "nonMatches": ["000-000-00000", "000-000-000", "000-0000-0000", "000-00-0000", "0000-000-0000", "00-000-0000"]}, {"regex": "^(\\d{2}-\\d{2})*$", "exceptionStackTrace": null, "matches": ["00-0000-00", "", "00-00"], "nonMatches": ["00-000", "00-0", "000-00", "0-00"]}, {"regex": "^\\d+$", "exceptionStackTrace": null, "matches": ["00", "0"], "nonMatches": [""]}, {"regex": "\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}", "exceptionStackTrace": null, "matches": ["{00000000-0000-0000-0000-a00000000000}", "{00000000-0000-0000-0000-A00000000000}", "{00000000-0000-0000-a000-000000000000}", "{00000000-0000-0000-A000-000000000000}", "{00000000-0000-a000-0000-000000000000}", "{00000000-0000-A000-0000-000000000000}", "{00000000-a000-0000-0000-000000000000}", "{00000000-A000-0000-0000-000000000000}", "{a0000000-0000-0000-0000-000000000000}", "{A0000000-0000-0000-0000-000000000000}", "{00000000-0000-0000-0000-000000000000}"], "nonMatches": ["{00000000-0000-0000-0000-0000000000000}", "{00000000-0000-0000-0000-00000000000}", "{00000000-0000-0000-0000-g00000000000}", "{00000000-0000-0000-0000-G00000000000}", "{00000000-0000-0000-00000-000000000000}", "{00000000-0000-0000-000-000000000000}", "{00000000-0000-0000-g000-000000000000}", "{00000000-0000-0000-G000-000000000000}", "{00000000-0000-00000-0000-000000000000}", "{00000000-0000-000-0000-000000000000}", "{00000000-0000-g000-0000-000000000000}", "{00000000-0000-G000-0000-000000000000}", "{00000000-00000-0000-0000-000000000000}", "{00000000-000-0000-0000-000000000000}", "{00000000-g000-0000-0000-000000000000}", "{00000000-G000-0000-0000-000000000000}", "{000000000-0000-0000-0000-000000000000}", "{0000000-0000-0000-0000-000000000000}", "{g0000000-0000-0000-0000-000000000000}", "{G0000000-0000-0000-0000-000000000000}"]}, {"regex": "^(([0]?[0-5][0-9]|[0-9]):([0-5][0-9]))$", "exceptionStackTrace": null, "matches": ["00:00", "0:00", "000:00"], "nonMatches": ["000:60", "060:00", "0000:00"]}, {"regex": "^\\(?082|083|084|072\\)?[\\s-]?[\\d]{3}[\\s-]?[\\d]{4}$", "exceptionStackTrace": null, "matches": ["072)-0000000", "072)-000 0000", "072)000-0000", "072) 000-0000", "072-000-0000", "0720000000", "082", "072)-000-0000", "084", "083", "(082"], "nonMatches": ["072)-000-00000", "072)-000-000", "072)-000--0000", "072)-0000-0000", "072)-00-0000", "072)--000-0000", "072))-000-0000", "((082"]}, {"regex": "^((AL)|(AK)|(AS)|(AZ)|(AR)|(CA)|(CO)|(CT)|(DE)|(DC)|(FM)|(FL)|(GA)|(GU)|(HI)|(ID)|(IL)|(IN)|(IA)|(KS)|(KY)|(LA)|(ME)|(MH)|(MD)|(MA)|(MI)|(MN)|(MS)|(MO)|(MT)|(NE)|(NV)|(NH)|(NJ)|(NM)|(NY)|(NC)|(ND)|(MP)|(OH)|(OK)|(OR)|(PW)|(PA)|(PR)|(RI)|(SC)|(SD)|(TN)|(TX)|(UT)|(VT)|(VI)|(VA)|(WA)|(WV)|(WI)|(WY))$", "exceptionStackTrace": null, "matches": ["WY", "WI", "WV", "WA", "VA", "VI", "VT", "UT", "TX", "TN", "SD", "SC", "RI", "PR", "PA", "PW", "OR", "OK", "OH", "MP", "ND", "NC", "NY", "NM", "NJ", "NH", "NV", "NE", "MT", "MO", "MS", "MN", "MI", "MA", "MD", "MH", "ME", "LA", "KY", "KS", "IA", "IN", "IL", "ID", "HI", "GU", "GA", "FL", "FM", "DC", "DE", "CT", "CO", "CA", "AR", "AZ", "AS", "AK", "AL"], "nonMatches": []}, {"regex": "^([\\(]{1}[0-9]{3}[\\)]{1}[ ]{1}[0-9]{3}[\\-]{1}[0-9]{4})$", "exceptionStackTrace": null, "matches": ["(000) 000-0000"], "nonMatches": ["(000) 000-00000", "(000) 000-000", "(000) 000--0000", "(000) 0000000", "(000) 0000-0000", "(000) 00-0000", "(000)  000-0000", "(000)000-0000", "(000)) 000-0000", "(000 000-0000", "(0000) 000-0000", "(00) 000-0000", "((000) 000-0000", "000) 000-0000"]}, {"regex": "^100(\\.0{0,2})? *%?$|^\\d{1,2}(\\.\\d{1,2})? *%?$", "exceptionStackTrace": null, "matches": ["0.0 ", "0.0  %", "0.0%", "0 %", "0.00 %", "00.0 %", "100.0 ", "100.0  %", "100.0%", "100 %", "100.00 %", "100. %", "0", "100", "0.0 %", "100.0 %"], "nonMatches": ["0.0 %%", "0.0.0 %", "0.000 %", "0. %", "000.0 %", ".0 %", "100.0 %%", "100.0.0 %", "100.000 %"]}, {"regex": "^[+-]? *100(\\.0{0,2})? *%?$|^[+-]? *\\d{1,2}(\\.\\d{1,2})? *%?$", "exceptionStackTrace": null, "matches": ["- 0.0 ", "- 0.0  %", "- 0.0%", "- 0 %", "- 0.00 %", "- 00.0 %", "-  0.0 %", "-0.0 %", " 0.0 %", "+ 0.0 %", "- 100.0 ", "- 100.0  %", "- 100.0%", "- 100 %", "- 100.00 %", "- 100. %", "-  100.0 %", "-100.0 %", " 100.0 %", "+ 100.0 %", "0", "100", "- 0.0 %", "- 100.0 %"], "nonMatches": ["- 0.0 %%", "- 0.0.0 %", "- 0.000 %", "- 0. %", "- 000.0 %", "- .0 %", "-- 0.0 %", "- 100.0 %%", "- 100.0.0 %", "- 100.000 %", "-- 100.0 %"]}, {"regex": "^[+-]? *(\\$)? *((\\d+)|(\\d{1,3})(\\,\\d{3})*)(\\.\\d{0,2})?$", "exceptionStackTrace": null, "matches": ["- $ 0,000,000.0", "- $ 000,000.0", "- $ 0", "- $ 0.00", "- $ 0.", "- $ 00.0", "- $  0.0", "- $0.0", "-  0.0", "-  $ 0.0", "-$ 0.0", " $ 0.0", "+ $ 0.0", "0", "- $ 0,000.0", "- $ 0.0"], "nonMatches": ["- $ 0,0000.0", "- $ 0,00.0", "- $ 0000,000.0", "- $ ,000.0", "- $ 0.0.0", "- $ 0.000", "- $ .0", "- $$ 0.0", "-- $ 0.0"]}, {"regex": "^([0-9]{5})([\\-]{1}[0-9]{4})?$", "exceptionStackTrace": null, "matches": ["00000", "00000-0000"], "nonMatches": ["00000-0000-0000", "00000-00000", "00000-000", "00000--0000", "000000000", "000000-0000", "0000-0000"]}, {"regex": "^([4]{1})([0-9]{12,15})$", "exceptionStackTrace": null, "matches": ["4000000000000000", "44000000000000", "4000000000000"], "nonMatches": ["40000000000000000", "400000000000", "000000000000"]}, {"regex": "^([51|52|53|54|55]{2})([0-9]{14})$", "exceptionStackTrace": null, "matches": ["|500000000000000", "4500000000000000", "3500000000000000", "2500000000000000", "1500000000000000", "5500000000000000"], "nonMatches": ["55000000000000000", "550000000000000", "55500000000000000", "500000000000000", "0500000000000000"]}, {"regex": "^([34|37]{2})([0-9]{13})$", "exceptionStackTrace": null, "matches": ["|70000000000000", "470000000000000", "370000000000000", "770000000000000"], "nonMatches": ["7700000000000000", "77000000000000", "7770000000000000", "70000000000000", "070000000000000"]}, {"regex": "^([6011]{4})([0-9]{12})$", "exceptionStackTrace": null, "matches": ["6111000000000000", "0111000000000000", "1111000000000000"], "nonMatches": ["11110000000000000", "111100000000000", "11111000000000000", "111000000000000", "2111000000000000"]}, {"regex": "^([30|36|38]{2})([0-9]{12})$", "exceptionStackTrace": null, "matches": ["|8000000000000", "68000000000000", "38000000000000", "08000000000000", "88000000000000"], "nonMatches": ["880000000000000", "8800000000000", "888000000000000", "8000000000000", "18000000000000"]}, {"regex": "5", "exceptionStackTrace": null, "matches": ["5"], "nonMatches": []}, {"regex": "(?<Date>(?<Year>\\d{4})-(?<Month>\\d{2})-(?<Day>\\d{2}))(?:T(?<Time>(?<SimpleTime>(?<Hour>\\d{2}):(?<Minute>\\d{2})(?::(?<Second>\\d{2}))?)?(?:\\.(?<FractionalSecond>\\d{1,7}))?(?<Offset>-\\d{2}\\:\\d{2})?))?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<D"}, "matches": []}, {"regex": "^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["0:00", "20:00", "00:00"], "nonMatches": ["24:00", "00:60", "000:00"]}, {"regex": "^([3]{1}[0-1]{1}|[1-1]?[0-9]{1})-([0-1]?[0-2]{1}|[0-9]{1})-[0-9]{4}([\\s]+([2]{1}[0-3]{1}|[0-1]?[0-9]{1})[:]{1}([0-5]?[0-9]{1})([:]{1}([0-5]?[0-9]{1}))?)?$", "exceptionStackTrace": null, "matches": ["1-00-0000 20:00:00", "30-00-0000", "30-00-0000 20:00", "30-00-0000 20:00:0", "30-00-0000 20:0:00", "30-00-0000 2:00:00", "30-00-0000 0:00:00", "30-00-0000  20:00:00", "3-00-0000 20:00:00", "0-00-0000 20:00:00", "0-0-0000", "30-0-0000", "10-00-0000 20:00:00", "30-0-0000 20:00:00", "30-00-0000 00:00:00", "30-00-0000 20:00:00"], "nonMatches": ["100-00-0000 20:00:00", "110-00-0000 20:00:00", "00-00-0000 20:00:00", "30--0000 20:00:00", "30-00-0000 000:00:00", "30-00-0000 20:00:00 20:00:00", "30-00-0000 20:00:00:00", "30-00-0000 20:00:000", "30-00-0000 20:00:60", "30-00-0000 20:00::00", "30-00-0000 20:0000", "30-00-0000 20:000:00", "30-00-0000 20:60:00", "30-00-0000 20::00:00", "30-00-0000 2000:00", "30-00-0000 200:00:00", "30-00-0000 24:00:00", "30-00-0000 220:00:00", "30-00-000020:00:00", "30-00-00000 20:00:00", "30-00-000 20:00:00", "30-03-0000 20:00:00", "30-000-0000 20:00:00", "30-20-0000 20:00:00", "300-00-0000 20:00:00", "32-00-0000 20:00:00", "330-00-0000 20:00:00"]}, {"regex": "(\\[([^/].*?)(=(.+?))?\\](.*?)\\[/\\2\\]|\\[([^/].*?)(=(.+?))?\\])", "exceptionStackTrace": null, "matches": ["[aevil=evil=evil]", "[aevil]", "[aevil=]]", "[aevil=[]", "[aevil==]", "[aevil=/]", "[aevil=eVil]", "[aevil=EVIL]", "[aevil=ev_il]", "[aevil=ev il]", "[aevil=ev4il]", "[aevil=e]", "[aevil= ]", "[aevil=6]", "[aevil=_]", "[aevil=]", "[a]=evil]", "[a[=evil]", "[a==evil]", "[a/=evil]", "[aeVil=evil]", "[aEVIL=evil]", "[aev_il=evil]", "[aev il=evil]", "[aev4il=evil]", "[ae=evil]", "[a =evil]", "[a6=evil]", "[a_=evil]", "[a=evil]", "[]evil=evil]", "[[evil=evil]", "[Aevil=evil]", "[=evil=evil]", "[0evil=evil]", "[ evil=evil]", "[aevil=evil]][/aevil]", "[aevil=evil][[/aevil]", "[aevil=evil]=[/aevil]", "[aevil=evil]/[/aevil]", "[aevil=evil]eVil[/aevil]", "[aevil=evil]EVIL[/aevil]", "[aevil=evil]ev_il[/aevil]", "[aevil=evil]ev il[/aevil]", "[aevil=evil]ev4il[/aevil]", "[aevil=evil]e[/aevil]", "[aevil=evil] [/aevil]", "[aevil=evil]6[/aevil]", "[aevil=evil]_[/aevil]", "[aevil=evil][/aevil]", "[aevil=evil=evil]evil[/aevil]", "[aevil]evil[/aevil]", "[aevil=]]evil[/aevil]", "[aevil=[]evil[/aevil]", "[aevil==]evil[/aevil]", "[aevil=/]evil[/aevil]", "[aevil=eVil]evil[/aevil]", "[aevil=EVIL]evil[/aevil]", "[aevil=ev_il]evil[/aevil]", "[aevil=ev il]evil[/aevil]", "[aevil=ev4il]evil[/aevil]", "[aevil=e]evil[/aevil]", "[aevil= ]evil[/aevil]", "[aevil=6]evil[/aevil]", "[aevil=_]evil[/aevil]", "[aevil=]evil[/aevil]", "[a]=evil]evil[/aevil]", "[a[=evil]evil[/aevil]", "[a==evil]evil[/aevil]", "[a/=evil]evil[/aevil]", "[aeVil=evil]evil[/aevil]", "[aEVIL=evil]evil[/aevil]", "[aev_il=evil]evil[/aevil]", "[aev il=evil]evil[/aevil]", "[aev4il=evil]evil[/aevil]", "[ae=evil]evil[/aevil]", "[a =evil]evil[/aevil]", "[a6=evil]evil[/aevil]", "[a_=evil]evil[/aevil]", "[a=evil]evil[/aevil]", "[]evil=evil]evil[/aevil]", "[[evil=evil]evil[/aevil]", "[Aevil=evil]evil[/aevil]", "[=evil=evil]evil[/aevil]", "[0evil=evil]evil[/aevil]", "[ evil=evil]evil[/aevil]", "[a]", "[a][/aevil]", "[aevil=evil]", "[aevil=evil]evil[/aevil]"], "nonMatches": ["[/evil=evil]", "[/evil=evil]evil[/aevil]"]}, {"regex": "&quot;(&quot;&quot;|[^&quot;])*&quot;", "exceptionStackTrace": null, "matches": ["&quot;A&quot;", "&quot;0&quot;", "&quot; &quot;", "&quot;&quot;&quot;&quot;&quot;&quot;", "&quot;&quot;", "&quot;a&quot;", "&quot;&quot;&quot;&quot;"], "nonMatches": ["&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;;&quot;", "&quot;&&quot;"]}, {"regex": "&quot;(\\\\.|[^&quot;])*&quot;", "exceptionStackTrace": null, "matches": ["&quot;\\&quot;", "&quot;A&quot;", "&quot;0&quot;", "&quot; &quot;", "&quot;\\a\\a&quot;", "&quot;\\\\&quot;", "&quot;\\A&quot;", "&quot;\\;&quot;", "&quot;\\0&quot;", "&quot;\\&&quot;", "&quot;\\ &quot;", "&quot;&quot;", "&quot;a&quot;", "&quot;\\a&quot;"], "nonMatches": ["&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;;&quot;", "&quot;&&quot;"]}, {"regex": "(?n:^(?=\\d)((?<day>31(?!(.0?[2469]|11))|30(?!.0?2)|29(?(.0?2)(?=.{3,4}(19|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(16|[2468][048]|[3579][26])00))|0?[1-9]|1\\d|2[0-8])(?<sep>[/.-])(?<month>0?[1-9]|1[012])\\2(?<year>(19|[2-9]\\d)\\d{2})(?:(?=\\x20\\d)\\x20|$))?(?<time>([01]\\d|2[0-3])(:[0-5]\\d){1})$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?n"}, "matches": []}, {"regex": "([a-zA-Z1-9]*)\\.(((a|A)(s|S)(p|P)(x|X))|((h|H)(T|t)(m|M)(l|L))|((h|H)(t|T)(M|m))|((a|A)(s|S)(p|P))|((t|T)(x|X)(T|x))|((m|M)(S|s)(P|p)(x|X))|((g|G)(i|I)(F|f))|((d|D)(o|O)(c|C)))", "exceptionStackTrace": null, "matches": ["11.aspx", "a.aspx", "A.aspx", "0.aspx", ".Doc", ".dOc", ".doC", ".doc", ".GiF", ".gIF", ".gif", ".giF", ".MSPx", ".msPx", ".mSpx", ".mSPX", ".mSPx", ".TxT", ".tXT", ".txx", ".txT", ".Asp", ".aSp", ".asP", ".asp", ".HtM", ".hTM", ".htm", ".htM", ".HTml", ".html", ".hTMl", ".hTmL", ".hTml", ".Aspx", ".aSpx", ".asPx", ".aspX", ".aspx", "1.Doc", "1.dOc", "1.doC", "1.doc", "1.GiF", "1.gIF", "1.gif", "1.giF", "1.MSPx", "1.msPx", "1.mSpx", "1.mSPX", "1.mSPx", "1.TxT", "1.tXT", "1.txx", "1.txT", "1.Asp", "1.aSp", "1.asP", "1.asp", "1.HtM", "1.hTM", "1.htm", "1.htM", "1.HTml", "1.html", "1.hTMl", "1.hTmL", "1.hTml", "1.Aspx", "1.aSpx", "1.asPx", "1.aspX", "1.aspx"], "nonMatches": []}, {"regex": "(?<Year>(19|20)[0-9][0-9])-(?<Month>0[1-9]|1[0-2])-(?<Day>0[1-9]|[12][0-9]|3[01])", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<Y"}, "matches": []}, {"regex": "Gmail account sign up", "exceptionStackTrace": null, "matches": ["Gmail account sign up"], "nonMatches": []}, {"regex": "Gmail account sign up", "exceptionStackTrace": null, "matches": ["Gmail account sign up"], "nonMatches": []}, {"regex": "Gmail account sign up", "exceptionStackTrace": null, "matches": ["Gmail account sign up"], "nonMatches": []}, {"regex": "Gmail account sign up", "exceptionStackTrace": null, "matches": ["Gmail account sign up"], "nonMatches": []}, {"regex": "Gmail account sign up", "exceptionStackTrace": null, "matches": ["Gmail account sign up"], "nonMatches": []}, {"regex": "^([0-9]*|\\d*\\.\\d{1}?\\d*)$", "exceptionStackTrace": null, "matches": ["0.000", "0.0", "00.00", ".00", "00", ".0", "", "0.00", "0"], "nonMatches": []}, {"regex": "^(((((0[1-9])|(1\\d)|(2[0-8]))/((0[1-9])|(1[0-2])))|((31/((0[13578])|(1[02])))|((29|30)/((0[1,3-9])|(1[0-2])))))/((20[0-9][0-9]))|((((0[1-9])|(1\\d)|(2[0-8]))/((0[1-9])|(1[0-2])))|((31/((0[13578])|(1[02])))|((29|30)/((0[1,3-9])|(1[0-2])))))/((19[0-9][0-9]))|(29/02/20(([02468][048])|([13579][26])))|(29/02/19(([02468][048])|([13579][26]))))$", "exceptionStackTrace": null, "matches": ["29/02/1992", "29/02/1976", "29/02/1956", "29/02/1936", "29/02/1916", "29/02/1984", "29/02/1980", "29/02/1968", "29/02/1948", "29/02/1928", "29/02/1908", "29/02/2092", "29/02/2076", "29/02/2056", "29/02/2036", "29/02/2016", "29/02/2084", "29/02/2080", "29/02/2068", "29/02/2048", "29/02/2028", "29/02/2008", "29/03/1900", "31/10/1900", "31/07/1900", "31/05/1900", "31/03/1900", "31/01/1900", "29/01/1900", "29/03/2000", "31/10/2000", "31/07/2000", "31/05/2000", "31/03/2000", "31/01/2000", "29/01/2000", "29/02/1996", "29/02/1988", "29/02/2096", "29/02/2088", "30/0,/1900", "29/10/1900", "29/0,/1900", "31/12/1900", "31/08/1900", "20/01/1900", "10/01/1900", "01/10/1900", "01/01/1900", "30/0,/2000", "29/10/2000", "29/0,/2000", "31/12/2000", "31/08/2000", "20/01/2000", "10/01/2000", "01/10/2000", "01/01/2000"], "nonMatches": ["29/02/1990", "29/02/1906", "29/02/1981", "29/02/1918", "29/02/2090", "29/02/2006", "29/02/2081", "29/02/2018", "29/13/1900", "29/00/1900", "31/11/1900", "31/00/1900", "01/13/1900", "01/00/1900", "00/01/1900", "29/13/2000", "29/00/2000", "31/11/2000", "31/00/2000", "01/13/2000", "01/00/2000", "00/01/2000"]}, {"regex": "^([A-Z]{3,20}\\s?[A-Z]{2}[0-9]{1,3}-([A-Z]{3}|[A-Z]{1}[0-9]{2}))|([A-Z]{1,20}\\s[A-Z]{1,2}[0-9]{1,4}-[A-Z]{1,3})|([\\d,\\w,\\s]{1,20}\\s[A-Z]{3}-[0-9]{1,3})|([A-Z]{1,20}\\s?[\\d,\\w,\\s]{1,20})$", "exceptionStackTrace": null, "matches": ["A ,,,,,,,,,,,,,,,,,,,,", "A ", "A a", "A _", "A A", "A 0", "A  ", "A  ,", "AAAAAAAAAAAAAAAAAAAAA ,", "AAAAAAAAAAAAAAAAAAAA ,", ", AAA-0000", ", AAA-000", ",,,,,,,,,,,,,,,,,,,,, AAA-0", ",,,,,,,,,,,,,,,,,,,, AAA-0", "a AAA-0", "_ AAA-0", "A AAA-0", "0 AAA-0", "  AAA-0", "A A0-AAAA", "A A0-AAA", "A A0000-A", "A AA0-A", "AAAAAAAAAAAAAAAAAAAAA A0-A", "AAAAAAAAAAAAAAAAAAAA A0-A", "AAA AA0-A000", "AAA AA0-A0", "AAA AA0-AA00", "AAA AA0-AAAA", "AAA AA0-AA", "AAA AA0000-AAA", "AAA AA000-AAA", "AAA AA-AAA", "AAA AAA0-AAA", "AAA A0-AAA", "AAA  AA0-AAA", "AAAAAAAAAAAAAAAAAAAAA AA0-AAA", "AAAAAAAAAAAAAAAAAAAA AA0-AAA", "AA AA0-AAA", "A,", "AAAAA0-A00", "AAAAA0-AAA", "A ,", ", AAA-0", "A A0-A", "AAA AA0-A00", "AAA AA0-AAA"], "nonMatches": ["A ,,,,,,,,,,,,,,,,,,,,,", " ,", ", AAA-", ", AAAA-0", ", AA-0", " AAA-0", "A A0-", "A A00000-A", "A A-A", "A AAA0-A", "A 0-A", " A0-A", "AAA AA0-00"]}, {"regex": "(\\d{5}-\\d{4}|\\d{5})", "exceptionStackTrace": null, "matches": ["000000", "00000-00000", "00000-000", "000000-0000", "00000", "00000-0000"], "nonMatches": ["0000", "0000-0000"]}, {"regex": "(((\\d{0,2})\\(\\d{3}\\))|(\\d{3}-))\\d{3}-\\d{4}\\s{0,}((([Ee][xX][Tt])|([Pp][Oo][Ss][Tt][Ee])):\\d{1,5}){0,1}", "exceptionStackTrace": null, "matches": ["0000-000-0000 eXt:0", "0(000)000-0000 posta:0", "0(000)000-0000 postE:0", "0(000)000-0000 postA:0", "0(000)000-0000 posae:0", "0(000)000-0000 posTe:0", "0(000)000-0000 posAe:0", "0(000)000-0000 poate:0", "0(000)000-0000 poSte:0", "0(000)000-0000 poAte:0", "0(000)000-0000 paste:0", "0(000)000-0000 pOste:0", "0(000)000-0000 pAste:0", "0(000)000-0000 aoste:0", "0(000)000-0000 Poste:0", "0(000)000-0000 Aoste:0", "0(000)000-0000 eXt:0eXt:0", "0(000)000-0000 ", "0(000)000-0000 eXt:000000", "0(000)000-0000 eXt:00000", "0(000)000-0000 eXt:", "0(000)000-0000 eXa:0", "0(000)000-0000 eXT:0", "0(000)000-0000 eXA:0", "0(000)000-0000 ext:0", "0(000)000-0000 eat:0", "0(000)000-0000 eAt:0", "0(000)000-0000 aXt:0", "0(000)000-0000 EXt:0", "0(000)000-0000 AXt:0", "0(000)000-0000  eXt:0", "0(000)000-0000eXt:0", "0(000)000-00000 eXt:0", "000(000)000-0000 eXt:0", "00(000)000-0000 eXt:0", "(000)000-0000 eXt:0", "000-000-0000", "(000)000-0000", "000-000-0000 eXt:0", "0(000)000-0000 poste:0", "0(000)000-0000 eXt:0"], "nonMatches": ["00-000-0000 eXt:0", "0(000)000-000 eXt:0", "0(000)0000-0000 eXt:0", "0(000)00-0000 eXt:0", "0(0000)000-0000 eXt:0", "0(00)000-0000 eXt:0"]}, {"regex": "(.*)-----(BEGIN|END)([^-]*)-----(.*)", "exceptionStackTrace": null, "matches": ["evil-----BEGINevil------", "evil-----BEGINevil-----eVil", "evil-----BEGINevil-----EVIL", "evil-----BEGINevil-----ev_il", "evil-----BEGINevil-----ev il", "evil-----BEGINevil-----ev4il", "evil-----BEGINevil-----e", "evil-----BEGINevil----- ", "evil-----BEGINevil-----6", "evil-----BEGINevil-----_", "evil-----BEGINevil-----", "evil-----BEGIN------evil", "evil-----BEGINeVil-----evil", "evil-----BEGINEVIL-----evil", "evil-----BEGINev_il-----evil", "evil-----BEGINev il-----evil", "evil-----BEGINev4il-----evil", "evil-----BEGINe-----evil", "evil-----BEGIN -----evil", "evil-----BEGIN6-----evil", "evil-----BEGIN_-----evil", "evil-----BEGIN-----evil", "------BEGINevil-----evil", "eVil-----BEGINevil-----evil", "EVIL-----BEGINevil-----evil", "ev_il-----BEGINevil-----evil", "ev il-----BEGINevil-----evil", "ev4il-----BEGINevil-----evil", "e-----BEGINevil-----evil", " -----BEGINevil-----evil", "6-----BEGINevil-----evil", "_-----BEGINevil-----evil", "-----BEGINevil-----evil", "-----END-----", "-----BEGIN-----", "evil-----ENDevil-----evil", "evil-----BEGINevil-----evil"], "nonMatches": []}, {"regex": "^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\\.[0-9][0-9])?$", "exceptionStackTrace": null, "matches": ["$00.00", "$0,000,000", "$0,000,000,000.00", "$0,000.00", "$000,000,000.00", "0,000,000.00", "0", "0,000", "$0.00", "$0,000,000.00"], "nonMatches": ["$.00", "$0,000,000.00.00", "$0,000,0000.00", "$0,000,00.00", "$0,0000,000.00", "$0,00,000.00", "$0000,000,000.00", "$,000,000.00", "$$0,000,000.00"]}, {"regex": "(^BFPO\\s*[0-9]{1,4})|(^GIR\\s*0AA$)|(ASCN|BBND|BIQQ|FIQQ|PCRN|SIQQ|STHL|TDCU\\s*1ZZ)|(^(A[BL]|B[ABDHLNRST]?|C[ABFHMORTVW]|D[ADEGHLNTY]|E[CHNX]?|F[KY]|G[LUY]?|H[ADGPRSUX]|I[GMPV]|JE|K[ATWY]|L[ADELNSU]?|M[EKL]?|N[EGNPRW]?|O[LX]|P[AEHLOR]|R[GHM|S[AEGK-PRSTWY]?|Y[ADFNQRSW|UB|W[A-DFGHJKMNR-W]?|[YO]|[ZE])[1-9][0-9]?[ABEHMNPRVWXY]?\\s*[0-9][ABD-HJLNP-UW-Z]{2}$)", "exceptionStackTrace": null, "matches": ["Z10Y 0NN", "Y10Y 0NN", "Y|10Y 0NN", "Y[10Y 0NN", "YW10Y 0NN", "YU10Y 0NN", "YT10Y 0NN", "YS10Y 0NN", "YR10Y 0NN", "YQ10Y 0NN", "YM10Y 0NN", "YK10Y 0NN", "YJ10Y 0NN", "YH10Y 0NN", "YG10Y 0NN", "YF10Y 0NN", "YD10Y 0NN", "YC10Y 0NN", "YB10Y 0NN", "YA10Y 0NN", "R10Y 0NN", "R|10Y 0NN", "R[10Y 0NN", "RW10Y 0NN", "RT10Y 0NN", "RS10Y 0NN", "RR10Y 0NN", "RM10Y 0NN", "RK10Y 0NN", "RH10Y 0NN", "RG10Y 0NN", "RE10Y 0NN", "RA10Y 0NN", "PO10Y 0NN", "PL10Y 0NN", "PH10Y 0NN", "PE10Y 0NN", "PA10Y 0NN", "OL10Y 0NN", "N10Y 0NN", "NR10Y 0NN", "NP10Y 0NN", "NN10Y 0NN", "NG10Y 0NN", "NE10Y 0NN", "M10Y 0NN", "MK10Y 0NN", "ME10Y 0NN", "L10Y 0NN", "LS10Y 0NN", "LN10Y 0NN", "LL10Y 0NN", "LE10Y 0NN", "LD10Y 0NN", "LA10Y 0NN", "KW10Y 0NN", "KT10Y 0NN", "KA10Y 0NN", "IP10Y 0NN", "IM10Y 0NN", "IG10Y 0NN", "HU10Y 0NN", "HS10Y 0NN", "HR10Y 0NN", "HP10Y 0NN", "HG10Y 0NN", "HD10Y 0NN", "HA10Y 0NN", "G10Y 0NN", "GU10Y 0NN", "GL10Y 0NN", "FK10Y 0NN", "EN10Y 0NN", "EH10Y 0NN", "EC10Y 0NN", "DT10Y 0NN", "DN10Y 0NN", "DL10Y 0NN", "DH10Y 0NN", "DG10Y 0NN", "DE10Y 0NN", "DD10Y 0NN", "DA10Y 0NN", "CV10Y 0NN", "CT10Y 0NN", "CR10Y 0NN", "CO10Y 0NN", "CM10Y 0NN", "CH10Y 0NN", "CF10Y 0NN", "CB10Y 0NN", "CA10Y 0NN", "B10Y 0NN", "BS10Y 0NN", "BR10Y 0NN", "BN10Y 0NN", "BL10Y 0NN", "BH10Y 0NN", "BD10Y 0NN", "BB10Y 0NN", "BA10Y 0NN", "AL10Y 0WN", "AL10Y 0PN", "AL10Y 0LN", "AL10Y 0JN", "AL10Y 0DN", "AL10Y 0BN", "AL10Y 0AN", "AL10Y  0NN", "AL10Y0NN", "AL10 0NN", "AL10X 0NN", "AL10W 0NN", "AL10V 0NN", "AL10R 0NN", "AL10P 0NN", "AL10N 0NN", "AL10M 0NN", "AL10H 0NN", "AL10E 0NN", "AL10B 0NN", "AL10A 0NN", "AL1Y 0NN", "AB10Y 0NN", "TDCU  1ZZ", "GIR  0AA", "BFPO 00000", "BFPO 0000", "BFPO  0", "O10NN", "Y10NN", "R10NN", "PR10NN", "OX10NN", "N10NN", "M10NN", "L10NN", "KY10NN", "JE10NN", "IV10NN", "HX10NN", "G10NN", "FY10NN", "E10NN", "DY10NN", "CW10NN", "B10NN", "AL10NN", "TDCU1ZZ", "GIR0AA", "BFPO0", "E10Y 0NN", "O10Y 0NN", "YN10Y 0NN", "RY10Y 0NN", "PR10Y 0NN", "OX10Y 0NN", "NW10Y 0NN", "ML10Y 0NN", "LU10Y 0NN", "KY10Y 0NN", "JE10Y 0NN", "IV10Y 0NN", "HX10Y 0NN", "GY10Y 0NN", "FY10Y 0NN", "EX10Y 0NN", "DY10Y 0NN", "CW10Y 0NN", "BT10Y 0NN", "AL10Y 0NN", "TDCU 1ZZ", "STHL", "SIQQ", "PCRN", "FIQQ", "BIQQ", "BBND", "ASCN", "GIR 0AA", "BFPO 0"], "nonMatches": ["A10Y 0NN", "YNN10Y 0NN", "YE10Y 0NN", "RYY10Y 0NN", "RB10Y 0NN", "PB10Y 0NN", "OA10Y 0NN", "NWW10Y 0NN", "NA10Y 0NN", "MLL10Y 0NN", "MA10Y 0NN", "LUU10Y 0NN", "LB10Y 0NN", "KB10Y 0NN", "IA10Y 0NN", "HB10Y 0NN", "GYY10Y 0NN", "GA10Y 0NN", "FA10Y 0NN", "EXX10Y 0NN", "EA10Y 0NN", "DB10Y 0NN", "CC10Y 0NN", "BTT10Y 0NN", "BC10Y 0NN", "AL10Y 0NNN", "AL10Y 0N", "AL10Y 0CN", "AL10YY 0NN", "AL10C 0NN", "AL100Y 0NN", "AL00Y 0NN", "AA10Y 0NN", "BFPO "]}, {"regex": "^[1-9]{1}[0-9]{3}$", "exceptionStackTrace": null, "matches": ["1000"], "nonMatches": ["10000", "100", "11000", "000", "0000"]}, {"regex": "^[1-9]{1}[0-9]{3}$", "exceptionStackTrace": null, "matches": ["1000"], "nonMatches": ["10000", "100", "11000", "000", "0000"]}, {"regex": "^([0][1-9]|[1-4[0-9]){2}[0-9]{3}$", "exceptionStackTrace": null, "matches": ["0[000", "010100", "01000", "01[000", "[[000", "0101000"], "nonMatches": ["01010000", "010101000", "0001000"]}, {"regex": "^[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^([A-Z]{2}[0-9]{3})|([A-Z]{2}[\\ ][0-9]{3})$", "exceptionStackTrace": null, "matches": ["AAA 000", "AA0000", "AA 000", "AA000"], "nonMatches": ["AA 0000", "AA 00", "A 000", "AA00", "AAA000", "A000"]}, {"regex": "^[A][Z](.?)[0-9]{4}$", "exceptionStackTrace": null, "matches": ["AZ_0000", "AZA0000", "AZ00000", "AZ 0000", "AZ0000", "AZa0000"], "nonMatches": ["AZa00000", "AZa000", "AZaa0000"]}, {"regex": "^([1][0-9]|[0-9])[1-9]{2}$", "exceptionStackTrace": null, "matches": ["011", "1011"], "nonMatches": ["10111", "101", "1001"]}, {"regex": "^[1-9][0-9]{3}$", "exceptionStackTrace": null, "matches": ["1000"], "nonMatches": ["10000", "100", "0000"]}, {"regex": "^[0-9]{6}$", "exceptionStackTrace": null, "matches": ["000000"], "nonMatches": ["0000000", "00000"]}, {"regex": "^([A-Z]{2}[\\s]|[A-Z]{2})[\\w]{2}$", "exceptionStackTrace": null, "matches": ["AA _a", "AA Aa", "AA 0a", "AAaa", "AA aa"], "nonMatches": ["AAAaa", "Aaa", "AA aaa", "AA a", "AAA aa", "A aa"]}, {"regex": "^[B|K|T|P][A-Z][0-9]{4}$", "exceptionStackTrace": null, "matches": ["|A0000", "TA0000", "KA0000", "BA0000", "PA0000"], "nonMatches": ["PA00000", "PA000", "AA0000"]}, {"regex": "^[0-9]{3}[-][0-9]{4}$", "exceptionStackTrace": null, "matches": ["000-0000"], "nonMatches": ["000-00000", "000-000", "0000-0000", "00-0000"]}, {"regex": "^[H][R][\\-][0-9]{5}$", "exceptionStackTrace": null, "matches": ["HR-00000"], "nonMatches": ["HR-000000", "HR-0000"]}, {"regex": "^[0-9]{4}$", "exceptionStackTrace": null, "matches": ["0000"], "nonMatches": ["00000", "000"]}, {"regex": "^[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^[1-9][0-9]{3}$", "exceptionStackTrace": null, "matches": ["1000"], "nonMatches": ["10000", "100", "0000"]}, {"regex": "^[F][O][\\s]?[0-9]{3}$", "exceptionStackTrace": null, "matches": ["FO000", "FO 000"], "nonMatches": ["FO 0000", "FO 00", "FO  000"]}, {"regex": "^[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^[9][7|8][1|0][0-9]{2}$", "exceptionStackTrace": null, "matches": ["98|00", "98100", "9|000", "97000", "98000"], "nonMatches": ["980000", "9800", "98200", "90000"]}, {"regex": "^[0-4][0-9]{2}[\\s][B][P][\\s][0-9]{3}$", "exceptionStackTrace": null, "matches": ["000 BP 000"], "nonMatches": ["000 BP 0000", "000 BP 00", "0000 BP 000", "00 BP 000", "500 BP 000"]}, {"regex": "^[1-9][0-9]{3}$", "exceptionStackTrace": null, "matches": ["1000"], "nonMatches": ["10000", "100", "0000"]}, {"regex": "^(((19|2\\d)\\d{2}\\/(((0?[13578]|1[02])\\/31)|((0?[1,3-9]|1[0-2])\\/(29|30))))|((((19|2\\d)(0[48]|[2468][048]|[13579][26])|(2[048]00)))\\/0?2\\/29)|((19|2\\d)\\d{2})\\/((0?[1-9])|(1[0-2]))\\/(0?[1-9]|1\\d|2[0-8]))$", "exceptionStackTrace": null, "matches": ["1900/01/1", "1900/1/01", "2400/02/29", "2000/02/29", "1992/02/29", "1976/02/29", "1956/02/29", "1936/02/29", "1916/02/29", "1984/02/29", "1980/02/29", "1968/02/29", "1948/02/29", "1928/02/29", "1904/02/29", "1900/03/29", "1900/01/29", "1900/10/31", "1900/07/31", "1900/05/31", "1900/03/31", "1900/01/31", "2000/1/1", "1900/10/1", "1900/1/20", "1900/1/10", "1900/1/1", "2800/2/29", "2008/2/29", "1996/2/29", "1988/2/29", "1908/2/29", "2000/8/31", "1900/,/30", "1900/,/29", "1900/8/31", "2000/01/01", "1900/10/01", "1900/01/20", "1900/01/10", "1900/01/01", "2800/02/29", "2008/02/29", "1996/02/29", "1988/02/29", "1908/02/29", "2000/08/31", "1900/10/29", "1900/0,/30", "1900/0,/29", "1900/12/31", "1900/08/31"], "nonMatches": ["1900/13/01", "1900/01/00", "1900/01/001", "1900/00/01", "1900/001/01", "19000/01/01", "190/01/01", "2100/02/29", "1990/02/29", "1906/02/29", "1981/02/29", "1908/002/29", "1900/02/29", "1900/13/29", "1900/00/29", "1900/00,/29", "1900/11/31", "1900/00/31", "1900/008/31", "19000/08/31", "190/08/31"]}, {"regex": "^(((1[6-9]|[2-9]\\d)\\d{2}\\/(((0?[13578]|1[02])\\/31)|((0?[1,3-9]|1[0-2])\\/(29|30))))|((((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))\\/0?2\\/29)|((1[6-9]|[2-9]\\d)\\d{2})\\/((0?[1-9])|(1[0-2]))\\/(0?[1-9]|1\\d|2[0-8]))$", "exceptionStackTrace": null, "matches": ["1600/01/1", "1600/1/01", "9200/02/29", "7600/02/29", "5600/02/29", "3600/02/29", "8400/02/29", "8000/02/29", "6800/02/29", "4800/02/29", "2800/02/29", "1692/02/29", "1676/02/29", "1656/02/29", "1636/02/29", "1616/02/29", "1684/02/29", "1680/02/29", "1668/02/29", "1648/02/29", "1628/02/29", "1604/02/29", "1600/03/29", "1600/01/29", "1600/10/31", "1600/07/31", "1600/05/31", "1600/03/31", "1600/01/31", "2000/1/1", "1600/10/1", "1600/1/20", "1600/1/10", "1600/1/1", "9600/2/29", "8800/2/29", "1600/2/29", "2008/2/29", "1696/2/29", "1688/2/29", "1608/2/29", "2000/8/31", "1600/,/30", "1600/,/29", "1600/8/31", "2000/01/01", "1600/10/01", "1600/01/20", "1600/01/10", "1600/01/01", "9600/02/29", "8800/02/29", "1600/02/29", "2008/02/29", "1696/02/29", "1688/02/29", "1608/02/29", "2000/08/31", "1600/10/29", "1600/0,/30", "1600/0,/29", "1600/12/31", "1600/08/31"], "nonMatches": ["0000/01/01", "1600/13/01", "1600/01/00", "1600/01/001", "1600/00/01", "1600/001/01", "16000/01/01", "160/01/01", "1000/01/01", "9000/02/29", "0600/02/29", "8100/02/29", "0800/02/29", "0008/02/29", "1690/02/29", "1606/02/29", "1681/02/29", "1608/002/29", "1008/02/29", "0000/08/31", "1600/13/29", "1600/00/29", "1600/00,/29", "1600/11/31", "1600/00/31", "1600/008/31", "16000/08/31", "160/08/31", "1000/08/31"]}, {"regex": "^(((1[6-9]|[2-9]\\d)\\d{2}([-|\\/])(((0?[13578]|1[02])([-|\\/])31)|((0?[1,3-9]|1[0-2])([-|\\/])(29|30))))|((((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))([-|\\/])0?2([-|\\/])29)|((1[6-9]|[2-9]\\d)\\d{2})([-|\\/])((0?[1-9])|(1[0-2]))([-|\\/])(0?[1-9]|1\\d|2[0-8]))$", "exceptionStackTrace": null, "matches": ["1600/01/1", "1600/01|01", "1600/01-01", "1600/1/01", "1600|01/01", "1600-01/01", "9200/02/29", "7600/02/29", "5600/02/29", "3600/02/29", "8400/02/29", "8000/02/29", "6800/02/29", "4800/02/29", "2800/02/29", "1692/02/29", "1676/02/29", "1656/02/29", "1636/02/29", "1616/02/29", "1684/02/29", "1680/02/29", "1668/02/29", "1648/02/29", "1628/02/29", "1608/02|29", "1608/02-29", "1608|02/29", "1608-02/29", "1604/02/29", "1600/0,|29", "1600/0,-29", "1600/03/29", "1600/01/29", "1600/10/31", "1600/08|31", "1600/08-31", "1600/07/31", "1600/05/31", "1600/03/31", "1600/01/31", "1600|08/31", "1600-08/31", "2000/1/1", "1600/10/1", "1600/1/20", "1600/1/10", "1600/1/1", "9600/2/29", "8800/2/29", "1600/2/29", "2008/2/29", "1696/2/29", "1688/2/29", "1608/2/29", "2000/8/31", "1600/,/30", "1600/,/29", "1600/8/31", "2000/01/01", "1600/10/01", "1600/01/20", "1600/01/10", "1600/01/01", "9600/02/29", "8800/02/29", "1600/02/29", "2008/02/29", "1696/02/29", "1688/02/29", "1608/02/29", "2000/08/31", "1600/10/29", "1600/0,/30", "1600/0,/29", "1600/12/31", "1600/08/31"], "nonMatches": ["0000/01/01", "1600/13/01", "1600/01/00", "1600/01/001", "1600/00/01", "1600/001/01", "16000/01/01", "160/01/01", "1000/01/01", "9000/02/29", "0600/02/29", "8100/02/29", "0800/02/29", "0008/02/29", "1690/02/29", "1606/02/29", "1681/02/29", "1608/002/29", "1008/02/29", "0000/08/31", "1600/13/29", "1600/00/29", "1600/00,/29", "1600/11/31", "1600/00/31", "1600/008/31", "16000/08/31", "160/08/31", "1000/08/31"]}, {"regex": "^(((1[6-9]|[2-9]\\d)\\d{2}([-|\\/])(((0?[13578]|1[02])([-|\\/])31)|((0?[1,3-9]|1[0-2])([-|\\/])(29|30))))|((((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))([-|\\/])0?2([-|\\/])29)|((1[6-9]|[2-9]\\d)\\d{2})([-|\\/])((0?[1-9])|(1[0-2]))([-|\\/])(0?[1-9]|1\\d|2[0-8]))(\\s)((([0]?[1-9]|1[0-2])(:|\\.)[0-5][0-9]((:|\\.)[0-5][0-9])?(\\s)?([aApP][mM]))|(([0]?[0-9]|1[0-9]|2[0-3])(:|\\.)[0-5][0-9]((:|\\.)[0-5][0-9])?))$", "exceptionStackTrace": null, "matches": ["1600/01/1 01:00:00 PM", "1600/01|01 01:00:00 PM", "1600/01-01 01:00:00 PM", "1600/1/01 01:00:00 PM", "1600|01/01 01:00:00 PM", "1600-01/01 01:00:00 PM", "9200/02/29 01:00:00 PM", "7600/02/29 01:00:00 PM", "5600/02/29 01:00:00 PM", "3600/02/29 01:00:00 PM", "8400/02/29 01:00:00 PM", "8000/02/29 01:00:00 PM", "6800/02/29 01:00:00 PM", "4800/02/29 01:00:00 PM", "2800/02/29 01:00:00 PM", "1692/02/29 01:00:00 PM", "1676/02/29 01:00:00 PM", "1656/02/29 01:00:00 PM", "1636/02/29 01:00:00 PM", "1616/02/29 01:00:00 PM", "1684/02/29 01:00:00 PM", "1680/02/29 01:00:00 PM", "1668/02/29 01:00:00 PM", "1648/02/29 01:00:00 PM", "1628/02/29 01:00:00 PM", "1608/02|29 01:00:00 PM", "1608/02-29 01:00:00 PM", "1608/2/29 01:00:00 PM", "1608|02/29 01:00:00 PM", "1608-02/29 01:00:00 PM", "1604/02/29 01:00:00 PM", "1600/0,|29 01:00:00 PM", "1600/0,-29 01:00:00 PM", "1600/03/29 01:00:00 PM", "1600/01/29 01:00:00 PM", "1600/,/29 01:00:00 PM", "1600/10/31 01:00:00 PM", "1600/08/31 00:00", "1600/08/31 0:00:00", "1600/08/31 01:00:00 Pm", "1600/08/31 01:00:00 pM", "1600/08/31 01:00:00 aM", "1600/08/31 01:00:00 AM", "1600/08/31 01:00:00PM", "1600/08/31 01:00 PM", "1600/08/31 1:00:00 PM", "1600/08|31 01:00:00 PM", "1600/08-31 01:00:00 PM", "1600/07/31 01:00:00 PM", "1600/05/31 01:00:00 PM", "1600/03/31 01:00:00 PM", "1600/01/31 01:00:00 PM", "1600/8/31 01:00:00 PM", "1600|08/31 01:00:00 PM", "1600-08/31 01:00:00 PM", "2000/1/1 1:00PM", "1600/10/1 1:00PM", "1600/1/20 1:00PM", "1600/1/10 1:00PM", "1600/1/1 1:00PM", "9600/2/29 1:00PM", "8800/2/29 1:00PM", "1600/2/29 1:00PM", "2008/2/29 1:00PM", "1696/2/29 1:00PM", "1688/2/29 1:00PM", "1608/2/29 1:00PM", "2000/8/31 1:00PM", "1600/10/29 1:00PM", "1600/,/30 1:00PM", "1600/,/29 1:00PM", "1600/12/31 1:00PM", "1600/8/31 20:00", "1600/8/31 10:00", "1600/8/31 0.00", "1600/8/31 0:00", "1600/8/31 10:00PM", "1600/8/31 1.00PM", "1600/8/31 1:00PM", "2000/01/01 01:00:00 PM", "1600/10/01 01:00:00 PM", "1600/01/20 01:00:00 PM", "1600/01/10 01:00:00 PM", "1600/01/01 01:00:00 PM", "9600/02/29 01:00:00 PM", "8800/02/29 01:00:00 PM", "1600/02/29 01:00:00 PM", "2008/02/29 01:00:00 PM", "1696/02/29 01:00:00 PM", "1688/02/29 01:00:00 PM", "1608/02/29 01:00:00 PM", "2000/08/31 01:00:00 PM", "1600/10/29 01:00:00 PM", "1600/0,/30 01:00:00 PM", "1600/0,/29 01:00:00 PM", "1600/12/31 01:00:00 PM", "1600/08/31 20:00:00", "1600/08/31 10:00:00", "1600/08/31 00.00:00", "1600/08/31 00:00.00", "1600/08/31 00:00:00", "1600/08/31 10:00:00 PM", "1600/08/31 01.00:00 PM", "1600/08/31 01:00.00 PM", "1600/08/31 01:00:00 PM"], "nonMatches": ["0000/01/01 01:00:00 PM", "1600/13/01 01:00:00 PM", "1600/01/00 01:00:00 PM", "1600/01/001 01:00:00 PM", "1600/00/01 01:00:00 PM", "1600/001/01 01:00:00 PM", "16000/01/01 01:00:00 PM", "160/01/01 01:00:00 PM", "1000/01/01 01:00:00 PM", "9000/02/29 01:00:00 PM", "0600/02/29 01:00:00 PM", "8100/02/29 01:00:00 PM", "0800/02/29 01:00:00 PM", "0008/02/29 01:00:00 PM", "1690/02/29 01:00:00 PM", "1606/02/29 01:00:00 PM", "1681/02/29 01:00:00 PM", "1608/002/29 01:00:00 PM", "1008/02/29 01:00:00 PM", "0000/08/31 01:00:00 PM", "1600/13/29 01:00:00 PM", "1600/00/29 01:00:00 PM", "1600/00,/29 01:00:00 PM", "1600/11/31 01:00:00 PM", "1600/08/31 24:00:00", "1600/08/31 00:00:00:00", "1600/08/31 00:00:60", "1600/08/31 00:60:00", "1600/08/31 000:00:00", "1600/08/31 13:00:00 PM", "1600/08/31 01:00:00 Pa", "1600/08/31 01:00:00 PA", "1600/08/31 01:00:00 bM", "1600/08/31 01:00:00 BM", "1600/08/31 01:00:00  PM", "1600/08/31 01:00:00:00 PM", "1600/08/31 01:00:60 PM", "1600/08/31 01:60:00 PM", "1600/08/31 00:00:00 PM", "1600/08/31 001:00:00 PM", "1600/00/31 01:00:00 PM", "1600/008/31 01:00:00 PM", "16000/08/31 01:00:00 PM", "160/08/31 01:00:00 PM", "1000/08/31 01:00:00 PM"]}, {"regex": "^([0]\\d|[1][0-2]\\/([0-2]\\d|[3][0-1])\\/([2][0]\\d{2})\\s([0-1]\\d|[2][0-3])\\:[0-5]\\d\\:[0-5]\\d)?\\s(AM|am|aM|Am|PM|pm|pM|Pm)", "exceptionStackTrace": null, "matches": [" Pm", " pM", " pm", " PM", " Am", " aM", " am", " AM", "10/30/2000 00:00:00 AM", "10/00/2000 20:00:00 AM", "10/00/2000 00:00:00 AM", "00 Pm", "00 pM", "00 pm", "00 PM", "00 Am", "00 aM", "00 am", "00 AM"], "nonMatches": ["10/32/2000 00:00:00 AM", "10/00/2000 24:00:00 AM", "10/00/2000 00:00:60 AM", "10/00/2000 00:60:00 AM", "10/00/20000 00:00:00 AM", "10/00/200 00:00:00 AM", "13/00/2000 00:00:00 AM", "0000 AM"]}, {"regex": "gbtrg", "exceptionStackTrace": null, "matches": ["gbtrg"], "nonMatches": []}, {"regex": "^\\d+(\\,\\d{1,2})?$", "exceptionStackTrace": null, "matches": ["0,00", "00,0", "0", "0,0"], "nonMatches": ["0,0,0", "0,000", "0,", ",0"]}, {"regex": "Happy", "exceptionStackTrace": null, "matches": ["Happy"], "nonMatches": []}, {"regex": "(at\\s)(?&lt;fullClassName&gt;.+)(\\.)(?&lt;methodName&gt;[^\\.]*)(\\()(?&lt;parameters&gt;[^\\)]*)(\\))((\\sin\\s)(?&lt;fileName&gt;.+)(:line )(?&lt;lineNumber&gt;[\\d]*))?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "((https?|ftp)\\:\\/\\/)?([a-z0-9+!*(),;?&=\\$_.-]+(\\:[a-z0-9+!*(),;?&=\\$_.-]+)?@)?(([a-z0-9-.]*)\\.([a-z]{2,6}))|(([0-9]{1,3}\\.){3}[0-9]{1,3})(\\:[0-9]{2,5})?(\\/([a-z0-9+\\$_-]\\.?)+)*\\/?(\\?[a-z+&\\$_.-][a-z0-9;:@&%=+\\/\\$_.-]*)?(#[a-z_.-][a-z0-9+\\$_.-]*)?", "exceptionStackTrace": null, "matches": ["0.0.0.0:00/-./?-evil#-evil#-evil", "0.0.0.0:00/-./?-evil", "0.0.0.0:00/-./?-evil#-@", "0.0.0.0:00/-./?-evil#-?", "0.0.0.0:00/-./?-evil#-=", "0.0.0.0:00/-./?-evil#-;", "0.0.0.0:00/-./?-evil#-:", "0.0.0.0:00/-./?-evil#-/", "0.0.0.0:00/-./?-evil#-.", "0.0.0.0:00/-./?-evil#--", "0.0.0.0:00/-./?-evil#-,", "0.0.0.0:00/-./?-evil#-+", "0.0.0.0:00/-./?-evil#-*", "0.0.0.0:00/-./?-evil#-)", "0.0.0.0:00/-./?-evil#-(", "0.0.0.0:00/-./?-evil#-&", "0.0.0.0:00/-./?-evil#-%", "0.0.0.0:00/-./?-evil#-$", "0.0.0.0:00/-./?-evil#-#", "0.0.0.0:00/-./?-evil#-!", "0.0.0.0:00/-./?-evil#-eVil", "0.0.0.0:00/-./?-evil#-EVIL", "0.0.0.0:00/-./?-evil#-ev_il", "0.0.0.0:00/-./?-evil#-ev il", "0.0.0.0:00/-./?-evil#-ev4il", "0.0.0.0:00/-./?-evil#-e", "0.0.0.0:00/-./?-evil#- ", "0.0.0.0:00/-./?-evil#-6", "0.0.0.0:00/-./?-evil#-_", "0.0.0.0:00/-./?-evil#-", "0.0.0.0:00/-./?-evil#aevil", "0.0.0.0:00/-./?-evil#_evil", "0.0.0.0:00/-./?-evil#.evil", "0.0.0.0:00/-./?-evil?-evil#-evil", "0.0.0.0:00/-./#-evil", "0.0.0.0:00/-./?-@#-evil", "0.0.0.0:00/-./?-?#-evil", "0.0.0.0:00/-./?-=#-evil", "0.0.0.0:00/-./?-;#-evil", "0.0.0.0:00/-./?-:#-evil", "0.0.0.0:00/-./?-/#-evil", "0.0.0.0:00/-./?-.#-evil", "0.0.0.0:00/-./?--#-evil", "0.0.0.0:00/-./?-,#-evil", "0.0.0.0:00/-./?-+#-evil", "0.0.0.0:00/-./?-*#-evil", "0.0.0.0:00/-./?-)#-evil", "0.0.0.0:00/-./?-(#-evil", "0.0.0.0:00/-./?-&#-evil", "0.0.0.0:00/-./?-%#-evil", "0.0.0.0:00/-./?-$#-evil", "0.0.0.0:00/-./?-##-evil", "0.0.0.0:00/-./?-!#-evil", "0.0.0.0:00/-./?-eVil#-evil", "0.0.0.0:00/-./?-EVIL#-evil", "0.0.0.0:00/-./?-ev_il#-evil", "0.0.0.0:00/-./?-ev il#-evil", "0.0.0.0:00/-./?-ev4il#-evil", "0.0.0.0:00/-./?-e#-evil", "0.0.0.0:00/-./?- #-evil", "0.0.0.0:00/-./?-6#-evil", "0.0.0.0:00/-./?-_#-evil", "0.0.0.0:00/-./?-#-evil", "0.0.0.0:00/-./?aevil#-evil", "0.0.0.0:00/-./?_evil#-evil", "0.0.0.0:00/-./?.evil#-evil", "0.0.0.0:00/-./?+evil#-evil", "0.0.0.0:00/-./?&evil#-evil", "0.0.0.0:00/-./?$evil#-evil", "0.0.0.0:00/-.//?-evil#-evil", "0.0.0.0:00/-.?-evil#-evil", "0.0.0.0:00/-./-./?-evil#-evil", "0.0.0.0:00/?-evil#-evil", "0.0.0.0:00/-.-./?-evil#-evil", "0.0.0.0:00//?-evil#-evil", "0.0.0.0:00/-../?-evil#-evil", "0.0.0.0:00/-/?-evil#-evil", "0.0.0.0:00/a./?-evil#-evil", "0.0.0.0:00/_./?-evil#-evil", "0.0.0.0:00/0./?-evil#-evil", "0.0.0.0:00/+./?-evil#-evil", "0.0.0.0:00/$./?-evil#-evil", "0.0.0.0:00:00/-./?-evil#-evil", "0.0.0.0/-./?-evil#-evil", "0.0.0.0:000000/-./?-evil#-evil", "0.0.0.0:00000/-./?-evil#-evil", "0.0.0.0:0/-./?-evil#-evil", "0.0.0.0000:00/-./?-evil#-evil", "0.0.0.000:00/-./?-evil#-evil", "0.0.0.0.0:00/-./?-evil#-evil", "0000.0.0.0:00/-./?-evil#-evil", "000.0.0.0:00/-./?-evil#-evil", "https://evil:evil@evil.aaaaaaa", "https://evil:evil@evil.aaaaaa", "https://evil:evil@@.aa", "https://evil:evil@?.aa", "https://evil:evil@=.aa", "https://evil:evil@;.aa", "https://evil:evil@:.aa", "https://evil:evil@/.aa", "https://evil:evil@..aa", "https://evil:evil@-.aa", "https://evil:evil@,.aa", "https://evil:evil@+.aa", "https://evil:evil@*.aa", "https://evil:evil@).aa", "https://evil:evil@(.aa", "https://evil:evil@&.aa", "https://evil:evil@%.aa", "https://evil:evil@$.aa", "https://evil:evil@#.aa", "https://evil:evil@!.aa", "https://evil:evil@eVil.aa", "https://evil:evil@EVIL.aa", "https://evil:evil@ev_il.aa", "https://evil:evil@ev il.aa", "https://evil:evil@ev4il.aa", "https://evil:evil@e.aa", "https://evil:evil@ .aa", "https://evil:evil@6.aa", "https://evil:evil@_.aa", "https://evil:evil@.aa", "https://evil:evil@evil:evil@evil.aa", "https://evil.aa", "https://evil:evil:evil@evil.aa", "https://evil@evil.aa", "https://evil:@@evil.aa", "https://evil:?@evil.aa", "https://evil:=@evil.aa", "https://evil:;@evil.aa", "https://evil::@evil.aa", "https://evil:/@evil.aa", "https://evil:.@evil.aa", "https://evil:-@evil.aa", "https://evil:,@evil.aa", "https://evil:+@evil.aa", "https://evil:*@evil.aa", "https://evil:)@evil.aa", "https://evil:(@evil.aa", "https://evil:&@evil.aa", "https://evil:%@evil.aa", "https://evil:$@evil.aa", "https://evil:#@evil.aa", "https://evil:!@evil.aa", "https://evil:eVil@evil.aa", "https://evil:EVIL@evil.aa", "https://evil:ev_il@evil.aa", "https://evil:ev il@evil.aa", "https://evil:ev4il@evil.aa", "https://evil:e@evil.aa", "https://evil: @evil.aa", "https://evil:6@evil.aa", "https://evil:_@evil.aa", "https://evil:@evil.aa", "https://@:evil@evil.aa", "https://?:evil@evil.aa", "https://=:evil@evil.aa", "https://;:evil@evil.aa", "https://::evil@evil.aa", "https:///:evil@evil.aa", "https://.:evil@evil.aa", "https://-:evil@evil.aa", "https://,:evil@evil.aa", "https://+:evil@evil.aa", "https://*:evil@evil.aa", "https://):evil@evil.aa", "https://(:evil@evil.aa", "https://&:evil@evil.aa", "https://%:evil@evil.aa", "https://$:evil@evil.aa", "https://#:evil@evil.aa", "https://!:evil@evil.aa", "https://eVil:evil@evil.aa", "https://EVIL:evil@evil.aa", "https://ev_il:evil@evil.aa", "https://ev il:evil@evil.aa", "https://ev4il:evil@evil.aa", "https://e:evil@evil.aa", "https:// :evil@evil.aa", "https://6:evil@evil.aa", "https://_:evil@evil.aa", "https://:evil@evil.aa", "https://https://evil:evil@evil.aa", "evil:evil@evil.aa", "httpss://evil:evil@evil.aa", "http://evil:evil@evil.aa", "0.0.0.0", ".aa", "0.0.0.0:00/-./?-evil#-evil", "ftp://evil:evil@evil.aa", "https://evil:evil@evil.aa"], "nonMatches": ["0.0.0.:00/-./?-evil#-evil", "0.0.0:00/-./?-evil#-evil", ".0.0.0:00/-./?-evil#-evil", "https://evil:evil@evil.a"]}, {"regex": "https://lumalifteye.com/instant-elixir-proactive-repair/", "exceptionStackTrace": null, "matches": ["https://lumalifteyeAcom/instant-elixir-proactive-repair/", "https://lumalifteye:com/instant-elixir-proactive-repair/", "https://lumalifteye0com/instant-elixir-proactive-repair/", "https://lumalifteye/com/instant-elixir-proactive-repair/", "https://lumalifteye-com/instant-elixir-proactive-repair/", "https://lumalifteye com/instant-elixir-proactive-repair/", "https://lumalifteyeacom/instant-elixir-proactive-repair/"], "nonMatches": []}, {"regex": "^(((([1]?\\d)?\\d|2[0-4]\\d|25[0-5])\\.){3}(([1]?\\d)?\\d|2[0-4]\\d|25[0-5]))|([\\da-fA-F]{1,4}(\\:[\\da-fA-F]{1,4}){7})|(([\\da-fA-F]{1,4}:){0,5}::([\\da-fA-F]{1,4}:){0,5}[\\da-fA-F]{1,4})$", "exceptionStackTrace": null, "matches": ["A:::A:AAAA", "A:::A:a", "A:::A:0", "A:::A:A:A:A:A:A", "A:::A", "A:::AAAA:A", "A::::A", "A:::a:A", "A:::0:A", "A:A:A:A:A:A:::A:A", "A:A:A:A:A:::A:A", "::A:A", "AAAAA:::A:A", "AAAA:::A:A", ":::A:A", "g:::A:A", "a:::A:A", "G:::A:A", "0:::A:A", "A:A:A:A:A:A:A:A:A", "A:AAAA:A:A:A:A:A:A", "A::A:A:A:A:A:A", "A:a:A:A:A:A:A:A", "A:0:A:A:A:A:A:A", "AAAAA:A:A:A:A:A:A:A", "AAAA:A:A:A:A:A:A:A", "a:A:A:A:A:A:A:A", "0:A:A:A:A:A:A:A", "250.200.200.100", "100.100.100.256", "100.100.100.10100", "100.100.100.0", "100.100.100.1100", "100.100.100.00", "100.100.100.100.100", "0.100.100.100", "00.100.100.100", "::A", "250.250.250.0", "200.250.250.0", "0.250.250.250", "0.250.250.200", "0.250.250.0", "A:::A:A", "A:A:A:A:A:A:A:A", "250.250.250.100", "200.200.200.100", "100.100.100.250", "100.100.100.200", "100.100.100.100"], "nonMatches": ["A:::A:AAAAA", "A:::A:", "A:::A:g", "A:::A:G", "A:::A:A:A:A:A:A:A", "A:::AAAAA:A", "A:::g:A", "A:::G:A", "A:A:A:A:A:A:A", "A:AAAAA:A:A:A:A:A:A", "A:g:A:A:A:A:A:A", "A:G:A:A:A:A:A:A", ":A:A:A:A:A:A:A", "g:A:A:A:A:A:A:A", "G:A:A:A:A:A:A:A", "256.250.250.100", "100.100.100", "10100.100.100.100", "1100.100.100.100"]}, {"regex": "^(3[0-5]|[012][0-9]|[1-9])\\d{9}$", "exceptionStackTrace": null, "matches": ["10000000000", "00000000000", "3000000000", "1000000000", "20000000000", "30000000000"], "nonMatches": ["0000000000", "300000000000", "36000000000"]}, {"regex": "[a-z]{3}[cphfatblj][a-z]\\d{4}[a-z]", "exceptionStackTrace": null, "matches": ["aaata0000a", "aaapa0000a", "aaala0000a", "aaaha0000a", "aaafa0000a", "aaaca0000a", "aaaba0000a", "aaaaa0000a", "aaaaja0000a", "aaaja0000a"], "nonMatches": ["aaaja00000a", "aaaja000a", "aaada0000a", "aaja0000a"]}, {"regex": "^(((\\\\\\\\([^\\\\/:\\*\\?&quot;\\|<>\\. ]+))|([a-zA-Z]:\\\\))(([^\\\\/:\\*\\?&quot;\\|<>\\. ]*)([\\\\]*))*)$", "exceptionStackTrace": null, "matches": ["a:\\evil\\", "\\\\evilevil\\evil\\", "\\\\evilevil\\\\", "\\\\evilevil", "\\\\evil\\\\", "\\\\evileVil\\", "\\\\evilEVIL\\", "\\\\evilev_il\\", "\\\\evilev4il\\", "\\\\evile\\", "\\\\evil6\\", "\\\\evil_\\", "\\\\eVilevil\\", "\\\\EVILevil\\", "\\\\ev_ilevil\\", "\\\\ev4ilevil\\", "\\\\eevil\\", "\\\\6evil\\", "\\\\_evil\\", "\\\\evil\\", "A:\\", "\\\\evil", "A:\\evil\\", "\\\\evilevil\\"], "nonMatches": ["\\\\evil|\\", "\\\\evil?\\", "\\\\evil>\\", "\\\\evil<\\", "\\\\evil;\\", "\\\\evil:\\", "\\\\evil/\\", "\\\\evil.\\", "\\\\evil*\\", "\\\\evil&\\", "\\\\evilev il\\", "\\\\evil \\", "\\\\|evil\\", "\\\\\\evil\\", "\\\\?evil\\", "\\\\>evil\\", "\\\\<evil\\", "\\\\;evil\\", "\\\\:evil\\", "\\\\/evil\\", "\\\\.evil\\", "\\\\*evil\\", "\\\\&evil\\", "\\\\ev ilevil\\", "\\\\ evil\\"]}, {"regex": "&lt;[^&gt;\\s]*\\bauthor\\b[^&gt;]*&gt;", "exceptionStackTrace": null, "matches": ["&lt;author&gt;"], "nonMatches": ["&lt;evilauthor;&gt;", "&lt;evilauthor&&gt;", "&lt;evilauthoreVil&gt;", "&lt;evilauthorEVIL&gt;", "&lt;evilauthorev_il&gt;", "&lt;evilauthorev il&gt;", "&lt;evilauthorev4il&gt;", "&lt;evilauthore&gt;", "&lt;evilauthor &gt;", "&lt;evilauthor6&gt;", "&lt;evilauthor_&gt;", "&lt;evilauthor&gt;", "&lt;;authorevil&gt;", "&lt;&authorevil&gt;", "&lt;eVilauthorevil&gt;", "&lt;EVILauthorevil&gt;", "&lt;ev_ilauthorevil&gt;", "&lt;ev ilauthorevil&gt;", "&lt;ev4ilauthorevil&gt;", "&lt;eauthorevil&gt;", "&lt; authorevil&gt;", "&lt;6authorevil&gt;", "&lt;_authorevil&gt;", "&lt;authorevil&gt;", "&lt;evilauthorevil&gt;"]}, {"regex": "^(?<assembly>[\\w\\.]+)(,\\s?Version=(?<version>\\d+\\.\\d+\\.\\d+\\.\\d+))?(,\\s?Culture=(?<culture>\\w+))?(,\\s?PublicKeyToken=(?<token>\\w+))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<a"}, "matches": []}, {"regex": "\\w+\\S?\\w+\\s?(@|\\W(at)\\W)\\s?\\w+\\s?(\\.|\\W(dot)\\W)\\s?\\w+\\.?\\w+", "exceptionStackTrace": null, "matches": ["evilaevil ;at@ evil . evil.evil", "evilaevil ;at. evil . evil.evil", "evilaevil ;at  evil . evil.evil", "evilaevil @at; evil . evil.evil", "evilaevil .at; evil . evil.evil", "evilaevil  at; evil . evil.evil", "evilaevil @ evil ;dot@ evil.evil", "evilaevil @ evil ;dot. evil.evil", "evilaevil @ evil ;dot  evil.evil", "evilaevil @ evil @dot; evil.evil", "evilaevil @ evil .dot; evil.evil", "evilaevil @ evil  dot; evil.evil", "evilaevil @ evil . evil.eVil", "evilaevil @ evil . evil.EVIL", "evilaevil @ evil . evil.ev_il", "evilaevil @ evil . evil.ev il", "evilaevil @ evil . evil.ev4il", "evilaevil @ evil . evil.e", "evilaevil @ evil . evil. ", "evilaevil @ evil . evil.6", "evilaevil @ evil . evil._", "evilaevil @ evil . evil.", "evilaevil @ evil . evil..evil", "evilaevil @ evil . evilevil", "evilaevil @ evil . eVil.evil", "evilaevil @ evil . EVIL.evil", "evilaevil @ evil . ev_il.evil", "evilaevil @ evil . ev il.evil", "evilaevil @ evil . ev4il.evil", "evilaevil @ evil . e.evil", "evilaevil @ evil . 6.evil", "evilaevil @ evil . _.evil", "evilaevil @ evil .evil.evil", "evilaevil @ evil. evil.evil", "evilaevil @ eVil . evil.evil", "evilaevil @ EVIL . evil.evil", "evilaevil @ ev_il . evil.evil", "evilaevil @ ev4il . evil.evil", "evilaevil @ e . evil.evil", "evilaevil @ 6 . evil.evil", "evilaevil @ _ . evil.evil", "evilaevil @evil . evil.evil", "evilaevil@ evil . evil.evil", "evilaeVil @ evil . evil.evil", "evilaEVIL @ evil . evil.evil", "evilaev_il @ evil . evil.evil", "evilaev il @ evil . evil.evil", "evilaev4il @ evil . evil.evil", "evilae @ evil . evil.evil", "evila6 @ evil . evil.evil", "evila_ @ evil . evil.evil", "evila @ evil . evil.evil", "evilaaevil @ evil . evil.evil", "evilevil @ evil . evil.evil", "evil_evil @ evil . evil.evil", "evilAevil @ evil . evil.evil", "evil@evil @ evil . evil.evil", "evil0evil @ evil . evil.evil", "evil.evil @ evil . evil.evil", "evil evil @ evil . evil.evil", "eVilaevil @ evil . evil.evil", "EVILaevil @ evil . evil.evil", "ev_ilaevil @ evil . evil.evil", "ev ilaevil @ evil . evil.evil", "ev4ilaevil @ evil . evil.evil", "eaevil @ evil . evil.evil", " aevil @ evil . evil.evil", "6aevil @ evil . evil.evil", "_aevil @ evil . evil.evil", "aevil @ evil . evil.evil", "evilevil;at;evil.evilevil", "evilevil@evil;dot;evilevil", "evilevil@evil.evilevil", "evilaevil ;at; evil . evil.evil", "evilaevil @ evil ;dot; evil.evil", "evilaevil @ evil . evil.evil"], "nonMatches": ["evilaevil ;ata evil . evil.evil", "evilaevil ;at_ evil . evil.evil", "evilaevil ;atA evil . evil.evil", "evilaevil ;at0 evil . evil.evil", "evilaevil aat; evil . evil.evil", "evilaevil _at; evil . evil.evil", "evilaevil Aat; evil . evil.evil", "evilaevil 0at; evil . evil.evil", "evilaevil @ evil ;dota evil.evil", "evilaevil @ evil ;dot_ evil.evil", "evilaevil @ evil ;dotA evil.evil", "evilaevil @ evil ;dot0 evil.evil", "evilaevil @ evil adot; evil.evil", "evilaevil @ evil _dot; evil.evil", "evilaevil @ evil Adot; evil.evil", "evilaevil @ evil 0dot; evil.evil", "evilaevil @ evil .  .evil", "evilaevil @ evil . .evil", "evilaevil @ evil .  evil.evil", "evilaevil @ evil  . evil.evil", "evilaevil @ ev il . evil.evil", "evilaevil @   . evil.evil", "evilaevil @  . evil.evil", "evilaevil @  evil . evil.evil", "evilaevil  @ evil . evil.evil", "evila  @ evil . evil.evil"]}, {"regex": "[+]?[\\x20]*(?<int>\\d+)?[-\\x20]*[\\(]?(?<area>[2-9]\\d{2})[\\)\\-\\x20]*(?<pbx>[0-9]{3})[-\\x20]*(?<num>[0-9]{4})", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<i"}, "matches": []}, {"regex": "(?:Provider=&quot;??(?<Provider>[^;\\n]+)&quot;??[;\\n&quot;]??|Data\\sSource=(?<DataSource>[^;\\n]+)[;\\n&quot;]??|Initial\\sCatalog=(?<InitialCatalog>[^;\\n]+)[;\\n&quot;]??|User\\sID=(?<UserID>[^;\\n]+)[;\\n&quot;]??|Password=&quot;??(?<Password>[^;\\n]+)&quot;??[;\\n&quot;]??|Integrated\\sSecurity=(?<IntegratedSecurity>[^;\\n]+)[;\\n]??|Connection\\sTimeOut=(?<ConnectionTimeOut>[^;\\n]+)[;\\n&quot;]??)+$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<P"}, "matches": []}, {"regex": "^\\d{2}\\s{1}(Jan|Feb|Mar|Apr|May|Jun|Jul|Apr|Sep|Oct|Nov|Dec)\\s{1}\\d{4}$", "exceptionStackTrace": null, "matches": ["00 Dec 0000", "00 Nov 0000", "00 Oct 0000", "00 Sep 0000", "00 Jul 0000", "00 Jun 0000", "00 May 0000", "00 Apr 0000", "00 Mar 0000", "00 Feb 0000", "00 Jan 0000"], "nonMatches": ["00 Jan 00000", "00 Jan 000", "00 Jan  0000", "00 Jan0000", "00  Jan 0000", "00Jan 0000", "000 Jan 0000", "0 Jan 0000"]}, {"regex": "(?<TAG>\\s*<(?<TAG_NAME>\\w*)\\s+(?<PARAMETERS>(?<PARAMETER>(?<PARAMETER_NAME>\\w*)(=[&quot;&#39;]?)(?<VALUE>[\\w\\W\\d]*?)[&quot;&#39;]?)+)\\s*/?>)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<T"}, "matches": []}, {"regex": "^(100([\\.\\,]0{1,2})?)|(\\d{1,2}[\\.\\,]\\d{1,2})|(\\d{0,2})$", "exceptionStackTrace": null, "matches": ["000", "00", "0,000", "0,00", "0,", "0.0", "000,0", "00,0", ",0", "100,0,0", "100,000", "100,00", "100,", "100.0", "", "100", "0", "0,0", "100,0"], "nonMatches": []}, {"regex": "^[-]?P(?!$)(?:\\d+Y)?(?:\\d+M)?(?:\\d+D)?(?:T(?!$)(?:\\d+H)?(?:\\d+M)?(?:\\d+(?:\\.\\d+)?S)?)?$", "exceptionStackTrace": null, "matches": ["-P0Y0M0D", "-P0Y0M0DT0H0M", "-P0Y0M0DT0H0M0S", "-P0Y0M0DT0H0M0.00S", "-P0Y0M0DT0H0M00.0S", "-P0Y0M0DT0H0.0S", "-P0Y0M0DT0H00M0.0S", "-P0Y0M0DT0M0.0S", "-P0Y0M0DT00H0M0.0S", "-P0Y0MT0H0M0.0S", "-P0Y0M00DT0H0M0.0S", "-P0Y0DT0H0M0.0S", "-P0Y00M0DT0H0M0.0S", "-P0M0DT0H0M0.0S", "-P00Y0M0DT0H0M0.0S", "P0Y0M0DT0H0M0.0S", "-P0Y0M0DT0H0M0.0S"], "nonMatches": ["-P0Y0M0DT0H0M0.0ST0H0M0.0S", "-P0Y0M0DT0H0M0.0S0.0S", "-P0Y0M0DT0H0M0.0.0S", "-P0Y0M0DT0H0M0.S", "-P0Y0M0DT0H0M.0S", "-P0Y0M0DT0H0M0M0.0S", "-P0Y0M0DT0HM0.0S", "-P0Y0M0DT0H0H0M0.0S", "-P0Y0M0DTH0M0.0S", "-P0Y0M0D0DT0H0M0.0S", "-P0Y0MDT0H0M0.0S", "-P0Y0M0M0DT0H0M0.0S", "-P0YM0DT0H0M0.0S", "-P0Y0Y0M0DT0H0M0.0S", "-PY0M0DT0H0M0.0S", "--P0Y0M0DT0H0M0.0S", "P"]}, {"regex": "^([1-9]|1[0-2]|0[1-9]){1}(:[0-5][0-9][ ][aApP][mM]){1}$", "exceptionStackTrace": null, "matches": ["1:00 Pm", "1:00 pM", "1:00 aM", "1:00 AM", "11:00 PM", "01:00 PM", "10:00 PM", "1:00 PM"], "nonMatches": ["00:00 PM", "13:00 PM", "1:00 PM:00 PM", "1", "1:00 Pa", "1:00 PA", "1:00 bM", "1:00 BM", "1:60 PM", ":00 PM", "0:00 PM"]}, {"regex": "(\\/\\*(\\s*|.*?)*\\*\\/)|(\\/\\/.*)", "exceptionStackTrace": null, "matches": ["///", "//*", "//eVil", "//EVIL", "//ev_il", "//ev il", "//ev4il", "//e", "// ", "//6", "//_", "/*/*/", "/***/", "/*eVil*/", "/*EVIL*/", "/*ev_il*/", "/*ev il*/", "/*ev4il*/", "/*e*/", "/*6*/", "/*_*/", "/*  */", "//", "/**/", "//evil", "/*evil*/", "/* */"], "nonMatches": []}, {"regex": "^(?=.*[0-9])(?=.*[a-zA-Z])(\\w|[~!$&+,:;=?\\[\\]@#_|<>{}()^%*\\.\\-\\+]){5,15}", "exceptionStackTrace": null, "matches": ["0aaaa"], "nonMatches": ["~++++", "}++++", "|++++", "{++++", "_++++", "^++++", "]++++", "[++++", "@++++", "?++++", ">++++", "=++++", "<++++", ";++++", ":++++", ".++++", "-++++", ",++++", "*++++", ")++++", "(++++", "&++++", "%++++", "$++++", "#++++", "!++++", "aaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaa", "aaaa", "_aaaa", "Aaaaa", "a++++", "+++++", "aaaaa"]}, {"regex": "^(?=.*[0-9])(?=.*[a-zA-Z])(\\w|[~!$&+,:;=?\\[\\]@#_|<>{}()^%*\\.\\-\\+]){5,15}", "exceptionStackTrace": null, "matches": ["0aaaa"], "nonMatches": ["~++++", "}++++", "|++++", "{++++", "_++++", "^++++", "]++++", "[++++", "@++++", "?++++", ">++++", "=++++", "<++++", ";++++", ":++++", ".++++", "-++++", ",++++", "*++++", ")++++", "(++++", "&++++", "%++++", "$++++", "#++++", "!++++", "aaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaa", "aaaa", "_aaaa", "Aaaaa", "a++++", "+++++", "aaaaa"]}, {"regex": "^[a-zA-Z]+[a-zA-Z0-9_-]*@([a-zA-Z0-9]+){1}(\\.[a-zA-Z0-9]+){1,2}", "exceptionStackTrace": null, "matches": ["evilevil@evil.evil.evil.evil", "evilevil@evil.evil.evil", "evilevil@evil.eVil", "evilevil@evil.EVIL", "evilevil@evil.ev_il", "evilevil@evil.ev il", "evilevil@evil.ev4il", "evilevil@evil.e", "evilevil@evil.6", "evilevil@evilevil.evil", "evilevil@eVil.evil", "evilevil@EVIL.evil", "evilevil@ev4il.evil", "evilevil@e.evil", "evilevil@6.evil", "evil-@evil.evil", "evileVil@evil.evil", "evilEVIL@evil.evil", "evilev_il@evil.evil", "evilev4il@evil.evil", "evile@evil.evil", "evil6@evil.evil", "evil_@evil.evil", "eVilevil@evil.evil", "EVILevil@evil.evil", "ev_ilevil@evil.evil", "ev4ilevil@evil.evil", "eevil@evil.evil", "evil@evil.evil", "evilevil@evil.evil"], "nonMatches": ["evilevil@evil", "evilevil@evil. ", "evilevil@evil._", "evilevil@evil.", "evilevil@ev_il.evil", "evilevil@ev il.evil", "evilevil@ .evil", "evilevil@_.evil", "evilevil@.evil", "evil@@evil.evil", "evil.@evil.evil", "evilev il@evil.evil", "evil @evil.evil", "ev ilevil@evil.evil", " evil@evil.evil", "6evil@evil.evil", "_evil@evil.evil"]}, {"regex": "\\s?\\b((?!\\b50\\b|\\b00\\b)\\w*)\\b\\s?", "exceptionStackTrace": null, "matches": [" evil  ", " evil", " eVil ", " EVIL ", " ev_il ", " ev il ", " ev4il ", " e ", " 6 ", " _ ", "  evil ", "evil ", " evil "], "nonMatches": ["   ", "  ", ""]}, {"regex": "vostro 3560 akku", "exceptionStackTrace": null, "matches": ["vostro 3560 akku"], "nonMatches": []}, {"regex": "Ersatz dell xps 13 Akku", "exceptionStackTrace": null, "matches": ["Ersatz dell xps 13 Akku"], "nonMatches": []}, {"regex": "4400mAh Ersatzakku f&#252;r hp compaq business notebook 6715b Laptop, hp compaq business notebook 6715b akku", "exceptionStackTrace": null, "matches": ["4400mAh Ersatzakku f&#252;r hp compaq business notebook 6715b Laptop, hp compaq business notebook 6715b akku"], "nonMatches": []}, {"regex": "4400mAh Ersatzakku f&#252;r samsung aa-pb2vc6b Laptop, samsung aa-pb2vc6b akku", "exceptionStackTrace": null, "matches": ["4400mAh Ersatzakku f&#252;r samsung aa-pb2vc6b Laptop, samsung aa-pb2vc6b akku"], "nonMatches": []}, {"regex": "\\({1}[0-9]{3}\\){1}\\-{1}[0-9]{3}\\-{1}[0-9]{4}", "exceptionStackTrace": null, "matches": ["(000)-000-00000", "((000)-000-0000", "(000)-000-0000"], "nonMatches": ["(000)-000-000", "(000)-000--0000", "(000)-0000000", "(000)-0000-0000", "(000)-00-0000", "(000)--000-0000", "(000)000-0000", "(000))-000-0000", "(000-000-0000", "(0000)-000-0000", "(00)-000-0000", "000)-000-0000"]}, {"regex": "^(?!000)(?!666)([0-8]\\d{2}) ([ -])? (?!00)\\d\\d ([ -])? (?!0000)\\d{4}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["000 - 00 - 00000", "000 - 00 - 000", "000 - 00 -- 0000", "000 - 00  0000", "000 - 00   0000", "000 -- 00 - 0000", "000  00 - 0000", "000   00 - 0000", "0000 - 00 - 0000", "00 - 00 - 0000", "900 - 00 - 0000", "000  00  0000", "000 - 00 - 0000"]}, {"regex": "http://www.captainmarketing.com/", "exceptionStackTrace": null, "matches": ["http://wwwacaptainmarketingAcom/", "http://wwwacaptainmarketing:com/", "http://wwwacaptainmarketing0com/", "http://wwwacaptainmarketing/com/", "http://wwwacaptainmarketing com/", "http://wwwAcaptainmarketingacom/", "http://www:captainmarketingacom/", "http://www0captainmarketingacom/", "http://www/captainmarketingacom/", "http://www captainmarketingacom/", "http://wwwacaptainmarketingacom/"], "nonMatches": []}, {"regex": "(([\\w-]+(?:\\.[\\w-]+)*)@(timbrasil.com.br))*", "exceptionStackTrace": null, "matches": ["evil.evil@timbrasilacomabrevil.evil@timbrasilacomabr", "evil.evil@timbrasilacomAbr", "evil.evil@timbrasilacom@br", "evil.evil@timbrasilacom0br", "evil.evil@timbrasilacom.br", "evil.evil@timbrasilacom-br", "evil.evil@timbrasilacom br", "evil.evil@timbrasilAcomabr", "evil.evil@timbrasil@comabr", "evil.evil@timbrasil0comabr", "evil.evil@timbrasil.comabr", "evil.evil@timbrasil-comabr", "evil.evil@timbrasil comabr", "evil.evil.evil@timbrasilacomabr", "evil@timbrasilacomabr", "evil.@@timbrasilacomabr", "evil..@timbrasilacomabr", "evil.-@timbrasilacomabr", "evil.eVil@timbrasilacomabr", "evil.EVIL@timbrasilacomabr", "evil.ev_il@timbrasilacomabr", "evil.ev il@timbrasilacomabr", "evil.ev4il@timbrasilacomabr", "evil.e@timbrasilacomabr", "evil. @timbrasilacomabr", "evil.6@timbrasilacomabr", "evil._@timbrasilacomabr", "evil.@timbrasilacomabr", "@.evil@timbrasilacomabr", "..evil@timbrasilacomabr", "-.evil@timbrasilacomabr", "eVil.evil@timbrasilacomabr", "EVIL.evil@timbrasilacomabr", "ev_il.evil@timbrasilacomabr", "ev il.evil@timbrasilacomabr", "ev4il.evil@timbrasilacomabr", "e.evil@timbrasilacomabr", " .evil@timbrasilacomabr", "6.evil@timbrasilacomabr", "_.evil@timbrasilacomabr", ".evil@timbrasilacomabr", "", "evil.evil@timbrasilacomabr"], "nonMatches": []}, {"regex": "^(01)[0-9]{8}", "exceptionStackTrace": null, "matches": ["01000000000", "0100000000"], "nonMatches": ["010000000"]}, {"regex": "^[\\w_.]{5,12}$", "exceptionStackTrace": null, "matches": ["............", "a....", "_....", "A....", "0....", "....."], "nonMatches": [".............", "...."]}, {"regex": "^([^\\s]){5,12}$", "exceptionStackTrace": null, "matches": ["aaaaaaaaaaaa", "_aaaa", "Aaaaa", "0aaaa", "aaaaa"], "nonMatches": ["aaaaaaaaaaaaa", "aaaa", " aaaa"]}, {"regex": "^[^<>`~!/@\\#}$%:;)(_^{&*=|&#39;+]+$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev il", "ev4il", "e", " ", "6", "evil"], "nonMatches": ["~", "}", "|", "{", "`", "^", "@", ">", "=", "<", ";", ":", "/", "+", "*", ")", "(", "&", "%", "$", "#", "!", "ev_il", "_", ""]}, {"regex": "/.*|/\\*[\\s\\S]*?\\*", "exceptionStackTrace": null, "matches": ["/*/*", "/***", "/*eVil*", "/*EVIL*", "/*ev_il*", "/*ev il*", "/*ev4il*", "/*e*", "/* *", "/*6*", "/*_*", "//", "/*", "/eVil", "/EVIL", "/ev_il", "/ev il", "/ev4il", "/e", "/ ", "/6", "/_", "/**", "/", "/*evil*", "/evil"], "nonMatches": []}, {"regex": "^(1)?(-|.)?(\\()?([0-9]{3})(\\))?(-|.)?([0-9]{3})(-|.)?([0-9]{4})", "exceptionStackTrace": null, "matches": ["1A(000)-000-0000", "10(000)-000-0000", "1)(000)-000-0000", "1((000)-000-0000", "1 (000)-000-0000", "1-(000)A000-0000", "1-(000)0000-0000", "1-(000))000-0000", "1-(000)(000-0000", "1-(000) 000-0000", "1-(000)-000A0000", "1-(000)-00000000", "1-(000)-000)0000", "1-(000)-000(0000", "1-(000)-000 0000", "1-(000)-000-00000", "1-(000)-0000000", "1-(000)000-0000", "1-(000-000-0000", "1-000)-000-0000", "1(000)-000-0000", "-(000)-000-0000", "0000000000", "1a(000)-000-0000", "1-(000)a000-0000", "1-(000)-000a0000", "1-(000)-000-0000"], "nonMatches": ["1-(000)-000-000", "1-(000)-000--0000", "1-(000)-0000-0000", "1-(000)-00-0000", "1-(000)--000-0000", "1-(000))-000-0000", "1-(0000)-000-0000", "1-(00)-000-0000", "1-((000)-000-0000", "1--(000)-000-0000", "11-(000)-000-0000"]}, {"regex": "^(((?=.*(::))(?!.*\\3.+\\3))\\3?|([\\dA-F]{1,4}(\\3|:\\b|$)|\\2))(?4){5}((?4){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})\\z", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?4"}, "matches": []}, {"regex": "32e3432ew+", "exceptionStackTrace": null, "matches": ["32e3432eww", "32e3432ew"], "nonMatches": ["32e3432e"]}, {"regex": "http[s]?://[a-zA-Z0-9.-/]+", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: .-/"}, "matches": [], "nonMatches": []}, {"regex": "^-?[0-9]\\d{0,8}(\\.\\d{1,4})", "exceptionStackTrace": null, "matches": ["-00.00000", "-00.0000", "-000000000.0", "-0.0", "00.0", "0.0", "-00.0"], "nonMatches": ["-00.", "-0000000000.0", "--00.0"]}, {"regex": "^[a-zA-Z0-9]{1,20}$", "exceptionStackTrace": null, "matches": ["00000000000000000000", "a", "A", "0"], "nonMatches": ["000000000000000000000", ""]}, {"regex": "^[a-zA-Z0-9\\-]+\\.cn$", "exceptionStackTrace": null, "matches": ["-.cn", "eVil.cn", "EVIL.cn", "ev4il.cn", "e.cn", "6.cn", "evil.cn"], "nonMatches": ["..cn", "ev_il.cn", "ev il.cn", " .cn", "_.cn", ".cn"]}, {"regex": "(\\&#39;([^\\&#39;\\\\]*\\\\.)*[^\\&#39;\\\\]*\\&#39;)+", "exceptionStackTrace": null, "matches": ["&#39;evil\\aevil&#39;&#39;evil\\aevil&#39;", "&#39;evil\\aeVil&#39;", "&#39;evil\\aEVIL&#39;", "&#39;evil\\aev_il&#39;", "&#39;evil\\aev il&#39;", "&#39;evil\\aev4il&#39;", "&#39;evil\\ae&#39;", "&#39;evil\\a &#39;", "&#39;evil\\a6&#39;", "&#39;evil\\a_&#39;", "&#39;evil\\a&#39;", "&#39;evil\\aevil\\aevil&#39;", "&#39;evil&#39;", "&#39;evil\\\\evil&#39;", "&#39;evil\\Aevil&#39;", "&#39;evil\\;evil&#39;", "&#39;evil\\0evil&#39;", "&#39;evil\\&evil&#39;", "&#39;evil\\#evil&#39;", "&#39;evil\\ evil&#39;", "&#39;\\\\aevil&#39;", "&#39;eVil\\aevil&#39;", "&#39;EVIL\\aevil&#39;", "&#39;ev_il\\aevil&#39;", "&#39;ev il\\aevil&#39;", "&#39;ev4il\\aevil&#39;", "&#39;e\\aevil&#39;", "&#39; \\aevil&#39;", "&#39;6\\aevil&#39;", "&#39;_\\aevil&#39;", "&#39;\\aevil&#39;", "&#39;&#39;", "&#39;evil\\aevil&#39;"], "nonMatches": ["", "&#39;evil\\a\\&#39;", "&#39;evil\\a;&#39;", "&#39;evil\\a&&#39;", "&#39;evil\\a#&#39;", "&#39;;\\aevil&#39;", "&#39;&\\aevil&#39;", "&#39;#\\aevil&#39;"]}, {"regex": "20\\d{2}(-|\\/)((0[1-9])|(1[0-2]))(-|\\/)((0[1-9])|([1-2][0-9])|(3[0-1]))(T|\\s)(([0-1][0-9])|(2[0-3])):([0-5][0-9]):([0-5][0-9])", "exceptionStackTrace": null, "matches": ["2000/01-01T00:00:00", "2000-10-01T00:00:00", "2000-01/01T00:00:00", "2000-01-30T00:00:00", "2000-01-10T00:00:00", "2000-01-01 00:00:00", "2000-01-01T20:00:00", "2000-01-01T00:00:00"], "nonMatches": ["2000-13-01T00:00:00", "2000-01-32T00:00:00", "2000-01-01T24:00:00", "2000-01-01T00:00:60", "2000-01-01T00:60:00", "2000-01-00T00:00:00", "2000-00-01T00:00:00", "20000-01-01T00:00:00", "200-01-01T00:00:00"]}, {"regex": "([^\\x00-\\xFF]\\s*)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 0"}, "matches": [], "nonMatches": []}, {"regex": "(<\\/?)(\\w+)([^>]*>)", "exceptionStackTrace": null, "matches": ["</evil>>", "</evil<>", "</evil/>", "</evileVil>", "</evilEVIL>", "</evilev_il>", "</evilev il>", "</evilev4il>", "</evile>", "</evil >", "</evil6>", "</evil_>", "</eVilevil>", "</EVILevil>", "</ev_ilevil>", "</ev ilevil>", "</ev4ilevil>", "</eevil>", "</6evil>", "</_evil>", "</evil>", "<evilevil>", "<evil>", "</evilevil>"], "nonMatches": ["</ evil>", "<//evilevil>"]}, {"regex": "(<\\/?)(\\w+)([^>]*>)", "exceptionStackTrace": null, "matches": ["</evil>>", "</evil<>", "</evil/>", "</evileVil>", "</evilEVIL>", "</evilev_il>", "</evilev il>", "</evilev4il>", "</evile>", "</evil >", "</evil6>", "</evil_>", "</eVilevil>", "</EVILevil>", "</ev_ilevil>", "</ev ilevil>", "</ev4ilevil>", "</eevil>", "</6evil>", "</_evil>", "</evil>", "<evilevil>", "<evil>", "</evilevil>"], "nonMatches": ["</ evil>", "<//evilevil>"]}, {"regex": "ng-[^\\s]+?=&quot;.*?&quot;", "exceptionStackTrace": null, "matches": ["ng-evil=&quot;=&quot;", "ng-evil=&quot;;&quot;", "ng-evil=&quot;-&quot;", "ng-evil=&quot;&&quot;", "ng-evil=&quot;eVil&quot;", "ng-evil=&quot;EVIL&quot;", "ng-evil=&quot;ev_il&quot;", "ng-evil=&quot;ev il&quot;", "ng-evil=&quot;ev4il&quot;", "ng-evil=&quot;e&quot;", "ng-evil=&quot; &quot;", "ng-evil=&quot;6&quot;", "ng-evil=&quot;_&quot;", "ng-==&quot;evil&quot;", "ng-;=&quot;evil&quot;", "ng--=&quot;evil&quot;", "ng-&=&quot;evil&quot;", "ng-eVil=&quot;evil&quot;", "ng-EVIL=&quot;evil&quot;", "ng-ev_il=&quot;evil&quot;", "ng-ev4il=&quot;evil&quot;", "ng-e=&quot;evil&quot;", "ng-6=&quot;evil&quot;", "ng-_=&quot;evil&quot;", "ng-evil=&quot;&quot;", "ng-evil=&quot;evil&quot;"], "nonMatches": ["ng-ev il=&quot;evil&quot;", "ng- =&quot;evil&quot;", "ng-=&quot;evil&quot;"]}, {"regex": "^[a-zA-Z_]{1}[a-zA-Z0-9_]+$", "exceptionStackTrace": null, "matches": ["_eVil", "_EVIL", "_ev_il", "_ev4il", "_e", "_6", "__", "__evil", "evil", "aevil", "Aevil", "_evil"], "nonMatches": ["_ev il", "_ ", "_"]}, {"regex": "&amp;(?![a-zA-Z]{2,6};|#[0-9]{3};)", "exceptionStackTrace": null, "matches": ["&amp;"], "nonMatches": []}, {"regex": "^([1-9]{1}[\\d]{0,2}(\\.[\\d]{3})*(\\,[\\d]{0,2})?|[1-9]{1}[\\d]{0,}(\\,[\\d]{0,2})?|0(\\,[\\d]{0,2})?|(\\,[\\d]{1,2})?)$", "exceptionStackTrace": null, "matches": [",00", "0,00", "0,", "10", "10,00", "10,", "100,0", "1,0", "110,0", "10.000", "10.000,00", "10.000,", "10.000.000,0", "100.000,0", "1.000,0", "110.000,0", "", "0", "1", ",0", "0,0", "10,0", "10.000,0"], "nonMatches": [",0,0", ",000", ",", "0,0,0", "0,000", "10,0,0", "10,000", "00,0", "10.000,0,0", "10.000,000", "10.0000,0", "10.00,0", "1000.000,0", "0.000,0", "00.000,0"]}, {"regex": ".\\{\\d\\}", "exceptionStackTrace": null, "matches": ["}{0}", "{{0}", "A{0}", "0{0}", " {0}", "a{0}"], "nonMatches": []}, {"regex": "^\\d{2}([0][1-9]|[1][0-2])([0][1-9]|[1-2][0-9]|[3][0-1])-\\d{4}$", "exceptionStackTrace": null, "matches": ["001001-0000", "000130-0000", "000110-0000", "000101-0000"], "nonMatches": ["001301-0000", "000132-0000", "000101-00000", "000101-000", "000100-0000", "000001-0000", "0000101-0000", "00101-0000"]}, {"regex": "^0(83|85|86|87|88|89)\\s?\\d{1}\\s?\\d{1}\\s?\\d{1}\\s?\\d{1}\\s?\\d{1}\\s?\\d{1}\\s?\\d{1}$", "exceptionStackTrace": null, "matches": ["083 0 0 0 0 0 00", "083 0 0 0 0 00 0", "083 0 0 0 00 0 0", "083 0 0 00 0 0 0", "083 0 00 0 0 0 0", "083 00 0 0 0 0 0", "0830 0 0 0 0 0 0", "0890000000", "0880000000", "0870000000", "0860000000", "0850000000", "0830000000", "089 0 0 0 0 0 0 0", "088 0 0 0 0 0 0 0", "087 0 0 0 0 0 0 0", "086 0 0 0 0 0 0 0", "085 0 0 0 0 0 0 0", "083 0 0 0 0 0 0 0"], "nonMatches": ["083 0 0 0 0 0 0 00", "083 0 0 0 0 0 0 ", "083 0 0 0 0 0 0  0", "083 0 0 0 0 0 00 0", "083 0 0 0 0 0  0", "083 0 0 0 0 0  0 0", "083 0 0 0 0 00 0 0", "083 0 0 0 0  0 0", "083 0 0 0 0  0 0 0", "083 0 0 0 00 0 0 0", "083 0 0 0  0 0 0", "083 0 0 0  0 0 0 0", "083 0 0 00 0 0 0 0", "083 0 0  0 0 0 0", "083 0 0  0 0 0 0 0", "083 0 00 0 0 0 0 0", "083 0  0 0 0 0 0", "083 0  0 0 0 0 0 0", "083 00 0 0 0 0 0 0", "083  0 0 0 0 0 0", "083  0 0 0 0 0 0 0"]}, {"regex": "^([a-zA-Z0-9\\-]{2,80})$", "exceptionStackTrace": null, "matches": ["--------------------------------------------------------------------------------", "a-", "A-", "0-", "--"], "nonMatches": ["---------------------------------------------------------------------------------", "-"]}, {"regex": "^011-(?<IntlCountryCode>[1-9][0-9]{1,5})-(?<IntlAreaCode>[0-9]+)-(?<IntlPhoneNumber>[0]?\\d[0-9]+)(?:[^\\d\\-]+(?<IntlExtension>\\d{1,4}))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<I"}, "matches": []}, {"regex": "^011-(?<IntlCountryCode>[1-9][0-9]{1,5})-(?<IntlAreaCode>[0-9]+)-(?<IntlPhoneNumber>[0]?\\d[0-9]+)(?:[^\\d\\-]+(?<IntlExtension>\\d{1,4}))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<I"}, "matches": []}, {"regex": "^[a-z][\\w\\.]+@([\\w\\-]+\\.)+[a-z]{2,7}$", "exceptionStackTrace": null, "matches": ["aevil@evil.aaaaaaa", "aevil@evil.evil.aa", "aevil@-.aa", "aevil@eVil.aa", "aevil@EVIL.aa", "aevil@ev_il.aa", "aevil@ev4il.aa", "aevil@e.aa", "aevil@6.aa", "aevil@_.aa", "a.@evil.aa", "aeVil@evil.aa", "aEVIL@evil.aa", "aev_il@evil.aa", "aev4il@evil.aa", "ae@evil.aa", "a6@evil.aa", "a_@evil.aa", "aevil@evil.aa"], "nonMatches": ["aevil@evil.aaaaaaaa", "aevil@evil.a", "aevil@aa", "aevil@@.aa", "aevil@..aa", "aevil@ev il.aa", "aevil@ .aa", "aevil@.aa", "a@@evil.aa", "a-@evil.aa", "aev il@evil.aa", "a @evil.aa", "a@evil.aa"]}, {"regex": "^[\\d]{3}[\\s\\-]*[\\d]{3}[\\s\\-]*[\\d]{4}\\s*$", "exceptionStackTrace": null, "matches": ["000-000-0000  ", "000-000-0000", "000-000--0000 ", "000-0000000 ", "000-000 0000 ", "000--000-0000 ", "000000-0000 ", "000 000-0000 ", "0000000000", "000-000-0000 "], "nonMatches": ["000-000-00000 ", "000-000-000 ", "000-0000-0000 ", "000-00-0000 ", "0000-000-0000 ", "00-000-0000 "]}, {"regex": "<link href=&quot;../Common/Styles/iLienStyle.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "exceptionStackTrace": null, "matches": ["<link href=&quot;aa/Common/Styles/iLienStyleAcss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle>css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle=css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle<css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle;css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle0css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle/css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle&css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyle css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aA/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a>/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a=/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a</Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a;/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a0/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a//Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a&/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;a /Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;Aa/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;>a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;=a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;<a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;;a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;0a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;/a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;&a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot; a/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />", "<link href=&quot;aa/Common/Styles/iLienStyleacss&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; />"], "nonMatches": []}, {"regex": "\\d{1,2}(/|-)\\d{1,2}(/|-)\\d{2,4}", "exceptionStackTrace": null, "matches": ["0/0/00000", "0/0/0000", "0/00/00", "000/0/00", "00/0/00", "0-0/00", "0/0-00", "0/0/00"], "nonMatches": ["0/0/0", "0/000/00", "0//00", "/0/00"]}, {"regex": "(?i)\\s*MOVE\\s+\\w+(\\-\\w+)*\\s+TO\\s+\\w+(\\-\\w+)*", "exceptionStackTrace": null, "matches": [" MOVE evil-evil TO evil-evil-evil", " MOVE evil-evil TO evil", " MOVE evil-evil TO evil-eVil", " MOVE evil-evil TO evil-EVIL", " MOVE evil-evil TO evil-ev_il", " MOVE evil-evil TO evil-ev il", " MOVE evil-evil TO evil-ev4il", " MOVE evil-evil TO evil-e", " MOVE evil-evil TO evil- ", " MOVE evil-evil TO evil-6", " MOVE evil-evil TO evil-_", " MOVE evil-evil TO evil-", " MOVE evil-evil TO eVil-evil", " MOVE evil-evil TO EVIL-evil", " MOVE evil-evil TO ev_il-evil", " MOVE evil-evil TO ev il-evil", " MOVE evil-evil TO ev4il-evil", " MOVE evil-evil TO e-evil", " MOVE evil-evil TO 6-evil", " MOVE evil-evil TO _-evil", " MOVE evil-evil TO  evil-evil", " MOVE evil-evil  TO evil-evil", " MOVE evil-evil-evil TO evil-evil", " MOVE evil TO evil-evil", " MOVE evil-eVil TO evil-evil", " MOVE evil-EVIL TO evil-evil", " MOVE evil-ev_il TO evil-evil", " MOVE evil-ev4il TO evil-evil", " MOVE evil-e TO evil-evil", " MOVE evil-6 TO evil-evil", " MOVE evil-_ TO evil-evil", " MOVE eVil-evil TO evil-evil", " MOVE EVIL-evil TO evil-evil", " MOVE ev_il-evil TO evil-evil", " MOVE ev4il-evil TO evil-evil", " MOVE e-evil TO evil-evil", " MOVE 6-evil TO evil-evil", " MOVE _-evil TO evil-evil", " MOVE  evil-evil TO evil-evil", "  MOVE evil-evil TO evil-evil", "MOVE evil-evil TO evil-evil", "MOVE evil TO evil", " MOVE evil-evil TO evil-evil"], "nonMatches": [" MOVE evil-evil TO  -evil", " MOVE evil-evil TO -evil", " MOVE evil-evil TOevil-evil", " MOVE evil-evilTO evil-evil", " MOVE evil-ev il TO evil-evil", " MOVE evil-  TO evil-evil", " MOVE evil- TO evil-evil", " MOVE ev il-evil TO evil-evil", " MOVE  -evil TO evil-evil", " MOVE -evil TO evil-evil", " MOVEevil-evil TO evil-evil"]}, {"regex": "^\\d{1,2}\\.\\d{3}\\.\\d{3}[-][0-9kK]{1}$", "exceptionStackTrace": null, "matches": ["0.000.000-k", "0.000.000-0", "00.000.000-K", "0.000.000-K"], "nonMatches": ["0.000.000-KK", "0.000.000-", "0.000.000-a", "0.000.000-A", "0.000.0000-K", "0.000.00-K", "0.0000.000-K", "0.00.000-K", "000.000.000-K", ".000.000-K"]}, {"regex": "^((?=.{8,32}$)(?=.*\\p{Lu})(?=.*\\p{Ll})((?=.*\\p{N})|(?=.*\\p{P}))(?!.*\\s))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad escape \\p"}, "matches": []}, {"regex": "^([0-9]{1}[\\d]{0,2}(\\,[\\d]{3})*(\\,[\\d]{0,2})?|[0-9]{1}[\\d]{0,}(\\,[\\d]{0,2})?|0(\\,[\\d]{0,2})?|(\\,[\\d]{1,2})?)$", "exceptionStackTrace": null, "matches": [",00", "0,000", "0,00", "0,", "00", "00,00", "00,", "000,0", "00,000", "00,000,000", "00,000,00", "00,000,", "00,000,000,0", "000,000,0", "0,000,0", "", "0", ",0", "0,0", "00,0", "00,000,0"], "nonMatches": [",0,0", ",000", ",", "0,0,0", "00,0,0", "00,000,0,0", "00,0000,0", "00,00,0", "0000,000,0"]}, {"regex": "^(&quot;(\\\\[&quot;\\\\]|[^&quot;])*&quot;|[^\\n])*(\\n|$)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "&quot;(\\\\[&quot;\\\\]|[^&quot;])*(&quot;|$)|(\\\\[&quot;\\\\]|[^\\s&quot;])+", "exceptionStackTrace": null, "matches": ["\\", "A", "0", "\\\\\\\\", "\\u", "\\t", "\\q", "\\o", "\\a", "\\;", "\\&", "&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;\\&quot;", "&quot;A&quot;", "&quot;;&quot;", "&quot;0&quot;", "&quot;&&quot;", "&quot; &quot;", "&quot;\\\\\\\\&quot;", "&quot;\\u&quot;", "&quot;\\t&quot;", "&quot;\\q&quot;", "&quot;\\o&quot;", "&quot;\\a&quot;", "&quot;\\;&quot;", "&quot;\\&&quot;", "&quot;", "&quot;&quot;", "a", "\\\\", "&quot;a&quot;", "&quot;\\\\", "&quot;\\\\&quot;"], "nonMatches": ["u", "t", "q", "o", ";", "&", " ", ""]}, {"regex": "&quot;(?!&quot;)(&quot;&quot;|[^&quot;])*(&quot;|$)|((&quot;&quot;)+|[^\\s&quot;])+", "exceptionStackTrace": null, "matches": ["A", "0", "&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;A&quot;", "&quot;;&quot;", "&quot;0&quot;", "&quot;&&quot;", "&quot; &quot;", "&quot;&quot;&quot;&quot;&quot;&quot;", "&quot;", "a", "&quot;&quot;", "&quot;a&quot;", "&quot;&quot;&quot;", "&quot;&quot;&quot;&quot;"], "nonMatches": ["u", "t", "q", "o", ";", "&", " ", ""]}, {"regex": "(&quot;(\\\\[&quot;\\\\]|[^&quot;])*(&quot;|$)|\\S)+", "exceptionStackTrace": null, "matches": ["_", "\\", "A", ";", "0", "&", "&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;\\&quot;", "&quot;A&quot;", "&quot;;&quot;", "&quot;0&quot;", "&quot;&&quot;", "&quot; &quot;", "&quot;\\\\&quot;&quot;\\\\&quot;", "&quot;\\\\\\\\&quot;", "&quot;\\u&quot;", "&quot;\\t&quot;", "&quot;\\q&quot;", "&quot;\\o&quot;", "&quot;\\a&quot;", "&quot;\\;&quot;", "&quot;\\&&quot;", "&quot;", "&quot;&quot;", "a", "&quot;a&quot;", "&quot;\\\\", "&quot;\\\\&quot;"], "nonMatches": [" ", ""]}, {"regex": "(&quot;(?!&quot;)(&quot;&quot;|[^&quot;])*(&quot;|$)|\\S)+/g", "exceptionStackTrace": null, "matches": ["_/g", "A/g", ";/g", "0/g", "//g", "&/g", "&quot;u&quot;/g", "&quot;t&quot;/g", "&quot;q&quot;/g", "&quot;o&quot;/g", "&quot;A&quot;/g", "&quot;;&quot;/g", "&quot;0&quot;/g", "&quot;/&quot;/g", "&quot;&&quot;/g", "&quot; &quot;/g", "&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;/g", "&quot;&quot;&quot;&quot;&quot;&quot;/g", "&quot;/g", "&quot;&quot;/g", "a/g", "&quot;a&quot;/g", "&quot;&quot;&quot;/g", "&quot;&quot;&quot;&quot;/g"], "nonMatches": [" /g", "/g"]}, {"regex": "^(&quot;(\\\\[&quot;\\\\]|[^&quot;])*&quot;|[^\\n])*$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "(?:(.):)?(?:(.*)\\\\)?(?:(.*)\\.)?(.*)", "exceptionStackTrace": null, "matches": ["a:evil\\evil.\\", "a:evil\\evil.:", "a:evil\\evil..", "a:evil\\evil.eVil", "a:evil\\evil.EVIL", "a:evil\\evil.ev_il", "a:evil\\evil.ev il", "a:evil\\evil.ev4il", "a:evil\\evil.e", "a:evil\\evil. ", "a:evil\\evil.6", "a:evil\\evil._", "a:evil\\evil.", "a:evil\\evil.evil.evil", "a:evil\\evil", "a:evil\\\\.evil", "a:evil\\:.evil", "a:evil\\..evil", "a:evil\\eVil.evil", "a:evil\\EVIL.evil", "a:evil\\ev_il.evil", "a:evil\\ev il.evil", "a:evil\\ev4il.evil", "a:evil\\e.evil", "a:evil\\ .evil", "a:evil\\6.evil", "a:evil\\_.evil", "a:evil\\.evil", "a:evil\\evil\\evil.evil", "a:evil.evil", "a:\\\\evil.evil", "a::\\evil.evil", "a:.\\evil.evil", "a:eVil\\evil.evil", "a:EVIL\\evil.evil", "a:ev_il\\evil.evil", "a:ev il\\evil.evil", "a:ev4il\\evil.evil", "a:e\\evil.evil", "a: \\evil.evil", "a:6\\evil.evil", "a:_\\evil.evil", "a:\\evil.evil", "a:a:evil\\evil.evil", "evil\\evil.evil", "\\:evil\\evil.evil", "A:evil\\evil.evil", "::evil\\evil.evil", "0:evil\\evil.evil", ".:evil\\evil.evil", " :evil\\evil.evil", "", "a:evil\\evil.evil"], "nonMatches": []}, {"regex": "(?:(.):)?(?:(.*)\\\\)?((?:[^.]|.(?=[^.]*\\.))*)(?:\\.(.*))?", "exceptionStackTrace": null, "matches": ["a:evil\\a.evil.evil", "a:evil\\a", "a:evil\\a.\\", "a:evil\\a.:", "a:evil\\a..", "a:evil\\a.eVil", "a:evil\\a.EVIL", "a:evil\\a.ev_il", "a:evil\\a.ev il", "a:evil\\a.ev4il", "a:evil\\a.e", "a:evil\\a. ", "a:evil\\a.6", "a:evil\\a._", "a:evil\\a.", "a:evil\\aa.evil", "a:evil\\.evil", "a:evil\\\\.evil", "a:evil\\A.evil", "a:evil\\:.evil", "a:evil\\0.evil", "a:evil\\..evil", "a:evil\\ .evil", "a:evil\\evil\\a.evil", "a:a.evil", "a:\\\\a.evil", "a::\\a.evil", "a:.\\a.evil", "a:eVil\\a.evil", "a:EVIL\\a.evil", "a:ev_il\\a.evil", "a:ev il\\a.evil", "a:ev4il\\a.evil", "a:e\\a.evil", "a: \\a.evil", "a:6\\a.evil", "a:_\\a.evil", "a:\\a.evil", "a:a:evil\\a.evil", "evil\\a.evil", "\\:evil\\a.evil", "A:evil\\a.evil", "::evil\\a.evil", "0:evil\\a.evil", ".:evil\\a.evil", " :evil\\a.evil", "", "a:evil\\a.evil"], "nonMatches": []}, {"regex": "&quot;(\\\\[&quot;\\\\]|[^&quot;])*(&quot;|$)|&#39;(\\\\[&#39;\\\\]|[^&#39;])*(&#39;|$)|(\\\\[&quot;&#39;\\\\]|[^\\s&quot;&#39;])+", "exceptionStackTrace": null, "matches": ["\\", "A", "0", "\\\\\\\\", "\\u", "\\t", "\\q", "\\o", "\\a", "\\;", "\\9", "\\3", "\\0", "\\&", "\\#", "&#39;\\&#39;", "&#39;A&#39;", "&#39;;&#39;", "&#39;9&#39;", "&#39;3&#39;", "&#39;0&#39;", "&#39;&&#39;", "&#39;#&#39;", "&#39; &#39;", "&#39;\\\\\\\\&#39;", "&#39;\\;&#39;", "&#39;\\9&#39;", "&#39;\\3&#39;", "&#39;\\0&#39;", "&#39;\\&&#39;", "&#39;\\#&#39;", "&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;\\&quot;", "&quot;A&quot;", "&quot;;&quot;", "&quot;0&quot;", "&quot;&&quot;", "&quot;#&quot;", "&quot; &quot;", "&quot;\\\\\\\\&quot;", "&quot;\\u&quot;", "&quot;\\t&quot;", "&quot;\\q&quot;", "&quot;\\o&quot;", "&quot;\\a&quot;", "&quot;\\;&quot;", "&quot;\\&&quot;", "&#39;", "&#39;&#39;", "&quot;", "&quot;&quot;", "a", "\\\\", "&#39;a&#39;", "&#39;\\\\", "&#39;\\\\&#39;", "&quot;a&quot;", "&quot;\\\\", "&quot;\\\\&quot;"], "nonMatches": ["u", "t", "q", "o", ";", "9", "3", "&", "#", " ", ""]}, {"regex": "^(&quot;(\\\\&quot;|[^&quot;])*&quot;|&#39;(\\\\&#39;|[^&#39;])*&#39;|[^\\n])*(\\n|$)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^(\\d+\\.\\d+)$", "exceptionStackTrace": null, "matches": ["0.00", "00.0", "0.0"], "nonMatches": ["0.", ".0"]}, {"regex": "^\\d*(\\.\\d*)$", "exceptionStackTrace": null, "matches": ["0.00", "0.", "00.0", ".0", ".", "0.0"], "nonMatches": []}, {"regex": "^\\d{1}(\\.\\d{3})-\\d{3}(\\.\\d{1})$", "exceptionStackTrace": null, "matches": ["0.000-000.0"], "nonMatches": ["0.000-000.00", "0.000-000.", "0.000-0000.0", "0.000-00.0", "0.0000-000.0", "0.00-000.0", "00.000-000.0", ".000-000.0"]}, {"regex": "^[-]?\\d*(\\.\\d*)$", "exceptionStackTrace": null, "matches": ["-0.00", "-0.", "-00.0", "-.0", "0.0", ".", "-0.0"], "nonMatches": ["--0.0"]}, {"regex": "(&quot;(?:(?:(?:\\\\.)|[^&quot;\\\\\\r\\n])*)&quot;|&#39;(?:(?:(?:\\\\.)|[^&#39;\\\\\\r\\n])*)&#39;|`(?:(?:(?:\\\\.)|[^`\\\\\\r\\n])*)`)|((?:-- .*)|(?:#.*)|(?:/\\*(?:(?:[^*]|\\*(?!/))*)\\*/))", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "\\b(([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d?\\d|2[0-4]\\d|25[0-5])\\b", "exceptionStackTrace": null, "matches": ["250.200.200.100", "100.100.100.10", "100.100.100.00", "100.100.100.000", "100.100.100.100.100", "10.100.100.100", "00.100.100.100", "200.100.100.100", "000.100.100.100", "250.250.250.0", "200.250.250.0", "0.250.250.250", "0.250.250.200", "0.250.250.0", "250.250.250.100", "200.200.200.100", "100.100.100.250", "100.100.100.200", "100.100.100.100"], "nonMatches": ["256.250.250.100", "100.100.100.256", "100.100.100.1000", "100.100.100.1100", "100.100.100", "1000.100.100.100", "1100.100.100.100"]}, {"regex": "^((((0?[1-9]|1[012])/(0?[1-9]|1\\d|2[0-8])|(0?[13456789]|1[012])/(29|30)|(0?[13578]|1[02])/31)/(19|[2-9]\\d)\\d{2}|0?2/29/((19|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(([2468][048]|[3579][26])00))))[\\s]((([0]?[1-9]|1[0-2])(:|\\.)[0-5][0-9]((:|\\.)[0-5][0-9])?( )?(AM|am|aM|Am|PM|pm|pM|Pm))|(([0]?[0-9]|1[0-9]|2[0-3])(:|\\.)[0-5][0-9]((:|\\.)[0-5][0-9])?))$", "exceptionStackTrace": null, "matches": ["02/29/9200 01:00:00 AM", "02/29/7600 01:00:00 AM", "02/29/5600 01:00:00 AM", "02/29/3600 01:00:00 AM", "02/29/8400 01:00:00 AM", "02/29/8000 01:00:00 AM", "02/29/6800 01:00:00 AM", "02/29/4800 01:00:00 AM", "02/29/2800 01:00:00 AM", "02/29/1992 01:00:00 AM", "02/29/1976 01:00:00 AM", "02/29/1956 01:00:00 AM", "02/29/1936 01:00:00 AM", "02/29/1916 01:00:00 AM", "02/29/1984 01:00:00 AM", "02/29/1980 01:00:00 AM", "02/29/1968 01:00:00 AM", "02/29/1948 01:00:00 AM", "02/29/1928 01:00:00 AM", "02/29/1904 01:00:00 AM", "2/29/1908 01:00:00 AM", "10/31/1900 01:00:00 AM", "07/31/1900 01:00:00 AM", "05/31/1900 01:00:00 AM", "03/31/1900 01:00:00 AM", "01/31/1900 01:00:00 AM", "8/31/1900 01:00:00 AM", "11/29/1900 01:00:00 AM", "10/29/1900 01:00:00 AM", "08/29/1900 01:00:00 AM", "07/29/1900 01:00:00 AM", "06/29/1900 01:00:00 AM", "05/29/1900 01:00:00 AM", "04/29/1900 01:00:00 AM", "03/29/1900 01:00:00 AM", "9/29/1900 01:00:00 AM", "11/01/1900 01:00:00 AM", "10/01/1900 01:00:00 AM", "01/29/1900 01:00:00 AM", "01/01/1900 00:00", "01/01/1900 0:00:00", "01/01/1900 01:00:00AM", "01/01/1900 01:00 AM", "01/01/1900 1:00:00 AM", "01/1/1900 01:00:00 AM", "1/01/1900 01:00:00 AM", "2/29/9600 1:00AM", "2/29/8800 1:00AM", "2/29/2008 1:00AM", "2/29/1996 1:00AM", "2/29/1988 1:00AM", "2/29/1908 1:00AM", "12/31/1900 1:00AM", "8/31/1900 1:00AM", "12/29/1900 1:00AM", "9/30/1900 1:00AM", "9/29/1900 1:00AM", "12/1/1900 1:00AM", "1/20/1900 1:00AM", "1/10/1900 1:00AM", "1/1/2000 1:00AM", "1/1/1900 20:00", "1/1/1900 10:00", "1/1/1900 0.00", "1/1/1900 0:00", "1/1/1900 10:00AM", "1/1/1900 1.00AM", "1/1/1900 1:00Pm", "1/1/1900 1:00pM", "1/1/1900 1:00pm", "1/1/1900 1:00PM", "1/1/1900 1:00Am", "1/1/1900 1:00aM", "1/1/1900 1:00am", "1/1/1900 1:00AM", "02/29/9600 01:00:00 AM", "02/29/8800 01:00:00 AM", "02/29/2008 01:00:00 AM", "02/29/1996 01:00:00 AM", "02/29/1988 01:00:00 AM", "02/29/1908 01:00:00 AM", "12/31/1900 01:00:00 AM", "08/31/1900 01:00:00 AM", "12/29/1900 01:00:00 AM", "09/30/1900 01:00:00 AM", "09/29/1900 01:00:00 AM", "12/01/1900 01:00:00 AM", "01/20/1900 01:00:00 AM", "01/10/1900 01:00:00 AM", "01/01/2000 01:00:00 AM", "01/01/1900 20:00:00", "01/01/1900 10:00:00", "01/01/1900 00.00:00", "01/01/1900 00:00.00", "01/01/1900 00:00:00", "01/01/1900 10:00:00 AM", "01/01/1900 01.00:00 AM", "01/01/1900 01:00.00 AM", "01/01/1900 01:00:00 Pm", "01/01/1900 01:00:00 pM", "01/01/1900 01:00:00 pm", "01/01/1900 01:00:00 PM", "01/01/1900 01:00:00 Am", "01/01/1900 01:00:00 aM", "01/01/1900 01:00:00 am", "01/01/1900 01:00:00 AM"], "nonMatches": ["02/29/9000 01:00:00 AM", "02/29/0600 01:00:00 AM", "02/29/8100 01:00:00 AM", "02/29/0800 01:00:00 AM", "02/29/0008 01:00:00 AM", "02/29/1990 01:00:00 AM", "02/29/1906 01:00:00 AM", "02/29/1981 01:00:00 AM", "02/29/1900 01:00:00 AM", "002/29/1908 01:00:00 AM", "11/31/1900 01:00:00 AM", "00/31/1900 01:00:00 AM", "008/31/1900 01:00:00 AM", "13/29/1900 01:00:00 AM", "00/29/1900 01:00:00 AM", "009/29/1900 01:00:00 AM", "13/01/1900 01:00:00 AM", "01/01/0000 01:00:00 AM", "01/01/1900 24:00:00", "01/01/1900 00:00:00:00", "01/01/1900 00:00:60", "01/01/1900 00:60:00", "01/01/1900 000:00:00", "01/01/1900 13:00:00 AM", "01/01/1900 01:00:00  AM", "01/01/1900 01:00:00:00 AM", "01/01/1900 01:00:60 AM", "01/01/1900 01:60:00 AM", "01/01/1900 00:00:00 AM", "01/01/1900 001:00:00 AM", "01/01/19000 01:00:00 AM", "01/01/190 01:00:00 AM", "01/00/1900 01:00:00 AM", "01/001/1900 01:00:00 AM", "00/01/1900 01:00:00 AM", "001/01/1900 01:00:00 AM"]}, {"regex": "ISBN(-1(?:(0)|3))?:?\\x20(\\s)*[0-9]+[- ][0-9]+[- ][0-9]+[- ][0-9]*[- ]*[xX0-9]", "exceptionStackTrace": null, "matches": ["ISBN-10:  0 0 0 0 x", "ISBN-10:  0 0 0 0 a", "ISBN-10:  0 0 0 0 A", "ISBN-10:  0 0 0 0 0", "ISBN-10:  0 0 0 0  X", "ISBN-10:  0 0 0 0X", "ISBN-10:  0 0 0 0-X", "ISBN-10:  0 0 0 00 X", "ISBN-10:  0 0 0  X", "ISBN-10:  0 0 0-0 X", "ISBN-10:  0 0 00 0 X", "ISBN-10:  0 0-0 0 X", "ISBN-10:  0 00 0 0 X", "ISBN-10:  0-0 0 0 X", "ISBN-10:  00 0 0 0 X", "ISBN-10:   0 0 0 X", "ISBN-10:   0 0 0 0 X", "ISBN-10: 0 0 0 0 X", "ISBN-10  0 0 0 0 X", "ISBN:  0 0 0 0 X", "ISBN 0 0 0 X", "ISBN-13:  0 0 0 0 X", "ISBN-10:  0 0 0 0 X"], "nonMatches": ["ISBN-10:  0 0  0 X", "ISBN-10:  0  0 0 X", "ISBN-10::  0 0 0 0 X", "ISBN-10-10:  0 0 0 0 X"]}, {"regex": "^\\s*[a-zA-Z0-9,\\s\\-\\&#39;\\.]+\\s*$", "exceptionStackTrace": null, "matches": [" evil  ", " evil", " ; ", " . ", " - ", " , ", " & ", " # ", " eVil ", " EVIL ", " ev il ", " ev4il ", " e ", "   ", " 6 ", "  ", "  evil ", "evil ", "evil", " evil "], "nonMatches": [" ev_il ", " _ "]}, {"regex": "^([1-9]|0[1-9]|[12][0-9]|3[01])(-|/)(([1-9]|0[1-9])|(1[0-2]))(-|/)(([0-9][0-9])|([0-9][0-9][0-9][0-9]))$", "exceptionStackTrace": null, "matches": ["30-1-00", "10-1-00", "31-1-00", "20-1-00", "01-1-00", "1/1-00", "1-10-00", "1-01-00", "1-1/00", "1-1-0000", "1-1-00"], "nonMatches": ["32-1-00", "00-1-00", "1-13-00", "1-00-00", "1-0-00", "0-1-00"]}, {"regex": "([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}|(\\d{1,3}\\.){3}\\d{1,3}", "exceptionStackTrace": null, "matches": ["0.0.0.0000", "0.0.0.000", "0.0.0.0.0", "0000.0.0.0", "000.0.0.0", "a:a:a:a:a:a:a:aaaaa", "a:a:a:a:a:a:a:aaaa", "a:a:a:a:a:a:a:A", "a:a:a:a:a:a:a:0", "a:a:a:a:a:a:a:a:a", "aaaaa:a:a:a:a:a:a:a", "aaaa:a:a:a:a:a:a:a", "A:a:a:a:a:a:a:a", "0:a:a:a:a:a:a:a", "0.0.0.0", "a:a:a:a:a:a:a:a"], "nonMatches": ["0.0.0.", "0.0.0", ".0.0.0", "a:a:a:a:a:a:a:", "a:a:a:a:a:a:a:g", "a:a:a:a:a:a:a:G", "a:a:a:a:a:a:a", ":a:a:a:a:a:a:a", "g:a:a:a:a:a:a:a", "G:a:a:a:a:a:a:a"]}, {"regex": "^(H(P|T|U|Y|Z)|N(A|B|C|D|F|G|H|J|K|L|M|N|O|R|S|T|U|W|X|Y|Z)|OV|S(C|D|E|G|H|J|K|M|N|O|P|R|S|T|U|W|X|Y|Z)|T(A|F|G|L|M|Q|R|V)){1}\\d{4}(NE|NW|SE|SW)?$|((H(P|T|U|Y|Z)|N(A|B|C|D|F|G|H|J|K|L|M|N|O|R|S|T|U|W|X|Y|Z)|OV|S(C|D|E|G|H|J|K|M|N|O|P|R|S|T|U|W|X|Y|Z)|T(A|F|G|L|M|Q|R|V)){1}(\\d{4}|\\d{6}|\\d{8}|\\d{10}))$", "exceptionStackTrace": null, "matches": ["HPHP0000", "TV0000", "TR0000", "TQ0000", "TM0000", "TL0000", "TG0000", "TF0000", "TA0000", "SZ0000", "SY0000", "SX0000", "SW0000", "SU0000", "ST0000", "SS0000", "SR0000", "SP0000", "SO0000", "SN0000", "SM0000", "SK0000", "SJ0000", "SH0000", "SG0000", "SE0000", "SD0000", "SC0000", "OV0000", "NZ0000", "NY0000", "NX0000", "NW0000", "NU0000", "NT0000", "NS0000", "NR0000", "NO0000", "NN0000", "NM0000", "NL0000", "NK0000", "NJ0000", "NH0000", "NG0000", "NF0000", "ND0000", "NC0000", "NB0000", "NA0000", "HZ0000", "HY0000", "HU0000", "HT0000", "HP0000000000", "HP00000000", "HP000000", "HP0000", "TV0000NE", "TR0000NE", "TQ0000NE", "TM0000NE", "TL0000NE", "TG0000NE", "TF0000NE", "TA0000NE", "SZ0000NE", "SY0000NE", "SX0000NE", "SW0000NE", "SU0000NE", "ST0000NE", "SS0000NE", "SR0000NE", "SP0000NE", "SO0000NE", "SN0000NE", "SM0000NE", "SK0000NE", "SJ0000NE", "SH0000NE", "SG0000NE", "SE0000NE", "SD0000NE", "SC0000NE", "OV0000NE", "NZ0000NE", "NY0000NE", "NX0000NE", "NW0000NE", "NU0000NE", "NT0000NE", "NS0000NE", "NR0000NE", "NO0000NE", "NN0000NE", "NM0000NE", "NL0000NE", "NK0000NE", "NJ0000NE", "NH0000NE", "NG0000NE", "NF0000NE", "ND0000NE", "NC0000NE", "NB0000NE", "NA0000NE", "HZ0000NE", "HY0000NE", "HU0000NE", "HT0000NE", "HP0000SW", "HP0000SE", "HP0000NW", "HP0000NE"], "nonMatches": ["HP00000000000", "HP000000000", "HP0000000", "HP00000", "HP000", "0000", "HP0000NENE", "HP00000NE", "HP000NE", "HPHP0000NE", "0000NE"]}, {"regex": "^(?<link>((?<prot>http:\\/\\/)*(?<subdomain>(www|[^\\-\\n]*)*)(\\.)*(?<domain>[^\\-\\n]+)\\.(?<after>[a-zA-Z]{2,3}[^>\\n]*)))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}[\\/]", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "\\A(\\d+[a-zA-Z]{0,1}\\s{0,1}[-]{1}\\s{0,1}\\d*[a-zA-Z]{0,1}|\\d+[a-zA-Z-]{0,1}\\d*[a-zA-Z]{0,1})\\s*+(.*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "multiple repeat"}, "matches": []}, {"regex": "\\A(.*?)\\s+(\\d+[a-zA-Z]{0,1}\\s{0,1}[-]{1}\\s{0,1}\\d*[a-zA-Z]{0,1}|\\d+[a-zA-Z-]{0,1}\\d*[a-zA-Z]{0,1})", "exceptionStackTrace": null, "matches": ["evil 0-0AA", "evil 0-0", "evil 0-0a", "evil 0-00A", "evil 0-A", "evil 0--0A", "evil 00A", "evil 0a0A", "evil 0A0A", "evil 00-0A", "evil 0A - 0AA", "evil 0A - 0", "evil 0A - 0a", "evil 0A - 00A", "evil 0A - A", "evil 0A -  0A", "evil 0A -0A", "evil 0A -- 0A", "evil 0A  0A", "evil 0A  - 0A", "evil 0A- 0A", "evil 0AA - 0A", "evil 0 - 0A", "evil 0a - 0A", "evil 00A - 0A", "evil A - 0A", "evil  0A - 0A", "evil0A - 0A", "- 0A - 0A", "eVil 0A - 0A", "EVIL 0A - 0A", "ev_il 0A - 0A", "ev il 0A - 0A", "ev4il 0A - 0A", "e 0A - 0A", "  0A - 0A", "6 0A - 0A", "_ 0A - 0A", " 0A - 0A", " 0", " 0-", "evil 0-0A", "evil 0A - 0A"], "nonMatches": ["evil -0A"]}, {"regex": "^[a-zA-Z0-9][a-zA-Z0-9_]{2,29}$", "exceptionStackTrace": null, "matches": ["0_____________________________", "0a_", "0A_", "00_", "a__", "A__", "0__"], "nonMatches": ["0______________________________", "0_"]}, {"regex": "\\bhttp(s?)\\:\\/\\/[a-zA-Z0-9\\/\\?\\-\\.\\&amp;\\(\\)_=#]*", "exceptionStackTrace": null, "matches": ["https://?", "https://=", "https://;", "https://:", "https:///", "https://.", "https://-", "https://)", "https://(", "https://&", "https://#", "https://eVil", "https://EVIL", "https://ev_il", "https://ev il", "https://ev4il", "https://e", "https:// ", "https://6", "https://_", "https://", "http://evil", "http://", "https://evil"], "nonMatches": ["httpss://evil"]}, {"regex": "^(\\d{1,4}?[.]{0,1}?\\d{0,3}?)$", "exceptionStackTrace": null, "matches": ["0.000", "0.", "00", "0000.0", "0", "0.0"], "nonMatches": ["0.0000", "0..0", "00000.0", ".0"]}, {"regex": "&lt;\\s*a\\s[^&gt;]*\\bhref\\s*=\\s*\n(&#39;(?&lt;url&gt;[^&#39;]*)&#39;|&quot;&quot;(?&lt;url&gt;[^&quot;&quot;]*)&quot;&quot;|(?&lt;url&gt;\\S*))[^&gt;]*&gt;\n(?&lt;body&gt;(.|\\s)*?)&lt;\\s*/a\\s*&gt;", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "((DK|FI|HU|LU|MT|SI)(-)?\\d{8})|((BE|EE|DE|EL|LT|PT)(-)?\\d{9})|((PL|SK)(-)?\\d{10})|((IT|LV)(-)?\\d{11})|((LT|SE)(-)?\\d{12})|(AT(-)?U\\d{8})|(CY(-)?\\d{8}[A-Z])|(CZ(-)?\\d{8,10})|(FR(-)?[\\dA-HJ-NP-Z]{2}\\d{9})|(IE(-)?\\d[A-Z\\d]\\d{5}[A-Z])|(NL(-)?\\d{9}B\\d{2})|(ES(-)?[A-Z\\d]\\d{7}[A-Z\\d])", "exceptionStackTrace": null, "matches": ["ES-00000000A", "ES-0000000000", "ES-A00000000", "NL-000000000B000", "IE-0A00000A", "FR-PP0000000000", "FR-JP000000000", "FR-AP000000000", "FR-0P000000000", "CZ-00000000000", "CZ-0000000000", "AT-U000000000", "LT-0000000000000", "LT-00000000000", "IT-000000000000", "PL-00000000000", "BE-0000000000", "DK-000000000", "ES000000000", "NL000000000B00", "IE0000000A", "FRPP000000000", "CZ00000000", "CY00000000A", "ATU00000000", "SE000000000000", "LT000000000000", "LV00000000000", "IT00000000000", "SK0000000000", "PL0000000000", "PT000000000", "LT000000000", "EL000000000", "DE000000000", "EE000000000", "BE000000000", "SI00000000", "MT00000000", "LU00000000", "HU00000000", "FI00000000", "DK00000000", "ES-000000000", "NL-000000000B00", "IE-0000000A", "FR-PP000000000", "CZ-00000000", "CY-00000000A", "AT-U00000000", "SE-000000000000", "LT-000000000000", "LV-00000000000", "IT-00000000000", "SK-0000000000", "PL-0000000000", "PT-000000000", "LT-000000000", "EL-000000000", "DE-000000000", "EE-000000000", "BE-000000000", "SI-00000000", "MT-00000000", "LU-00000000", "HU-00000000", "FI-00000000", "DK-00000000"], "nonMatches": ["ES-00000000", "ES--000000000", "NL-000000000B0", "NL-0000000000B00", "NL-00000000B00", "NL--000000000B00", "IE-00000000A", "IE-000000A", "IE--0000000A", "FR-PP00000000", "FR-PPP000000000", "FR-P000000000", "FR-IP000000000", "FR--PP000000000", "CZ-0000000", "CZ--00000000", "CY-000000000A", "CY-0000000A", "CY--00000000A", "AT-U0000000", "AT--U00000000", "LT--000000000000", "IT-0000000000", "IT--00000000000", "PL-000000000", "PL--0000000000", "BE-00000000", "BE--000000000", "DK-0000000", "DK--00000000"]}, {"regex": "(^([1-3]{1}[0-9]{0,}(\\.[0-9]{1})?|0(\\.[0-9]{1})?|[4]{1}[0-9]{0,}(\\.[0]{1})?|5(\\.[5]{1}))$)", "exceptionStackTrace": null, "matches": ["40", "400.0", "4.0", "440.0", "10", "100.0", "1.0", "110.0", "4", "0", "1", "5.5", "40.0", "0.0", "10.0"], "nonMatches": ["5.55", "5.", "40.0.0", "40.00", "40.", "0.0.0", "0.00", "0.", "10.0.0", "10.00", "10.", "00.0"]}, {"regex": "([1,2].)(\\d{2}.)(\\d{2}.)(\\d{2}.)(\\d{3}.)(\\d{3}.)(\\d{2})", "exceptionStackTrace": null, "matches": ["2a00a00a00a000a000a000", "2a00a00a00a000a000A00", "2a00a00a00a000a000000", "2a00a00a00a000a000,00", "2a00a00a00a000a000 00", "2a00a00a00a000A000a00", "2a00a00a00a0000000a00", "2a00a00a00a000,000a00", "2a00a00a00a000 000a00", "2a00a00a00A000a000a00", "2a00a00a000000a000a00", "2a00a00a00,000a000a00", "2a00a00a00 000a000a00", "2a00a00A00a000a000a00", "2a00a00000a000a000a00", "2a00a00,00a000a000a00", "2a00a00 00a000a000a00", "2a00A00a00a000a000a00", "2a00000a00a000a000a00", "2a00,00a00a000a000a00", "2a00 00a00a000a000a00", "2A00a00a00a000a000a00", "2000a00a00a000a000a00", "2,00a00a00a000a000a00", "2 00a00a00a000a000a00", "1a00a00a00a000a000a00", ",a00a00a00a000a000a00", "2a00a00a00a000a000a00"], "nonMatches": ["2a00a00a00a000a000a0", "2a00a00a00a000a0000a00", "2a00a00a00a000a00a00", "2a00a00a00a0000a000a00", "2a00a00a00a00a000a00", "2a00a00a000a000a000a00", "2a00a00a0a000a000a00", "2a00a000a00a000a000a00", "2a00a0a00a000a000a00", "2a000a00a00a000a000a00", "2a0a00a00a000a000a00", "0a00a00a00a000a000a00"]}, {"regex": "http://www.towarzfitness.com", "exceptionStackTrace": null, "matches": ["http://wwwatowarzfitnessAcom", "http://wwwatowarzfitness:com", "http://wwwatowarzfitness0com", "http://wwwatowarzfitness/com", "http://wwwatowarzfitness com", "http://wwwAtowarzfitnessacom", "http://www:towarzfitnessacom", "http://www0towarzfitnessacom", "http://www/towarzfitnessacom", "http://www towarzfitnessacom", "http://wwwatowarzfitnessacom"], "nonMatches": []}, {"regex": "^(?<lat>(-?(90|(\\d|[1-8]\\d)(\\.\\d{1,6}){0,1})))\\,{1}\\s?(?<long>(-?(180|(\\d|\\d\\d|1[0-7]\\d)(\\.\\d{1,6}){0,1})))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "^[a-zA-Z0-9]+[\\s]*[a-zA-Z0-9.\\-\\,\\#]+[\\s]*[a-zA-Z0-9.\\-\\,\\#]+[a-zA-Z0-9\\s.\\-\\,\\#]*$", "exceptionStackTrace": null, "matches": ["evil evil evil.", "evil evil evil-", "evil evil evil,", "evil evil evil#", "evil evil evileVil", "evil evil evilEVIL", "evil evil evilev il", "evil evil evilev4il", "evil evil evile", "evil evil evil ", "evil evil evil6", "evil evil .evil", "evil evil -evil", "evil evil ,evil", "evil evil #evil", "evil evil eVilevil", "evil evil EVILevil", "evil evil ev ilevil", "evil evil ev4ilevil", "evil evil eevil", "evil evil  evil", "evil evil 6evil", "evil evil evil", "evil evil  evilevil", "evil evilevilevil", "evil . evilevil", "evil - evilevil", "evil , evilevil", "evil # evilevil", "evil eVil evilevil", "evil EVIL evilevil", "evil ev il evilevil", "evil ev4il evilevil", "evil e evilevil", "evil   evilevil", "evil 6 evilevil", "evil  evilevil", "evil  evil evilevil", "evilevil evilevil", "eVil evil evilevil", "EVIL evil evilevil", "ev il evil evilevil", "ev4il evil evilevil", "e evil evilevil", "6 evil evilevil", "evilevilevil", "evil evil evilevil"], "nonMatches": ["evil evil evilev_il", "evil evil evil_", "evil evil ev_ilevil", "evil evil _evil", "evil ev_il evilevil", "evil _ evilevil", "ev_il evil evilevil", "  evil evilevil", "_ evil evilevil", " evil evilevil"]}, {"regex": "^[A-Z0-9._-]+@[A-Z0-9.-]+\\.[A-Z0-9.-]+$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["evil@evil.@", "evil@evil..", "evil@evil.-", "evil@evil.eVil", "evil@evil.EVIL", "evil@evil.ev_il", "evil@evil.ev il", "evil@evil.ev4il", "evil@evil.e", "evil@evil. ", "evil@evil.6", "evil@evil._", "evil@evil.", "evil@@.evil", "evil@..evil", "evil@-.evil", "evil@eVil.evil", "evil@EVIL.evil", "evil@ev_il.evil", "evil@ev il.evil", "evil@ev4il.evil", "evil@e.evil", "evil@ .evil", "evil@6.evil", "evil@_.evil", "evil@.evil", "@@evil.evil", ".@evil.evil", "-@evil.evil", "eVil@evil.evil", "EVIL@evil.evil", "ev_il@evil.evil", "ev il@evil.evil", "ev4il@evil.evil", "e@evil.evil", " @evil.evil", "6@evil.evil", "_@evil.evil", "@evil.evil", "evil@evil.evil"]}, {"regex": "^\\-?\\(?([0-9]{0,3}(\\,?[0-9]{3})*(\\.?[0-9]*))\\)?$", "exceptionStackTrace": null, "matches": ["-(0,000.0", "-(0,000.00)", "-(0,000.)", "-(0,0000)", "-(0,000,000.0)", "-(0.0)", "-(0000.0)", "-(0000,000.0)", "-(000,000.0)", "-(,000.0)", "-0,000.0)", "(0,000.0)", "", "-(0,000.0)"], "nonMatches": ["-(0,000.0))", "-(0,000..0)", "-(0,0000.0)", "-(0,00.0)", "-(0,,000.0)", "-((0,000.0)", "--(0,000.0)"]}, {"regex": "^([0-9][0-9])[.]([0-9][0-9])[.]([0-9][0-9])$", "exceptionStackTrace": null, "matches": ["00.00.00"], "nonMatches": []}, {"regex": "^(0+[1-9]|[1-9])[0-9]*$", "exceptionStackTrace": null, "matches": ["0100", "0010", "1", "01", "10", "010"], "nonMatches": ["00", "000"]}, {"regex": "^[A-Z]{3}-[0-9]{4}$", "exceptionStackTrace": null, "matches": ["AAA-0000"], "nonMatches": ["AAA-00000", "AAA-000", "AAAA-0000", "AA-0000"]}, {"regex": "^((CN=[&#39;\\w\\d\\s\\-\\&amp;]+,)+(OU=[&#39;\\w\\d\\s\\-\\&amp;]+,)*(DC=[&#39;\\w\\d\\s\\-\\&amp;]+[,]*){2,})$", "exceptionStackTrace": null, "matches": ["CN=evil,OU=evil,DC=evil,,DC=evil,", "CN=evil,OU=evil,DC=evilDC=evil,", "CN=evil,OU=evil,DC=;,DC=evil,", "CN=evil,OU=evil,DC=-,DC=evil,", "CN=evil,OU=evil,DC=&,DC=evil,", "CN=evil,OU=evil,DC=#,DC=evil,", "CN=evil,OU=evil,DC=eVil,DC=evil,", "CN=evil,OU=evil,DC=EVIL,DC=evil,", "CN=evil,OU=evil,DC=ev_il,DC=evil,", "CN=evil,OU=evil,DC=ev il,DC=evil,", "CN=evil,OU=evil,DC=ev4il,DC=evil,", "CN=evil,OU=evil,DC=e,DC=evil,", "CN=evil,OU=evil,DC= ,DC=evil,", "CN=evil,OU=evil,DC=6,DC=evil,", "CN=evil,OU=evil,DC=_,DC=evil,", "CN=evil,OU=evil,OU=evil,DC=evil,DC=evil,", "CN=evil,DC=evil,DC=evil,", "CN=evil,OU=;,DC=evil,DC=evil,", "CN=evil,OU=-,DC=evil,DC=evil,", "CN=evil,OU=&,DC=evil,DC=evil,", "CN=evil,OU=#,DC=evil,DC=evil,", "CN=evil,OU=eVil,DC=evil,DC=evil,", "CN=evil,OU=EVIL,DC=evil,DC=evil,", "CN=evil,OU=ev_il,DC=evil,DC=evil,", "CN=evil,OU=ev il,DC=evil,DC=evil,", "CN=evil,OU=ev4il,DC=evil,DC=evil,", "CN=evil,OU=e,DC=evil,DC=evil,", "CN=evil,OU= ,DC=evil,DC=evil,", "CN=evil,OU=6,DC=evil,DC=evil,", "CN=evil,OU=_,DC=evil,DC=evil,", "CN=evil,CN=evil,OU=evil,DC=evil,DC=evil,", "CN=;,OU=evil,DC=evil,DC=evil,", "CN=-,OU=evil,DC=evil,DC=evil,", "CN=&,OU=evil,DC=evil,DC=evil,", "CN=#,OU=evil,DC=evil,DC=evil,", "CN=eVil,OU=evil,DC=evil,DC=evil,", "CN=EVIL,OU=evil,DC=evil,DC=evil,", "CN=ev_il,OU=evil,DC=evil,DC=evil,", "CN=ev il,OU=evil,DC=evil,DC=evil,", "CN=ev4il,OU=evil,DC=evil,DC=evil,", "CN=e,OU=evil,DC=evil,DC=evil,", "CN= ,OU=evil,DC=evil,DC=evil,", "CN=6,OU=evil,DC=evil,DC=evil,", "CN=_,OU=evil,DC=evil,DC=evil,", "CN=evil,DC=evilDC=evil,", "CN=evil,OU=evil,DC=evil,DC=evil,"], "nonMatches": ["CN=evil,OU=evil,DC=evil,", "CN=evil,OU=evil,DC==,DC=evil,", "CN=evil,OU=evil,DC=,,DC=evil,", "CN=evil,OU=evil,DC=,DC=evil,", "CN=evil,OU==,DC=evil,DC=evil,", "CN=evil,OU=,,DC=evil,DC=evil,", "CN=evil,OU=,DC=evil,DC=evil,", "OU=evil,DC=evil,DC=evil,", "CN==,OU=evil,DC=evil,DC=evil,", "CN=,,OU=evil,DC=evil,DC=evil,", "CN=,OU=evil,DC=evil,DC=evil,"]}, {"regex": "\\b(\\w+)\\s+\\1\\b", "exceptionStackTrace": null, "matches": ["evil  evil", "evil evil"], "nonMatches": ["evilevil", "eVil evil", "EVIL evil", "ev_il evil", "ev il evil", "ev4il evil", "e evil", "  evil", "6 evil", "_ evil", " evil"]}, {"regex": "(?:(?<scheme>http(?:s?)|net\\.(?:tcp|pipe|msmq))(?:\\:\\/\\/))(?<machine>[^/\\r\\n\\:]+)?(?:\\:)(?<port>\\d+)?(?<path>(?:\\/.*)*\\/?)?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<s"}, "matches": []}, {"regex": "^(?:(?:http|https|ftp|telnet|gopher|ms\\-help|file|notes)://)?(?:(?:[a-z][\\w~%!&amp;&#39;,;=\\-\\.$\\(\\)\\*\\+]*):.*@)?(?:(?:[a-z0-9][\\w\\-]*[a-z0-9]*\\.)*(?:(?:(?:(?:[a-z0-9][\\w\\-]*[a-z0-9]*)(?:\\.[a-z0-9]+)?)|(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))(?::[0-9]+)?))?(?:(?:(?:/(?:[\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(?:%\\d\\d))+)*/(?:[\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(?:%\\d\\d))*)(?:\\?[^#]+)?(?:#[a-z0-9]\\w*)?)?$", "exceptionStackTrace": null, "matches": ["http://aevil:evil@0evilevil.1000.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.10.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.1100.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.00.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.200.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.000.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.200.200.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.1000:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.10:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.1100:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.00:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.000:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.256:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.256.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0eVil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0EVIL", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev_il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev4il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0e", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#06", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0_", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#aevil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?~#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?}#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?|#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?{#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?`#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?^#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?]#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?[#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?@#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]??#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?=#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?;#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?:#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?/#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?.#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?-#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?,#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?+#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?*#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?)#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?(#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?&#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?%#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?$#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?!#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?eVil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?EVIL#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev_il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev4il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?e#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]? #0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?6#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?_#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/~?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/}?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/|?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/{?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/a?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/`?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/_?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/^?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/[?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/A?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/=?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/;?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/0?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/.?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/-?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/+?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/)?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/(?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/$?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/!?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/~/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/}/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/|/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/{/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/a/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/`/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/_/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/^/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/[/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/A/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/=/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/;/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/0/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/./]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/-/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/+/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/)/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/(/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/$/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/!/]?evil#0evil", "http://aevil:evil@/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:00/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.eVil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev_il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev4il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.e:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.6:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evileVil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilEVIL.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev_il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev4il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evile.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil6.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil_.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0@evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0.evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0-evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0eVilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0EVILevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev_ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev4ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0eevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.06evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0_evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.aevilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evileVil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilEVIL.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev_il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev4il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evile.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil6.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil_.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0@evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0.evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0-evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0eVilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0EVILevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev_ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev4ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0eevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@06evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0_evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@aevilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:~@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:}@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:|@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:{@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:`@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:^@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:]@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:[@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:@@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:?@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:=@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:;@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil::@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:/@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:.@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:-@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:,@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:+@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:*@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:)@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:(@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:&@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:%@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:$@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:#@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:!@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:eVil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:EVIL@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev_il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev4il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:e@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil: @0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:6@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:_@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a~:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a}:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a|:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a{:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a`:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a^:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a]:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a[:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a@:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a?:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a=:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a;:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a::evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a/:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a.:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a-:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a,:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a+:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a*:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a):evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a(:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a&:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a%:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a$:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a#:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a!:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aeVil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aEVIL:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev_il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev4il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://ae:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a :evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a6:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a_:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "", "notes://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "file://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "ms-help://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "gopher://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "telnet://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "ftp://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "https://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.100.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.200.200.200.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.100:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.200:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/%00/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/%00?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil"], "nonMatches": ["http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0 ", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?##0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0//]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:00evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.EVIL:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil. :0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil._:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil .evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0~evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0}evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0|evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0{evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0`evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0^evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0]evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0[evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0?evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0=evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0;evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0:evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0/evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0,evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0+evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0*evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0)evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0(evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0&evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0%evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0$evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0#evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0!evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0 evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil .0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0~evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0}evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0|evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0{evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0`evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0^evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0]evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0[evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0?evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0=evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0;evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0:evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0/evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0,evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0+evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0*evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0)evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0(evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0&evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0%evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0$evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0#evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0!evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0 evil.0evilevil.evil:0/]/]?evil#0evil"]}, {"regex": "^(?:mailto:)?(?:[a-z][\\w~%!&amp;&#39;,;=\\-\\.$\\(\\)\\*\\+]*)@(?:[a-z0-9][\\w\\-]*[a-z0-9]*\\.)*(?:(?:(?:[a-z0-9][\\w\\-]*[a-z0-9]*)(?:\\.[a-z0-9]+)?)|(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))$", "exceptionStackTrace": null, "matches": ["mailto:aevil@0evilevil.1000.100.100.250", "mailto:aevil@0evilevil.10.100.100.250", "mailto:aevil@0evilevil.1100.100.100.250", "mailto:aevil@0evilevil.00.100.100.250", "mailto:aevil@0evilevil.200.100.100.250", "mailto:aevil@0evilevil.000.100.100.250", "mailto:aevil@0evilevil.250.200.200.250", "mailto:aevil@0evilevil.250.250.250.1000", "mailto:aevil@0evilevil.250.250.250.10", "mailto:aevil@0evilevil.250.250.250.1100", "mailto:aevil@0evilevil.250.250.250.00", "mailto:aevil@0evilevil.250.250.250.000", "mailto:aevil@0evilevil.250.250.250.256", "mailto:aevil@0evilevil.250.250.250.250.250", "mailto:aevil@0evilevil.250.250.250", "mailto:aevil@0evilevil.256.250.250.250", "mailto:aevil@0evilevil.0evilevil.evil.evil", "mailto:aevil@0evilevil.0evilevil", "mailto:aevil@0evilevil.0evilevil.eVil", "mailto:aevil@0evilevil.0evilevil.ev_il", "mailto:aevil@0evilevil.0evilevil.ev4il", "mailto:aevil@0evilevil.0evilevil.e", "mailto:aevil@0evilevil.0evilevil.6", "mailto:aevil@0evilevil.0evileVil.evil", "mailto:aevil@0evilevil.0evilEVIL.evil", "mailto:aevil@0evilevil.0evilev_il.evil", "mailto:aevil@0evilevil.0evilev4il.evil", "mailto:aevil@0evilevil.0evile.evil", "mailto:aevil@0evilevil.0evil6.evil", "mailto:aevil@0evilevil.0evil_.evil", "mailto:aevil@0evilevil.0.evil.evil", "mailto:aevil@0evilevil.0-evil.evil", "mailto:aevil@0evilevil.0eVilevil.evil", "mailto:aevil@0evilevil.0EVILevil.evil", "mailto:aevil@0evilevil.0ev_ilevil.evil", "mailto:aevil@0evilevil.0ev4ilevil.evil", "mailto:aevil@0evilevil.0eevil.evil", "mailto:aevil@0evilevil.06evil.evil", "mailto:aevil@0evilevil.0_evil.evil", "mailto:aevil@0evilevil.0evil.evil", "mailto:aevil@0evilevil.aevilevil.evil", "mailto:aevil@0evilevil.0evilevil.0evilevil.evil", "mailto:aevil@0evilevil.evil", "mailto:aevil@0evileVil.0evilevil.evil", "mailto:aevil@0evilEVIL.0evilevil.evil", "mailto:aevil@0evilev_il.0evilevil.evil", "mailto:aevil@0evilev4il.0evilevil.evil", "mailto:aevil@0evile.0evilevil.evil", "mailto:aevil@0evil6.0evilevil.evil", "mailto:aevil@0evil_.0evilevil.evil", "mailto:aevil@0.evil.0evilevil.evil", "mailto:aevil@0-evil.0evilevil.evil", "mailto:aevil@0eVilevil.0evilevil.evil", "mailto:aevil@0EVILevil.0evilevil.evil", "mailto:aevil@0ev_ilevil.0evilevil.evil", "mailto:aevil@0ev4ilevil.0evilevil.evil", "mailto:aevil@0eevil.0evilevil.evil", "mailto:aevil@06evil.0evilevil.evil", "mailto:aevil@0_evil.0evilevil.evil", "mailto:aevil@0evil.0evilevil.evil", "mailto:aevil@aevilevil.0evilevil.evil", "mailto:a~@0evilevil.0evilevil.evil", "mailto:a=@0evilevil.0evilevil.evil", "mailto:a;@0evilevil.0evilevil.evil", "mailto:a.@0evilevil.0evilevil.evil", "mailto:a-@0evilevil.0evilevil.evil", "mailto:a,@0evilevil.0evilevil.evil", "mailto:a+@0evilevil.0evilevil.evil", "mailto:a*@0evilevil.0evilevil.evil", "mailto:a)@0evilevil.0evilevil.evil", "mailto:a(@0evilevil.0evilevil.evil", "mailto:a&@0evilevil.0evilevil.evil", "mailto:a%@0evilevil.0evilevil.evil", "mailto:a$@0evilevil.0evilevil.evil", "mailto:a#@0evilevil.0evilevil.evil", "mailto:a!@0evilevil.0evilevil.evil", "mailto:aeVil@0evilevil.0evilevil.evil", "mailto:aEVIL@0evilevil.0evilevil.evil", "mailto:aev_il@0evilevil.0evilevil.evil", "mailto:aev4il@0evilevil.0evilevil.evil", "mailto:ae@0evilevil.0evilevil.evil", "mailto:a6@0evilevil.0evilevil.evil", "mailto:a_@0evilevil.0evilevil.evil", "mailto:a@0evilevil.0evilevil.evil", "aevil@0evilevil.0evilevil.evil", "a@0.100.100.250", "a@200.100.100.250", "a@250.100.100.0", "a@250.100.100.200", "a@250.100.100.250", "a@0", "mailto:aevil@0evilevil.100.100.100.250", "mailto:aevil@0evilevil.200.200.200.250", "mailto:aevil@0evilevil.250.250.250.100", "mailto:aevil@0evilevil.250.250.250.200", "mailto:aevil@0evilevil.250.250.250.250", "mailto:aevil@0evilevil.0evilevil.evil"], "nonMatches": ["mailto:aevil@0evilevil.0evilevil.EVIL", "mailto:aevil@0evilevil.0evilevil.ev il", "mailto:aevil@0evilevil.0evilevil. ", "mailto:aevil@0evilevil.0evilevil._", "mailto:aevil@0evilevil.0evilevil.", "mailto:aevil@0evilevil.0evilev il.evil", "mailto:aevil@0evilevil.0evil .evil", "mailto:aevil@0evilevil.0~evil.evil", "mailto:aevil@0evilevil.0@evil.evil", "mailto:aevil@0evilevil.0=evil.evil", "mailto:aevil@0evilevil.0;evil.evil", "mailto:aevil@0evilevil.0:evil.evil", "mailto:aevil@0evilevil.0,evil.evil", "mailto:aevil@0evilevil.0+evil.evil", "mailto:aevil@0evilevil.0*evil.evil", "mailto:aevil@0evilevil.0)evil.evil", "mailto:aevil@0evilevil.0(evil.evil", "mailto:aevil@0evilevil.0&evil.evil", "mailto:aevil@0evilevil.0%evil.evil", "mailto:aevil@0evilevil.0$evil.evil", "mailto:aevil@0evilevil.0#evil.evil", "mailto:aevil@0evilevil.0!evil.evil", "mailto:aevil@0evilevil.0ev ilevil.evil", "mailto:aevil@0evilevil.0 evil.evil", "mailto:aevil@0evilev il.0evilevil.evil", "mailto:aevil@0evil .0evilevil.evil", "mailto:aevil@0~evil.0evilevil.evil", "mailto:aevil@0@evil.0evilevil.evil", "mailto:aevil@0=evil.0evilevil.evil", "mailto:aevil@0;evil.0evilevil.evil", "mailto:aevil@0:evil.0evilevil.evil", "mailto:aevil@0,evil.0evilevil.evil", "mailto:aevil@0+evil.0evilevil.evil", "mailto:aevil@0*evil.0evilevil.evil", "mailto:aevil@0)evil.0evilevil.evil", "mailto:aevil@0(evil.0evilevil.evil", "mailto:aevil@0&evil.0evilevil.evil", "mailto:aevil@0%evil.0evilevil.evil", "mailto:aevil@0$evil.0evilevil.evil", "mailto:aevil@0#evil.0evilevil.evil", "mailto:aevil@0!evil.0evilevil.evil", "mailto:aevil@0ev ilevil.0evilevil.evil", "mailto:aevil@0 evil.0evilevil.evil", "mailto:a@@0evilevil.0evilevil.evil", "mailto:a:@0evilevil.0evilevil.evil", "mailto:aev il@0evilevil.0evilevil.evil", "mailto:a @0evilevil.0evilevil.evil", "mailto:mailto:aevil@0evilevil.0evilevil.evil"]}, {"regex": "^(?<username>[a-z][\\w.-]*)(?::(?<pwd>[\\w.-]*))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<u"}, "matches": []}, {"regex": "^(?:[a-z0-9][\\w\\-]*[a-z0-9]*\\.)*(?:(?:(?:[a-z0-9][\\w\\-]*[a-z0-9]*)(?:\\.[a-z0-9]+)?)|(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))$", "exceptionStackTrace": null, "matches": ["0evilevil.1000.100.100.250", "0evilevil.10.100.100.250", "0evilevil.1100.100.100.250", "0evilevil.00.100.100.250", "0evilevil.200.100.100.250", "0evilevil.000.100.100.250", "0evilevil.250.200.200.250", "0evilevil.250.250.250.1000", "0evilevil.250.250.250.10", "0evilevil.250.250.250.1100", "0evilevil.250.250.250.00", "0evilevil.250.250.250.000", "0evilevil.250.250.250.256", "0evilevil.250.250.250.250.250", "0evilevil.250.250.250", "0evilevil.256.250.250.250", "0evilevil.0evilevil.evil.evil", "0evilevil.0evilevil", "0evilevil.0evilevil.eVil", "0evilevil.0evilevil.ev_il", "0evilevil.0evilevil.ev4il", "0evilevil.0evilevil.e", "0evilevil.0evilevil.6", "0evilevil.0evileVil.evil", "0evilevil.0evilEVIL.evil", "0evilevil.0evilev_il.evil", "0evilevil.0evilev4il.evil", "0evilevil.0evile.evil", "0evilevil.0evil6.evil", "0evilevil.0evil_.evil", "0evilevil.0.evil.evil", "0evilevil.0-evil.evil", "0evilevil.0eVilevil.evil", "0evilevil.0EVILevil.evil", "0evilevil.0ev_ilevil.evil", "0evilevil.0ev4ilevil.evil", "0evilevil.0eevil.evil", "0evilevil.06evil.evil", "0evilevil.0_evil.evil", "0evilevil.0evil.evil", "0evilevil.aevilevil.evil", "0evilevil.0evilevil.0evilevil.evil", "0evilevil.evil", "0evileVil.0evilevil.evil", "0evilEVIL.0evilevil.evil", "0evilev_il.0evilevil.evil", "0evilev4il.0evilevil.evil", "0evile.0evilevil.evil", "0evil6.0evilevil.evil", "0evil_.0evilevil.evil", "0.evil.0evilevil.evil", "0-evil.0evilevil.evil", "0eVilevil.0evilevil.evil", "0EVILevil.0evilevil.evil", "0ev_ilevil.0evilevil.evil", "0ev4ilevil.0evilevil.evil", "0eevil.0evilevil.evil", "06evil.0evilevil.evil", "0_evil.0evilevil.evil", "0evil.0evilevil.evil", "aevilevil.0evilevil.evil", "0.100.100.250", "200.100.100.250", "250.100.100.0", "250.100.100.200", "250.100.100.250", "0", "0evilevil.100.100.100.250", "0evilevil.200.200.200.250", "0evilevil.250.250.250.100", "0evilevil.250.250.250.200", "0evilevil.250.250.250.250", "0evilevil.0evilevil.evil"], "nonMatches": ["0evilevil.0evilevil.EVIL", "0evilevil.0evilevil.ev il", "0evilevil.0evilevil. ", "0evilevil.0evilevil._", "0evilevil.0evilevil.", "0evilevil.0evilev il.evil", "0evilevil.0evil .evil", "0evilevil.0ev ilevil.evil", "0evilevil.0 evil.evil", "0evilev il.0evilevil.evil", "0evil .0evilevil.evil", "0ev ilevil.0evilevil.evil", "0 evil.0evilevil.evil"]}, {"regex": "^(?:(?:\\.\\./)|/)?(?:\\w(?:[\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(?:%\\d\\d))*\\w?)?(?:/\\w(?:[\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(?:%\\d\\d))*\\w?)*(?:\\?[^#]+)?(?:#[a-z0-9]\\w*)?$", "exceptionStackTrace": null, "matches": ["../a]a/a]a?evil", "../a]a/a]a?evil#0eVil", "../a]a/a]a?evil#0EVIL", "../a]a/a]a?evil#0ev_il", "../a]a/a]a?evil#0ev4il", "../a]a/a]a?evil#0e", "../a]a/a]a?evil#06", "../a]a/a]a?evil#0_", "../a]a/a]a?evil#0", "../a]a/a]a?evil#aevil", "../a]a/a]a?evil?evil#0evil", "../a]a/a]a#0evil", "../a]a/a]a?~#0evil", "../a]a/a]a?}#0evil", "../a]a/a]a?|#0evil", "../a]a/a]a?{#0evil", "../a]a/a]a?`#0evil", "../a]a/a]a?^#0evil", "../a]a/a]a?]#0evil", "../a]a/a]a?[#0evil", "../a]a/a]a??#0evil", "../a]a/a]a?=#0evil", "../a]a/a]a?;#0evil", "../a]a/a]a?/#0evil", "../a]a/a]a?.#0evil", "../a]a/a]a?-#0evil", "../a]a/a]a?+#0evil", "../a]a/a]a?)#0evil", "../a]a/a]a?(#0evil", "../a]a/a]a?%#0evil", "../a]a/a]a?$#0evil", "../a]a/a]a?!#0evil", "../a]a/a]a?eVil#0evil", "../a]a/a]a?EVIL#0evil", "../a]a/a]a?ev_il#0evil", "../a]a/a]a?ev il#0evil", "../a]a/a]a?ev4il#0evil", "../a]a/a]a?e#0evil", "../a]a/a]a? #0evil", "../a]a/a]a?6#0evil", "../a]a/a]a?_#0evil", "../a]a/a]a/a]a?evil#0evil", "../a]a?evil#0evil", "../a]a/a]aa?evil#0evil", "../a]a/a]?evil#0evil", "../a]a/a]_?evil#0evil", "../a]a/a]A?evil#0evil", "../a]a/a]0?evil#0evil", "../a]a/a]]a?evil#0evil", "../a]a/aa?evil#0evil", "../a]a/a~a?evil#0evil", "../a]a/a}a?evil#0evil", "../a]a/a|a?evil#0evil", "../a]a/a{a?evil#0evil", "../a]a/aaa?evil#0evil", "../a]a/a`a?evil#0evil", "../a]a/a_a?evil#0evil", "../a]a/a^a?evil#0evil", "../a]a/a[a?evil#0evil", "../a]a/aAa?evil#0evil", "../a]a/a=a?evil#0evil", "../a]a/a;a?evil#0evil", "../a]a/a0a?evil#0evil", "../a]a/a.a?evil#0evil", "../a]a/a-a?evil#0evil", "../a]a/a+a?evil#0evil", "../a]a/a)a?evil#0evil", "../a]a/a(a?evil#0evil", "../a]a/a$a?evil#0evil", "../a]a/a!a?evil#0evil", "../a]a/_]a?evil#0evil", "../a]a/A]a?evil#0evil", "../a]a/0]a?evil#0evil", "../a]aa]a/a]a?evil#0evil", "..//a]a?evil#0evil", "../a]aa/a]a?evil#0evil", "../a]/a]a?evil#0evil", "../a]_/a]a?evil#0evil", "../a]A/a]a?evil#0evil", "../a]0/a]a?evil#0evil", "../a]]a/a]a?evil#0evil", "../aa/a]a?evil#0evil", "../a~a/a]a?evil#0evil", "../a}a/a]a?evil#0evil", "../a|a/a]a?evil#0evil", "../a{a/a]a?evil#0evil", "../aaa/a]a?evil#0evil", "../a`a/a]a?evil#0evil", "../a_a/a]a?evil#0evil", "../a^a/a]a?evil#0evil", "../a[a/a]a?evil#0evil", "../aAa/a]a?evil#0evil", "../a=a/a]a?evil#0evil", "../a;a/a]a?evil#0evil", "../a0a/a]a?evil#0evil", "../a.a/a]a?evil#0evil", "../a-a/a]a?evil#0evil", "../a+a/a]a?evil#0evil", "../a)a/a]a?evil#0evil", "../a(a/a]a?evil#0evil", "../a$a/a]a?evil#0evil", "../a!a/a]a?evil#0evil", "../_]a/a]a?evil#0evil", "../A]a/a]a?evil#0evil", "../0]a/a]a?evil#0evil", "a]a/a]a?evil#0evil", "", "/a]a/a]a?evil#0evil", "../a%00a/a]a?evil#0evil", "../a]a/a%00a?evil#0evil", "../a]a/a]a?evil#0evil"], "nonMatches": ["../a]a/a]a?evil#0evil#0evil", "../a]a/a]a?evil#0ev il", "../a]a/a]a?evil#0 ", "../a]a/a]a?##0evil", "../a]a/a]a?#0evil", "../../a]a/a]a?evil#0evil"]}, {"regex": "^#[\\dA-Fa-f]{3}(?:[\\dA-Fa-f]{3}[\\dA-Fa-f]{0,2})?$", "exceptionStackTrace": null, "matches": ["#aaaaaaA", "#aaaaaa0", "#aaaAaaa", "#aaa0aaa", "#aaaaaaaa", "#aaaaaa", "#Aaaaaaa", "#0aaaaaa", "#aaa", "#aaaaaaa"], "nonMatches": ["#aaaaaaaaaaa", "#aaaaaaaaa", "#aaaaaag", "#aaaaaaG", "#aaagaaa", "#aaaGaaa", "#gaaaaaa", "#Gaaaaaa"]}, {"regex": "((http|https|ftp|telnet|gopher|ms\\-help|file|notes)://)?(([a-z][\\w~%!&amp;&#39;,;=\\-\\.$\\(\\)\\*\\+]*)(:.*)?@)?(([a-z0-9][\\w\\-]*[a-z0-9]*\\.)*(((([a-z0-9][\\w\\-]*[a-z0-9]*)(\\.[a-z0-9]+)?)|(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))(:[0-9]+)?))?(((/([\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(%\\d\\d))+)*/([\\w`~!$=;\\-\\+\\.\\^\\(\\)\\|\\{\\}\\[\\]]|(%\\d\\d))*)(\\?[^#]+)?(#[a-z0-9]\\w*)?)?", "exceptionStackTrace": null, "matches": ["http://aevil:evil@0evilevil.1000.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.10.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.1100.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.00.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.200.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.000.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.200.200.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.1000:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.10:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.1100:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.00:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.000:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.256:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.256.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0eVil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0EVIL", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev_il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0ev4il", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0e", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0 ", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#06", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0_", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#aevil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?~#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?}#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?|#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?{#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?`#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?^#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?]#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?[#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?@#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]??#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?=#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?;#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?:#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?/#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?.#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?-#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?,#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?+#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?*#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?)#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?(#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?&#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?%#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?$#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?##0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?!#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?eVil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?EVIL#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev_il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?ev4il#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?e#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]? #0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?6#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?_#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/~?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/}?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/|?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/{?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/a?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/`?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/_?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/^?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/[?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/A?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/=?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/;?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/0?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/.?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/-?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/+?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/)?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/(?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/$?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/!?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0//]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/~/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/}/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/|/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/{/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/a/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/`/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/_/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/^/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/[/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/A/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/=/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/;/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/0/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/./]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/-/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/+/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/)/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/(/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/$/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/!/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:00evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:00/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.eVil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.EVIL:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev_il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.ev4il:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.e:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil. :0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.6:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil._:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evileVil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilEVIL.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev_il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilev4il.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evile.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil .evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil6.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil_.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0~evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0}evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0|evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0{evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0`evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0^evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0]evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0[evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0@evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0?evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0=evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0;evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0:evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0/evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0.evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0-evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0,evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0+evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0*evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0)evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0(evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0&evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0%evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0$evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0#evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0!evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0eVilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0EVILevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev_ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0ev4ilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0eevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0 evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.06evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0_evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.aevilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evileVil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilEVIL.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev_il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilev4il.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evile.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil .0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil6.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil_.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0~evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0}evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0|evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0{evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0`evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0^evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0]evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0[evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0@evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0?evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0=evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0;evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0:evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0/evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0.evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0-evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0,evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0+evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0*evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0)evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0(evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0&evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0%evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0$evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0#evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0!evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0eVilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0EVILevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev_ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0ev4ilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0eevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0 evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@06evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0_evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@aevilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:~@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:}@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:|@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:{@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:`@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:^@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:]@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:[@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:@@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:?@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:=@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:;@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil::@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:/@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:.@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:-@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:,@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:+@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:*@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:)@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:(@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:&@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:%@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:$@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:#@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:!@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:eVil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:EVIL@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev_il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:ev4il@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:e@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil: @0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:6@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:_@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a~:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a}:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a|:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a{:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a`:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a^:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a]:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a[:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a@:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a?:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a=:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a;:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a::evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a/:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a.:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a-:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a,:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a+:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a*:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a):evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a(:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a&:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a%:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a$:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a#:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a!:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aeVil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aEVIL:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev_il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aev4il:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://ae:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a :evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a6:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a_:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://a:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "", "notes://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "file://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "ms-help://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "gopher://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "telnet://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "ftp://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "https://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.100.100.100.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.200.200.200.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.100:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.200:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.250.250.250.250:0/]/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/%00/]?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/%00?evil#0evil", "http://aevil:evil@0evilevil.0evilevil.evil:0/]/]?evil#0evil"], "nonMatches": []}, {"regex": "^[+]?\\d*$", "exceptionStackTrace": null, "matches": ["+00", "+", "0", "", "+0"], "nonMatches": ["++0"]}, {"regex": "(\\s+|)((\\(\\d{3}\\) +)|(\\d{3}-)|(\\d{3} +))?\\d{3}(-| +)\\d{4}( +x\\d{1,4})?(\\s+|)", "exceptionStackTrace": null, "matches": [" 000  000-0000 x0 ", " 000000-0000 x0 ", " 0000 000-0000 x0 ", " 00 000-0000 x0 ", " 0000-000-0000 x0 ", " 00-000-0000 x0 ", " (000) 000  0000 x0 ", " (000) 000-0000 x0  ", " (000) 000-0000 x0", " (000) 000-0000 x0 x0 ", " (000) 000-0000 ", " (000) 000-0000 x00000 ", " (000) 000-0000 x0000 ", " (000) 000-0000 x ", " (000) 000-0000  x0 ", " (000) 000-0000x0 ", " (000) 000-00000 x0 ", " (000) 0000-0000 x0 ", " (000) (000) 000-0000 x0 ", " 000-0000 x0 ", " (000)  000-0000 x0 ", " (000)000-0000 x0 ", " (0000) 000-0000 x0 ", " (00) 000-0000 x0 ", "  (000) 000-0000 x0 ", "(000) 000-0000 x0 ", "000 0000", "000-0000", " 000 000-0000 x0 ", " 000-000-0000 x0 ", " (000) 000 0000 x0 ", " (000) 000-0000 x0 "], "nonMatches": [" (000) 0000000 x0 ", " (000) 000-000 x0 ", " (000) 00-0000 x0 "]}, {"regex": "\\.([A-Za-z0-9]{2,5}($|\\b\\?))", "exceptionStackTrace": null, "matches": [".00000", ".a0", ".A0", ".00?", ".00"], "nonMatches": [".000000", ".0"]}, {"regex": "url\\([&#39;&quot;]?([\\w\\d_\\-\\. ]+)[&#39;&quot;]?\\)", "exceptionStackTrace": null, "matches": ["url(;evil)", "url(;evilu)", "url(;evilt)", "url(;evilq)", "url(;evilo)", "url(;evila)", "url(;evil9)", "url(;evil3)", "url(;evil0)", "url(;evil&)", "url(;evil#)", "url(;.;)", "url(;-;)", "url(;eVil;)", "url(;EVIL;)", "url(;ev_il;)", "url(;ev il;)", "url(;ev4il;)", "url(;e;)", "url(; ;)", "url(;6;)", "url(;_;)", "url(evil;)", "url(uevil;)", "url(tevil;)", "url(qevil;)", "url(oevil;)", "url(aevil;)", "url(9evil;)", "url(3evil;)", "url(0evil;)", "url(&evil;)", "url(#evil;)", "url(evil)", "url(;evil;)"], "nonMatches": ["url(;evil;;)", "url(;;;)", "url(;);)", "url(;(;)", "url(;&;)", "url(;#;)", "url(;;)", "url(;;evil;)"]}, {"regex": "(\\d+(?:\\s+d(?:ay)?s?))?\\s?(\\d+(?:\\s+h(?:ou)?r?s?))?\\s?(\\d+(?:\\s+m(?:in)?(?:ute)?s?))?\\s?(\\d+(?:\\s+s(?:ec)?(?:ond)?)?s?)?$", "exceptionStackTrace": null, "matches": ["0 days 0 hours 0 minutes 0 seconds0 seconds", "0 days 0 hours 0 minutes ", "0 days 0 hours 0 minutes 0 secondss", "0 days 0 hours 0 minutes 0 second", "0 days 0 hours 0 minutes 0 second seconds", "0 days 0 hours 0 minutes 0s", "0 days 0 hours 0 minutes 0 secondonds", "0 days 0 hours 0 minutes 0 secs", "0 days 0 hours 0 minutes 0 sececonds", "0 days 0 hours 0 minutes 0 sonds", "0 days 0 hours 0 minutes 0  seconds", "0 days 0 hours 0 minutes 0seconds", "0 days 0 hours 0 minutes 00 seconds", "0 days 0 hours 0 minutes  seconds", "0 days 0 hours 0 minutes  0 seconds", "0 days 0 hours 0 minutes0 seconds", "0 days 0 hours 0 minutes0 minutes 0 seconds", "0 days 0 hours  0 seconds", "0 days 0 hours 0 minutess 0 seconds", "0 days 0 hours 0 minute 0 seconds", "0 days 0 hours 0 minuteutes 0 seconds", "0 days 0 hours 0 mins 0 seconds", "0 days 0 hours 0 mininutes 0 seconds", "0 days 0 hours 0 mutes 0 seconds", "0 days 0 hours 0  minutes 0 seconds", "0 days 0 hours 0minutes 0 seconds", "0 days 0 hours 00 minutes 0 seconds", "0 days 0 hours  minutes 0 seconds", "0 days 0 hours  0 minutes 0 seconds", "0 days 0 hours0 minutes 0 seconds", "0 days 0 hours0 hours 0 minutes 0 seconds", "0 days  0 minutes 0 seconds", "0 days 0 hourss 0 minutes 0 seconds", "0 days 0 hour 0 minutes 0 seconds", "0 days 0 hourrs 0 minutes 0 seconds", "0 days 0 hous 0 minutes 0 seconds", "0 days 0 houours 0 minutes 0 seconds", "0 days 0 hrs 0 minutes 0 seconds", "0 days 0  hours 0 minutes 0 seconds", "0 days 0hours 0 minutes 0 seconds", "0 days 00 hours 0 minutes 0 seconds", "0 days  hours 0 minutes 0 seconds", "0 days  0 hours 0 minutes 0 seconds", "0 days0 hours 0 minutes 0 seconds", "0 days0 days 0 hours 0 minutes 0 seconds", " 0 hours 0 minutes 0 seconds", "0 dayss 0 hours 0 minutes 0 seconds", "0 day 0 hours 0 minutes 0 seconds", "0 dayays 0 hours 0 minutes 0 seconds", "0 ds 0 hours 0 minutes 0 seconds", "0  days 0 hours 0 minutes 0 seconds", "0days 0 hours 0 minutes 0 seconds", "00 days 0 hours 0 minutes 0 seconds", " days 0 hours 0 minutes 0 seconds", "", "0 days 0 hours 0 minutes 0 seconds"], "nonMatches": []}, {"regex": "(?:(?:Data Source)|(?:Server))=([\\w\\.]+?);\\s*?(?:(?:Initial Catalog)|(?:Database))=(\\w+?);\\s*?(?:(?:User Id)|(?:Uid))=(\\w+?);\\s*?(?:(?:Password)|(?:Pwd))=(\\w*?);.*", "exceptionStackTrace": null, "matches": ["Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;=", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;;", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;.", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;eVil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;EVIL", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;ev_il", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;ev il", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;ev4il", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;e", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil; ", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;6", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;_", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=eVil;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=EVIL;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=ev_il;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=ev4il;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=e;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=6;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=_;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil;  Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil;Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=eVil; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=EVIL; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=ev_il; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=ev4il; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=e; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=6; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=_; Password=evil;evil", "Data Source=evil; Initial Catalog=evil;  User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=evil;User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=eVil; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=EVIL; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=ev_il; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=ev4il; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=e; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=6; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=_; User Id=evil; Password=evil;evil", "Data Source=evil;  Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=evil;Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=.; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=eVil; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=EVIL; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=ev_il; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=ev4il; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=e; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=6; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=_; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Server=evil;Initial Catalog=evil;User Id=evil;Password=;", "Data Source=evil;Database=evil;User Id=evil;Password=;", "Data Source=evil;Initial Catalog=evil;Uid=evil;Password=;", "Data Source=evil;Initial Catalog=evil;User Id=evil;Pwd=;", "Data Source=evil;Initial Catalog=evil;User Id=evil;Password=;", "Server=evil; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=evil; Database=evil; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; Uid=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Pwd=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password=evil;evil"], "nonMatches": ["Data Source=evil; Initial Catalog=evil; User Id=evil; Password=ev il;evil", "Data Source=evil; Initial Catalog=evil; User Id=evil; Password= ;evil", "Data Source=evil; Initial Catalog=evil; User Id=ev il; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id= ; Password=evil;evil", "Data Source=evil; Initial Catalog=evil; User Id=; Password=evil;evil", "Data Source=evil; Initial Catalog=ev il; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog= ; User Id=evil; Password=evil;evil", "Data Source=evil; Initial Catalog=; User Id=evil; Password=evil;evil", "Data Source==; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=;; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=ev il; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source= ; Initial Catalog=evil; User Id=evil; Password=evil;evil", "Data Source=; Initial Catalog=evil; User Id=evil; Password=evil;evil"]}, {"regex": "Server=([\\w\\.]+?);\\s*?(?:Port=(\\d+?);\\s*?)?Database=(\\w+?);\\s*?(?:(?:User)|(?:Uid))=(\\w+?);\\s*?(?:(?:Password)|(?:Pwd))=(\\w*?);.*", "exceptionStackTrace": null, "matches": ["Server=evil; Port=0; Database=evil; User=evil; Password=evil;=", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;;", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;.", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;eVil", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;EVIL", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;ev_il", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;ev il", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;ev4il", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;e", "Server=evil; Port=0; Database=evil; User=evil; Password=evil; ", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;6", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;_", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;", "Server=evil; Port=0; Database=evil; User=evil; Password=eVil;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=EVIL;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=ev_il;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=ev4il;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=e;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=6;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=_;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=;evil", "Server=evil; Port=0; Database=evil; User=evil;  Password=evil;evil", "Server=evil; Port=0; Database=evil; User=evil;Password=evil;evil", "Server=evil; Port=0; Database=evil; User=eVil; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=EVIL; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=ev_il; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=ev4il; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=e; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=6; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=_; Password=evil;evil", "Server=evil; Port=0; Database=evil;  User=evil; Password=evil;evil", "Server=evil; Port=0; Database=evil;User=evil; Password=evil;evil", "Server=evil; Port=0; Database=eVil; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=EVIL; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=ev_il; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=ev4il; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=e; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=6; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=_; User=evil; Password=evil;evil", "Server=evil; Database=evil; User=evil; Password=evil;evil", "Server=evil; Port=0;  Database=evil; User=evil; Password=evil;evil", "Server=evil; Port=0;Database=evil; User=evil; Password=evil;evil", "Server=evil; Port=00; Database=evil; User=evil; Password=evil;evil", "Server=evil;  Port=0; Database=evil; User=evil; Password=evil;evil", "Server=evil;Port=0; Database=evil; User=evil; Password=evil;evil", "Server=.; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=eVil; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=EVIL; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=ev_il; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=ev4il; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=e; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=6; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=_; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=evil;Database=evil;Uid=evil;Password=;", "Server=evil;Database=evil;User=evil;Pwd=;", "Server=evil;Database=evil;User=evil;Password=;", "Server=evil; Port=0; Database=evil; Uid=evil; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=evil; Pwd=evil;evil", "Server=evil; Port=0; Database=evil; User=evil; Password=evil;evil"], "nonMatches": ["Server=evil; Port=0; Database=evil; User=evil; Password=ev il;evil", "Server=evil; Port=0; Database=evil; User=evil; Password= ;evil", "Server=evil; Port=0; Database=evil; User=ev il; Password=evil;evil", "Server=evil; Port=0; Database=evil; User= ; Password=evil;evil", "Server=evil; Port=0; Database=evil; User=; Password=evil;evil", "Server=evil; Port=0; Database=ev il; User=evil; Password=evil;evil", "Server=evil; Port=0; Database= ; User=evil; Password=evil;evil", "Server=evil; Port=0; Database=; User=evil; Password=evil;evil", "Server=evil; Port=0; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=evil; Port=; Database=evil; User=evil; Password=evil;evil", "Server==; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=;; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=ev il; Port=0; Database=evil; User=evil; Password=evil;evil", "Server= ; Port=0; Database=evil; User=evil; Password=evil;evil", "Server=; Port=0; Database=evil; User=evil; Password=evil;evil"]}, {"regex": "^(\\d{0,4}(?:\\.\\d{0,2})?\n  | \n  [-]\\d{0,2}(?:\\.\\d{0,2})?\n )[%]{0,1}$", "exceptionStackTrace": null, "matches": [" \n  -0\n %", " \n  -0.00\n %", " \n  -0.\n %", " \n  -00.0\n %", " \n  -.0\n %", "0.0\n  ", "0\n  %", "0.00\n  %", "0.\n  %", "0000.0\n  %", ".0\n  %", " \n  -\n ", "\n  ", " \n  -0.0\n %", "0.0\n  %"], "nonMatches": [" \n  -0.0.0\n %", " \n  -0.000\n %", " \n  -000.0\n %", "0.0\n  %%", "0.0.0\n  %", "0.000\n  %", "00000.0\n  %"]}, {"regex": "(?i)^(?<brace>(?<curly>\\{)|(?<round>\\())?[\\dA-F]{8}(?(brace)(?<sep>-)|(?<sep>-)?)(?:[\\dA-Z]{4}(?(sep)-)){3}[\\dA-F]{12}(?(curly)\\})(?(round)\\))$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<b"}, "matches": []}, {"regex": "\\b[1-9]{1}[0-9]{1,5}-\\d{2}-\\d\\b", "exceptionStackTrace": null, "matches": ["100000-00-0", "110-00-0", "10-00-0"], "nonMatches": ["10-000-0", "10-0-0", "1000000-00-0", "1-00-0", "0-00-0", "00-00-0"]}, {"regex": "^(([0-2]\\d|[3][0-1])\\/([0]\\d|[1][0-2])\\/[2][0]\\d{2})$|^(([0-2]\\d|[3][0-1])\\/([0]\\d|[1][0-2])\\/[2][0]\\d{2}\\s00\\:00\\:00)$", "exceptionStackTrace": null, "matches": ["30/00/2000 00:00:00", "00/10/2000 00:00:00", "00/00/2000 00:00:00", "30/00/2000", "00/10/2000", "00/00/2000"], "nonMatches": ["32/00/2000 00:00:00", "00/13/2000 00:00:00", "00/00/20000 00:00:00", "00/00/200 00:00:00", "32/00/2000", "00/13/2000", "00/00/20000", "00/00/200"]}, {"regex": "^[-\\w\\s&quot;&#39;=/!@#%&,;:`~\\.\\$\\^\\{\\[\\(\\|\\)\\]\\}\\*\\+\\?\\\\]*$", "exceptionStackTrace": null, "matches": ["~", "}", "|", "{", "`", "^", "]", "\\", "[", "@", "?", "=", ";", ":", "/", ".", "-", ",", "+", "*", ")", "(", "&", "%", "$", "#", "!", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"], "nonMatches": []}, {"regex": "^(GB)?(\\ )?[0-9]\\d{2}(\\ )?[0-9]\\d{3}(\\ )?(0[0-9]|[1-8][0-9]|9[0-6])(\\ )?([0-9]\\d{2})?|(GB)?(\\ )?GD(\\ )?([0-4][0-9][0-9])|(GB)?(\\ )?HA(\\ )?([5-9][0-9][0-9])$", "exceptionStackTrace": null, "matches": ["GB HA500", "GB  HA 500", "GBHA 500", "GBGB HA 500", " HA 500", "GB GD000", "GB  GD 000", "GBGD 000", "GBGB GD 000", " GD 000", "GB 000 0000 00 000000", "GB 000 0000 00 ", "GB 000 0000 00 0000", "GB 000 0000 00 00", "GB 000 0000 00  000", "GB 000 0000 00000", "GB 000 000000 000", "GB 0000000 00 000", "GB000 0000 00 000", " 000 0000 00 000", "HA500", "GD000", "000000090", "000000010", "000000000", "GB HA 500", "GB GD 000", "GB 000 0000 90 000", "GB 000 0000 10 000", "GB 000 0000 00 000"], "nonMatches": ["GB HA 000", "GB HA  500", "GB GD 500", "GB GD  000", "GB 000 0000 97 000", "GB 000 0000  00 000", "GB 000 00000 00 000", "GB 000 000 00 000", "GB 000  0000 00 000", "GB 0000 0000 00 000", "GB 00 0000 00 000", "GB  000 0000 00 000", "GBGB 000 0000 00 000"]}, {"regex": "^((0|[1-9]+[0-9]*)-(0|[1-9]+[0-9]*);|(0|[1-9]+[0-9]*);)*?((0|[1-9]+[0-9]*)-(0|[1-9]+[0-9]*)|(0|[1-9]+[0-9]*)){1}$", "exceptionStackTrace": null, "matches": ["100;0-0", "1;0-0", "110;0-0", "100-0;0-0", "1-0;0-0", "110-0;0-0", "0-100;0-0", "0-1;0-0", "0-110;0-0", "0-0;100", "0-0;1", "0-0;110", "0-0;100-0", "0-0;1-0", "0-0;110-0", "0-0;0-100", "0-0;0-1", "0-0;0-110", "0-0;0-0;0-0", "1", "0", "1-0", "0-1", "0-0", "10;0-0", "0;0-0", "10-0;0-0", "0-10;0-0", "0-0;10", "0-0;0", "0-0;10-0", "0-0;0-10", "0-0;0-0"], "nonMatches": ["00;0-0", "00-0;0-0", "0-00;0-0", "0-0;00", "0-0;00-0", "0-0;0-00", "0-0;0-00-0", "0-0;"]}, {"regex": "^(((?!\\(800\\))(?!\\(888\\))(?!\\(877\\))(?!\\(866\\))(?!\\(900\\))\\(\\d{3}\\) ?)|(?!800)(?!888)(?!877)(?!866)(?!900)(\\d{3}-))?\\d{3}-\\d{4}", "exceptionStackTrace": null, "matches": ["(000) 000-00000", "(000)000-0000", "000-0000", "000-000-0000", "(000) 000-0000"], "nonMatches": ["0000-000-0000", "00-000-0000", "(000) 000-000", "(000) 0000-0000", "(000) 00-0000", "(000) (000) 000-0000", "(000)  000-0000", "(0000) 000-0000", "(00) 000-0000"]}, {"regex": "^\\W{0,5}[Rr]e:\\W[a-zA-Z0-9]{1,10},\\W[a-z]{1,10}\\W[a-z]{1,10}\\W[a-z]{1,10}", "exceptionStackTrace": null, "matches": [";re:;0,;a;a;aaaaaaaaaaa", ";re:;0,;a;a;aaaaaaaaaa", ";re:;0,;a;a:a", ";re:;0,;a;a,a", ";re:;0,;a;a a", ";re:;0,;a;aaaaaaaaaa;a", ";re:;0,;a:a;a", ";re:;0,;a,a;a", ";re:;0,;a a;a", ";re:;0,;aaaaaaaaaa;a;a", ";re:;0,:a;a;a", ";re:;0,,a;a;a", ";re:;0, a;a;a", ";re:;0000000000,;a;a;a", ";re:;a,;a;a;a", ";re:;A,;a;a;a", ";re::0,;a;a;a", ";re:,0,;a;a;a", ";re: 0,;a;a;a", ";Re:;0,;a;a;a", ";;;;;re:;0,;a;a;a", ":re:;0,;a;a;a", ",re:;0,;a;a;a", " re:;0,;a;a;a", "re:;0,;a;a;a", ";re:;0,;a;a;a"], "nonMatches": [";re:;0,;a;a;", ";re:;0,;a;aaa", ";re:;0,;a;a_a", ";re:;0,;a;aAa", ";re:;0,;a;a0a", ";re:;0,;a;aaaaaaaaaaa;a", ";re:;0,;a;;a", ";re:;0,;aaa;a", ";re:;0,;a_a;a", ";re:;0,;aAa;a", ";re:;0,;a0a;a", ";re:;0,;aaaaaaaaaaa;a;a", ";re:;0,;;a;a", ";re:;0,aa;a;a", ";re:;0,_a;a;a", ";re:;0,Aa;a;a", ";re:;0,0a;a;a", ";re:;00000000000,;a;a;a", ";re:;,;a;a;a", ";re:a0,;a;a;a", ";re:_0,;a;a;a", ";re:A0,;a;a;a", ";re:00,;a;a;a", ";ae:;0,;a;a;a", ";Ae:;0,;a;a;a", ";;;;;;re:;0,;a;a;a", "are:;0,;a;a;a", "_re:;0,;a;a;a", "Are:;0,;a;a;a", "0re:;0,;a;a;a"]}, {"regex": "^\\d*\\.?((25)|(50)|(5)|(75)|(0)|(00))?$", "exceptionStackTrace": null, "matches": ["0.", "025", "00.25", ".25", "", "0.00", "0.0", "0.75", "0.5", "0.50", "0.25"], "nonMatches": ["0.2525", "0..25"]}, {"regex": "(0?[1-9]|[12][0-9]|3[01])[.](0?[1-9]|1[012])[.]\\d{4}", "exceptionStackTrace": null, "matches": ["32.01.0000", "30.01.0000", "10.01.0000", "01.11.0000", "01.10.0000", "01.01.00000", "01.1.0000", "001.01.0000", "1.01.0000", "31.1.0000", "20.1.0000", "1.12.0000", "1.1.0000", "31.01.0000", "20.01.0000", "01.12.0000", "01.01.0000"], "nonMatches": ["01.13.0000", "01.01.000", "01.00.0000", "01.001.0000", "00.01.0000"]}, {"regex": "^(([^,\\n]+),([^,\\n]+),([^@]+)@([^\\.]+)\\.([^,\\n]+)\\n)+([^,\\n]+),([^,\\n]+),([^@]+)@([^\\.]+)\\.([^,\\n]+)\\n?$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^(3276[0-7]|327[0-5]\\d|32[0-6]\\d{2}|3[01]\\d{3}|[12]\\d{4}|[1-9]\\d{3}|[1-9]\\d{2}|[1-9]\\d|\\d)$", "exceptionStackTrace": null, "matches": ["2000", "10000", "3100", "30000", "3200", "0", "10", "100", "1000", "20000", "31000", "32000", "32700", "32760"], "nonMatches": ["00", "000", "0000", "200000", "00000", "310000", "320000", "32768"]}, {"regex": "^(-?)((\\d{1,3})(,\\d{3})*|\\d+)((\\.\\d+)?)$", "exceptionStackTrace": null, "matches": ["-00.0", "-0,000", "-0,000.00", "-0,000,000.0", "-000,000.0", "0,000.0", "0", "-0.0", "-0,000.0"], "nonMatches": ["-.0", "-0,000.0.0", "-0,000.", "-0,0000.0", "-0,00.0", "-0000,000.0", "-,000.0", "--0,000.0"]}, {"regex": "^[1-9]\\d*\\.?[0]*$", "exceptionStackTrace": null, "matches": ["10.00", "10.", "100", "100.0", "1.0", "1", "10.0"], "nonMatches": ["10..0", "00.0"]}, {"regex": "[A-Za-z_.0-9-]+@{1}[a-z]+([.]{1}[a-z]{2,4})+", "exceptionStackTrace": null, "matches": ["evil@evil.aa.aa", "evil@evil.aaaaa", "evil@evil.aaaa", "evil@e.aa", ".@evil.aa", "-@evil.aa", "eVil@evil.aa", "EVIL@evil.aa", "ev_il@evil.aa", "ev il@evil.aa", "ev4il@evil.aa", "e@evil.aa", "6@evil.aa", "_@evil.aa", "evil@evil.aa"], "nonMatches": ["evil@evil", "evil@evil.a", "evil@evil..aa", "evil@evilaa", "evil@eVil.aa", "evil@EVIL.aa", "evil@ev_il.aa", "evil@ev il.aa", "evil@ev4il.aa", "evil@ .aa", "evil@6.aa", "evil@_.aa", "evil@.aa", "evil@@evil.aa", "evilevil.aa", "@@evil.aa", " @evil.aa", "@evil.aa"]}, {"regex": "href=[\\&quot;\\&#39;](http:\\/\\/|\\.\\/|\\/)?\\w+(\\.\\w+)*(\\/\\w+(\\.\\w+)?)*(\\/|\\?\\w*=\\w*(&\\w*=\\w*)*)?[\\&quot;\\&#39;]", "exceptionStackTrace": null, "matches": ["href=;http://evil.evil/evil.evil?evil=evil&evil=evil&evil=evil;", "href=;http://evil.evil/evil.evil?evil=evil;", "href=;http://evil.evil/evil.evil?evil=evil&evil=eVil;", "href=;http://evil.evil/evil.evil?evil=evil&evil=EVIL;", "href=;http://evil.evil/evil.evil?evil=evil&evil=ev_il;", "href=;http://evil.evil/evil.evil?evil=evil&evil=ev il;", "href=;http://evil.evil/evil.evil?evil=evil&evil=ev4il;", "href=;http://evil.evil/evil.evil?evil=evil&evil=e;", "href=;http://evil.evil/evil.evil?evil=evil&evil= ;", "href=;http://evil.evil/evil.evil?evil=evil&evil=6;", "href=;http://evil.evil/evil.evil?evil=evil&evil=_;", "href=;http://evil.evil/evil.evil?evil=evil&evil=;", "href=;http://evil.evil/evil.evil?evil=evil&eVil=evil;", "href=;http://evil.evil/evil.evil?evil=evil&EVIL=evil;", "href=;http://evil.evil/evil.evil?evil=evil&ev_il=evil;", "href=;http://evil.evil/evil.evil?evil=evil&ev il=evil;", "href=;http://evil.evil/evil.evil?evil=evil&ev4il=evil;", "href=;http://evil.evil/evil.evil?evil=evil&e=evil;", "href=;http://evil.evil/evil.evil?evil=evil& =evil;", "href=;http://evil.evil/evil.evil?evil=evil&6=evil;", "href=;http://evil.evil/evil.evil?evil=evil&_=evil;", "href=;http://evil.evil/evil.evil?evil=evil&=evil;", "href=;http://evil.evil/evil.evil?evil=eVil&evil=evil;", "href=;http://evil.evil/evil.evil?evil=EVIL&evil=evil;", "href=;http://evil.evil/evil.evil?evil=ev_il&evil=evil;", "href=;http://evil.evil/evil.evil?evil=ev il&evil=evil;", "href=;http://evil.evil/evil.evil?evil=ev4il&evil=evil;", "href=;http://evil.evil/evil.evil?evil=e&evil=evil;", "href=;http://evil.evil/evil.evil?evil= &evil=evil;", "href=;http://evil.evil/evil.evil?evil=6&evil=evil;", "href=;http://evil.evil/evil.evil?evil=_&evil=evil;", "href=;http://evil.evil/evil.evil?evil=&evil=evil;", "href=;http://evil.evil/evil.evil?eVil=evil&evil=evil;", "href=;http://evil.evil/evil.evil?EVIL=evil&evil=evil;", "href=;http://evil.evil/evil.evil?ev_il=evil&evil=evil;", "href=;http://evil.evil/evil.evil?ev il=evil&evil=evil;", "href=;http://evil.evil/evil.evil?ev4il=evil&evil=evil;", "href=;http://evil.evil/evil.evil?e=evil&evil=evil;", "href=;http://evil.evil/evil.evil? =evil&evil=evil;", "href=;http://evil.evil/evil.evil?6=evil&evil=evil;", "href=;http://evil.evil/evil.evil?_=evil&evil=evil;", "href=;http://evil.evil/evil.evil?=evil&evil=evil;", "href=;http://evil.evil/evil.evil/u", "href=;http://evil.evil/evil.evil/t", "href=;http://evil.evil/evil.evil/q", "href=;http://evil.evil/evil.evil/o", "href=;http://evil.evil/evil.evil/a", "href=;http://evil.evil/evil.evil/9", "href=;http://evil.evil/evil.evil/3", "href=;http://evil.evil/evil.evil/0", "href=;http://evil.evil/evil.evil/&", "href=;http://evil.evil/evil.evil/#", "href=;http://evil.evil/evil.evil//;", "href=;http://evil.evil/evil.evil;", "href=;http://evil.evil/evil.evil/evil.evil/;", "href=;http://evil.evil/;", "href=;http://evil.evil/evil.evil.evil/;", "href=;http://evil.evil/evil/;", "href=;http://evil.evil/evil.eVil/;", "href=;http://evil.evil/evil.EVIL/;", "href=;http://evil.evil/evil.ev_il/;", "href=;http://evil.evil/evil.ev il/;", "href=;http://evil.evil/evil.ev4il/;", "href=;http://evil.evil/evil.e/;", "href=;http://evil.evil/evil. /;", "href=;http://evil.evil/evil.6/;", "href=;http://evil.evil/evil._/;", "href=;http://evil.evil/evil./;", "href=;http://evil.evil/eVil.evil/;", "href=;http://evil.evil/EVIL.evil/;", "href=;http://evil.evil/ev_il.evil/;", "href=;http://evil.evil/ev il.evil/;", "href=;http://evil.evil/ev4il.evil/;", "href=;http://evil.evil/e.evil/;", "href=;http://evil.evil/ .evil/;", "href=;http://evil.evil/6.evil/;", "href=;http://evil.evil/_.evil/;", "href=;http://evil.evil/.evil/;", "href=;http://evil.evil.evil/evil.evil/;", "href=;http://evil/evil.evil/;", "href=;http://evil.eVil/evil.evil/;", "href=;http://evil.EVIL/evil.evil/;", "href=;http://evil.ev_il/evil.evil/;", "href=;http://evil.ev il/evil.evil/;", "href=;http://evil.ev4il/evil.evil/;", "href=;http://evil.e/evil.evil/;", "href=;http://evil. /evil.evil/;", "href=;http://evil.6/evil.evil/;", "href=;http://evil._/evil.evil/;", "href=;http://evil./evil.evil/;", "href=;http://eVil.evil/evil.evil/;", "href=;http://EVIL.evil/evil.evil/;", "href=;http://ev_il.evil/evil.evil/;", "href=;http://ev il.evil/evil.evil/;", "href=;http://ev4il.evil/evil.evil/;", "href=;http://e.evil/evil.evil/;", "href=;http:// .evil/evil.evil/;", "href=;http://6.evil/evil.evil/;", "href=;http://_.evil/evil.evil/;", "href=;http://.evil/evil.evil/;", "href=;http://http://evil.evil/evil.evil/;", "href=;evil.evil/evil.evil/;", "href=uhttp://evil.evil/evil.evil/;", "href=thttp://evil.evil/evil.evil/;", "href=qhttp://evil.evil/evil.evil/;", "href=ohttp://evil.evil/evil.evil/;", "href=9http://evil.evil/evil.evil/;", "href=3http://evil.evil/evil.evil/;", "href=&http://evil.evil/evil.evil/;", "href=#http://evil.evil/evil.evil/;", "href=;evil;", "href=;/evil.evil/evil.evil/;", "href=;./evil.evil/evil.evil/;", "href=;http://evil.evil/evil.evil?evil=evil&evil=evil;", "href=;http://evil.evil/evil.evil/;"], "nonMatches": ["href=ahttp://evil.evil/evil.evil/;", "href=0http://evil.evil/evil.evil/;"]}, {"regex": "(?<O>(?<d>[BEGLMNS]|A[BL]|B[ABDHLNRST]|C[ABFHMORTVW]|D[ADEGHLNTY]|E[HNX]|F[KY]|G[LUY]|H[ADGPRSUX]|I[GMPV]|JE|K[ATWY]|L[ADELNSU]|M[EKL]|N[EGNPRW]|O[LX]|P[AEHLOR]|R[GHM]|S[AEGKL-PRSTWY]|T[ADFNQRSW]|UB|W[ADFNRSV]|YO|ZE)(?<a>\\d\\d?)|(?<d>E)(?<a>\\dW)|(?<d>EC)(?<a>\\d[AMNPRVY0])|(?<d>N)(?<a>\\dP)|(?<d>NW)(?<a>\\dW)|(?<d>SE)(?<a>\\dP)|(?<d>SW)(?<a>\\d[AEHPVWXY])|(?<d>W)(?<a>1[0-4A-DFGHJKSTUW])|(?<d>W)(?<a>[2-9])|(?<d>WC)(?<a>[12][ABEHNRVX]))\\ (?<I>(?<s>\\d)(?<u>[ABD-HJLNP-UW-Z]{2}))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<O"}, "matches": []}, {"regex": "^(3[0-1]|2[0-9]|1[0-9]|0[1-9])[\\/](Jan|JAN|Feb|FEB|Mar|MAR|Apr|APR|May|MAY|Jun|JUN|Jul|JUL|Aug|AUG|Sep|SEP|Oct|OCT|Nov|NOV|Dec|DEC)[\\/]\\d{4}$", "exceptionStackTrace": null, "matches": ["01/Jan/0000", "10/Jan/0000", "20/Jan/0000", "30/DEC/0000", "30/Dec/0000", "30/NOV/0000", "30/Nov/0000", "30/OCT/0000", "30/Oct/0000", "30/SEP/0000", "30/Sep/0000", "30/AUG/0000", "30/Aug/0000", "30/JUL/0000", "30/Jul/0000", "30/JUN/0000", "30/Jun/0000", "30/MAY/0000", "30/May/0000", "30/APR/0000", "30/Apr/0000", "30/MAR/0000", "30/Mar/0000", "30/FEB/0000", "30/Feb/0000", "30/JAN/0000", "30/Jan/0000"], "nonMatches": ["00/Jan/0000", "30/Jan/00000", "30/Jan/000", "32/Jan/0000"]}, {"regex": "(?=^.{8,15}$)((?!.*\\s)(?=.*[A-Z])(?=.*[a-z])(?=(.*\\d){1,}))((?!.*[&quot;,;&|&#39;])|(?=(.*\\W){1,}))(?!.*[&quot;,;&|&#39;])^.*$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["|", ";", ",", "&", "#", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"]}, {"regex": "http://www.facebook-support-number.com/", "exceptionStackTrace": null, "matches": ["http://wwwafacebook-support-numberAcom/", "http://wwwafacebook-support-number:com/", "http://wwwafacebook-support-number0com/", "http://wwwafacebook-support-number/com/", "http://wwwafacebook-support-number-com/", "http://wwwafacebook-support-number com/", "http://wwwAfacebook-support-numberacom/", "http://www:facebook-support-numberacom/", "http://www0facebook-support-numberacom/", "http://www/facebook-support-numberacom/", "http://www-facebook-support-numberacom/", "http://www facebook-support-numberacom/", "http://wwwafacebook-support-numberacom/"], "nonMatches": []}, {"regex": "http://www.facebook-support-number.com/", "exceptionStackTrace": null, "matches": ["http://wwwafacebook-support-numberAcom/", "http://wwwafacebook-support-number:com/", "http://wwwafacebook-support-number0com/", "http://wwwafacebook-support-number/com/", "http://wwwafacebook-support-number-com/", "http://wwwafacebook-support-number com/", "http://wwwAfacebook-support-numberacom/", "http://www:facebook-support-numberacom/", "http://www0facebook-support-numberacom/", "http://www/facebook-support-numberacom/", "http://www-facebook-support-numberacom/", "http://www facebook-support-numberacom/", "http://wwwafacebook-support-numberacom/"], "nonMatches": []}, {"regex": "http://www.facebook-support-number.com/", "exceptionStackTrace": null, "matches": ["http://wwwafacebook-support-numberAcom/", "http://wwwafacebook-support-number:com/", "http://wwwafacebook-support-number0com/", "http://wwwafacebook-support-number/com/", "http://wwwafacebook-support-number-com/", "http://wwwafacebook-support-number com/", "http://wwwAfacebook-support-numberacom/", "http://www:facebook-support-numberacom/", "http://www0facebook-support-numberacom/", "http://www/facebook-support-numberacom/", "http://www-facebook-support-numberacom/", "http://www facebook-support-numberacom/", "http://wwwafacebook-support-numberacom/"], "nonMatches": []}, {"regex": "(CREATE|ALTER) +(PROCEDURE|PROC|FUNCTION|VIEW) *(\\[(.*)\\]|(.*))", "exceptionStackTrace": null, "matches": ["CREATE PROCEDURE ]", "CREATE PROCEDURE [", "CREATE PROCEDURE eVil", "CREATE PROCEDURE EVIL", "CREATE PROCEDURE ev_il", "CREATE PROCEDURE ev il", "CREATE PROCEDURE ev4il", "CREATE PROCEDURE e", "CREATE PROCEDURE  ", "CREATE PROCEDURE 6", "CREATE PROCEDURE _", "CREATE PROCEDURE ", "CREATE PROCEDURE []]", "CREATE PROCEDURE [[]", "CREATE PROCEDURE [eVil]", "CREATE PROCEDURE [EVIL]", "CREATE PROCEDURE [ev_il]", "CREATE PROCEDURE [ev il]", "CREATE PROCEDURE [ev4il]", "CREATE PROCEDURE [e]", "CREATE PROCEDURE [ ]", "CREATE PROCEDURE [6]", "CREATE PROCEDURE [_]", "CREATE PROCEDURE []", "CREATE PROCEDURE  [evil]", "CREATE PROCEDURE[evil]", "CREATE  PROCEDURE [evil]", "ALTER PROCEDURE[]", "CREATE VIEW[]", "CREATE FUNCTION[]", "CREATE PROC[]", "CREATE PROCEDURE", "CREATE PROCEDURE[]", "ALTER PROCEDURE [evil]", "CREATE VIEW [evil]", "CREATE FUNCTION [evil]", "CREATE PROC [evil]", "CREATE PROCEDURE evil", "CREATE PROCEDURE [evil]"], "nonMatches": ["CREATEPROCEDURE [evil]"]}, {"regex": "^([^:])+\\\\.([^:])+$", "exceptionStackTrace": null, "matches": ["a\\aaa", "a\\a\\", "a\\aA", "a\\a0", "a\\a ", "a\\\\a", "a\\Aa", "a\\:a", "a\\0a", "a\\ a", "aa\\aa", "\\\\aa", "A\\aa", "0\\aa", " \\aa", "a\\aa"], "nonMatches": ["a\\a", "a\\a:", "\\aa", ":\\aa"]}, {"regex": "&quot;[^&quot;]+&quot; ", "exceptionStackTrace": null, "matches": ["&quot;eVil&quot; ", "&quot;EVIL&quot; ", "&quot;ev_il&quot; ", "&quot;ev il&quot; ", "&quot;ev4il&quot; ", "&quot;e&quot; ", "&quot; &quot; ", "&quot;6&quot; ", "&quot;_&quot; ", "&quot;evil&quot; "], "nonMatches": ["&quot;;&quot; ", "&quot;&&quot; ", "&quot;&quot; "]}, {"regex": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[\\d])(?=.*[-\\]\\\\`~!@#$%^&*()_=+}{[|&#39;&quot;;:><,.?/ ]).{8,50}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaa", "~aaaaaaa", "}aaaaaaa", "|aaaaaaa", "{aaaaaaa", "`aaaaaaa", "_aaaaaaa", "^aaaaaaa", "]aaaaaaa", "\\aaaaaaa", "[aaaaaaa", "Aaaaaaaa", "@aaaaaaa", "?aaaaaaa", ">aaaaaaa", "=aaaaaaa", "<aaaaaaa", ";aaaaaaa", ":aaaaaaa", "0aaaaaaa", "/aaaaaaa", ".aaaaaaa", "-aaaaaaa", ",aaaaaaa", "+aaaaaaa", "*aaaaaaa", ")aaaaaaa", "(aaaaaaa", "&aaaaaaa", "%aaaaaaa", "$aaaaaaa", "#aaaaaaa", "!aaaaaaa", " aaaaaaa", "aaaaaaaa"]}, {"regex": "^(00[1-9]|0[1-9][0-9]|[1-7][0-9][0-9]|7[0-7][0-2]|77[0-2])(\\d{6})(A|B([1-9]?|[ADGHJKLNPQRTWY])|C([1-9]|[A-Z])|D([1-9]?|[ACDGHJKLMNPQRSTVWXYZ])|E([1-9]?|[ABCDFGHJKM])|F([1-8])|J([1-4])|K([1-9]|[ABCDEFGHJLM])|T([ABCDEFGHJKLMNPQRSTUVWXYZ2]?)|M|W([1-9]?|[BCFGJRT]))$", "exceptionStackTrace": null, "matches": ["773000000A", "703000000A", "780000000A", "001000000WR", "001000000WJ", "001000000WG", "001000000WF", "001000000WC", "001000000WB", "001000000TZ", "001000000TY", "001000000TX", "001000000TW", "001000000TV", "001000000TU", "001000000TT", "001000000TS", "001000000TR", "001000000TQ", "001000000TP", "001000000TN", "001000000TM", "001000000TL", "001000000TK", "001000000TJ", "001000000TH", "001000000TG", "001000000TF", "001000000TE", "001000000TD", "001000000TC", "001000000TB", "001000000TA", "001000000KL", "001000000KJ", "001000000KH", "001000000KG", "001000000KF", "001000000KE", "001000000KD", "001000000KC", "001000000KB", "001000000KA", "001000000EK", "001000000EJ", "001000000EH", "001000000EG", "001000000EF", "001000000ED", "001000000EC", "001000000EB", "001000000EA", "001000000DY", "001000000DX", "001000000DW", "001000000DV", "001000000DT", "001000000DS", "001000000DR", "001000000DQ", "001000000DP", "001000000DN", "001000000DM", "001000000DL", "001000000DK", "001000000DJ", "001000000DH", "001000000DG", "001000000DD", "001000000DC", "001000000DA", "001000000BW", "001000000BT", "001000000BR", "001000000BQ", "001000000BP", "001000000BN", "001000000BL", "001000000BK", "001000000BJ", "001000000BH", "001000000BG", "001000000BD", "001000000BA", "001000000W", "001000000T", "001000000E", "001000000D", "001000000B", "770000000A", "700000000A", "100000000A", "010000000A", "001000000WT", "001000000W1", "001000000M", "001000000T2", "001000000KM", "001000000K1", "001000000J1", "001000000F1", "001000000EM", "001000000E1", "001000000DZ", "001000000D1", "001000000CA", "001000000C1", "001000000BY", "001000000B1", "001000000A"], "nonMatches": ["001000000WA", "001000000W11", "001000000W0", "001000000T22", "001000000TI", "001000000T0", "001000000KI", "001000000K0", "001000000J0", "001000000F0", "001000000EE", "001000000E11", "001000000E0", "001000000DB", "001000000D11", "001000000D0", "001000000C0", "001000000BB", "001000000B11", "001000000B0", "0010000000A", "00100000A", "000000000A"]}, {"regex": "[a-z]{2}[0-9]{5}[a-z]", "exceptionStackTrace": null, "matches": ["aaa00000a", "aa00000a"], "nonMatches": ["aa000000a", "aa0000a", "a00000a"]}, {"regex": "(?<local1300>^1300[ |\\-]{0,1}\\d{3}[ |\\-]{0,1}\\d{3}$)|(?<tollcall>^1900|1902[ |\\-]{0,1}\\d{3}[ |\\-]{0,1}\\d{3}$)|(?<freecall>^1800[ |\\-]{0,1}\\d{3}[ |\\-]{0,1}\\d{3}$)|(?<standard>^\\({0,1}0[2|3|7|8]{1}\\){0,1}[ \\-]{0,1}\\d{4}[ |\\-]{0,1}\\d{4}$)|(?<international>^\\+61[ |\\-]{0,1}[2|3|7|8]{1}[ |\\-]{0,1}[0-9]{4}[ |\\-]{0,1}[0-9]{4}$)|(?<local13>^13\\d{4}$)|(?<mobile>^04\\d{2,3}\\d{6}$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<l"}, "matches": []}, {"regex": "5", "exceptionStackTrace": null, "matches": ["5"], "nonMatches": []}, {"regex": "^ *(([\\.\\-\\+\\w]{2,}[a-z0-9])@([\\.\\-\\w]+[a-z0-9])\\.([a-z]{2,3})) *(; *(([\\.\\-\\+\\w]{2,}[a-z0-9])@([\\.\\-\\w]+[a-z0-9])\\.([a-z]{2,3})) *)* *$", "exceptionStackTrace": null, "matches": [" ++0@evil0.aa ; ++0@evil0.aa ; ++0@evil0.aa  ", " ++0@evil0.aa  ", " ++0@evil0.aa ; ++0@evil0.aa   ", " ++0@evil0.aa ; ++0@evil0.aa ", " ++0@evil0.aa ; ++0@evil0.aaa  ", " ++0@evil0.aa ; ++0@evila.aa  ", " ++0@evil0.aa ; ++0@.0.aa  ", " ++0@evil0.aa ; ++0@-0.aa  ", " ++0@evil0.aa ; ++0@eVil0.aa  ", " ++0@evil0.aa ; ++0@EVIL0.aa  ", " ++0@evil0.aa ; ++0@ev_il0.aa  ", " ++0@evil0.aa ; ++0@ev4il0.aa  ", " ++0@evil0.aa ; ++0@e0.aa  ", " ++0@evil0.aa ; ++0@60.aa  ", " ++0@evil0.aa ; ++0@_0.aa  ", " ++0@evil0.aa ; ++a@evil0.aa  ", " ++0@evil0.aa ; a+0@evil0.aa  ", " ++0@evil0.aa ; _+0@evil0.aa  ", " ++0@evil0.aa ; A+0@evil0.aa  ", " ++0@evil0.aa ; 0+0@evil0.aa  ", " ++0@evil0.aa ; .+0@evil0.aa  ", " ++0@evil0.aa ; -+0@evil0.aa  ", " ++0@evil0.aa ;  ++0@evil0.aa  ", " ++0@evil0.aa ;++0@evil0.aa  ", " ++0@evil0.aa  ; ++0@evil0.aa  ", " ++0@evil0.aa; ++0@evil0.aa  ", " ++0@evil0.aaa ; ++0@evil0.aa  ", " ++0@evila.aa ; ++0@evil0.aa  ", " ++0@.0.aa ; ++0@evil0.aa  ", " ++0@-0.aa ; ++0@evil0.aa  ", " ++0@eVil0.aa ; ++0@evil0.aa  ", " ++0@EVIL0.aa ; ++0@evil0.aa  ", " ++0@ev_il0.aa ; ++0@evil0.aa  ", " ++0@ev4il0.aa ; ++0@evil0.aa  ", " ++0@e0.aa ; ++0@evil0.aa  ", " ++0@60.aa ; ++0@evil0.aa  ", " ++0@_0.aa ; ++0@evil0.aa  ", " ++a@evil0.aa ; ++0@evil0.aa  ", " a+0@evil0.aa ; ++0@evil0.aa  ", " _+0@evil0.aa ; ++0@evil0.aa  ", " A+0@evil0.aa ; ++0@evil0.aa  ", " 0+0@evil0.aa ; ++0@evil0.aa  ", " .+0@evil0.aa ; ++0@evil0.aa  ", " -+0@evil0.aa ; ++0@evil0.aa  ", "  ++0@evil0.aa ; ++0@evil0.aa  ", "++0@evil0.aa ; ++0@evil0.aa  ", "++0@evil0.aa", " ++0@evil0.aa ; ++0@evil0.aa  "], "nonMatches": [" ++0@evil0.aa ; ++0@evil0.aaaa  ", " ++0@evil0.aa ; ++0@evil0.a  ", " ++0@evil0.aa ; ++0@@0.aa  ", " ++0@evil0.aa ; ++0@;0.aa  ", " ++0@evil0.aa ; ++0@+0.aa  ", " ++0@evil0.aa ; ++0@ev il0.aa  ", " ++0@evil0.aa ; ++0@ 0.aa  ", " ++0@evil0.aa ; ++0@0.aa  ", " ++0@evil0.aa ; +0@evil0.aa  ", " ++0@evil0.aaaa ; ++0@evil0.aa  ", " ++0@evil0.a ; ++0@evil0.aa  ", " ++0@@0.aa ; ++0@evil0.aa  ", " ++0@;0.aa ; ++0@evil0.aa  ", " ++0@+0.aa ; ++0@evil0.aa  ", " ++0@ev il0.aa ; ++0@evil0.aa  ", " ++0@ 0.aa ; ++0@evil0.aa  ", " ++0@0.aa ; ++0@evil0.aa  ", " +0@evil0.aa ; ++0@evil0.aa  "]}, {"regex": "^((((0[1-9]|[1-2][0-9]|3[0-1])[./-](0[13578]|10|12))|((0[1-9]|[1-2][0-9])[./-](02))|(((0[1-9])|([1-2][0-9])|(30))[./-](0[469]|11)))[./-]((19\\d{2})|(2[012]\\d{2})))$", "exceptionStackTrace": null, "matches": ["01-06-1900", "01-04-1900", "01/09-1900", "01.09-1900", "01/02-1900", "01.02-1900", "01-08-2100", "01-08-2000", "01-08/1900", "01-08.1900", "01-07-1900", "01-05-1900", "01-03-1900", "01-01-1900", "01/08-1900", "01.08-1900", "30-09-1900", "10-09-1900", "01-11-1900", "01-09-1900", "10-02-1900", "01-02-1900", "30-08-1900", "10-08-1900", "01-12-1900", "01-10-1900", "01-08-2200", "01-08-1900"], "nonMatches": ["00-09-1900", "00-02-1900", "32-08-1900", "01-08-22000", "01-08-220", "01-08-2300", "01-08-19000", "01-08-190", "01-00-1900", "00-08-1900"]}, {"regex": "^(s-|S-){0,1}[0-9]{3}\\s?[0-9]{2}$", "exceptionStackTrace": null, "matches": ["s-00000", "000 00", "00000", "S-000 00", "s-000 00"], "nonMatches": ["s-000 000", "s-000 0", "s-000  00", "s-0000 00", "s-00 00", "s-s-000 00"]}, {"regex": "(^|([:]|\\n|\\s))(4[0-9]{3}[ -]*[0-9]{4}[ -]*[0-9]{4}[ -]*[0-9]{4}|5[12345][0-9]{2}[ -]*[0-9]{4}[ -]*[0-9]{4}[ -]*[0-9]{4}|3[47][0-9]{2}[ -]*[0-9]{6}[ -]*[0-9]{5}|3(?:0[012345]|[68][0-9])[0-9][ -]*[0-9]{6}[ -]*[0-9]{4}|6(?:011|5[0-9]{2})[ -]*[0-9]{4}[ -]*[0-9]{4}[ -]*[0-9]{4}|35[0-9]{2}[ -]*[0-9]{4}[ -]*[0-9]{4}[ -]*[0-9]{4}|(?:2131|1800)[ -]*[0-9]{6}[ -]*[0-9]{5})", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^[0-9]{1}$|^[1-6]{1}[0-3]{1}$|^64$|\\-[1-9]{1}$|^\\-[1-6]{1}[0-3]{1}$|^\\-64$", "exceptionStackTrace": null, "matches": ["-11", "1", "-64", "-10", "-1", "64", "10", "0"], "nonMatches": ["-100", "-14", "-110", "-00", "-", "-0", "100", "14", "110", "00", ""]}, {"regex": "([0-9]* {0,2}[A-Z]{1}\\w+[,.;:]? {0,4}[xvilcXVILC\\d]+[.,;:]( {0,2}[\\d-,]{1,7})+)([,.;:] {0,4}[xvilcXVILC]*[.,;:]( {0,2}[\\d-,]{1,7})+)*", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character range \\d-,"}, "matches": []}, {"regex": "^((?:\\+27|27)|0)(=72|82|73|83|74|84)(\\d{7})$", "exceptionStackTrace": null, "matches": ["0=720000000", "27=720000000", "+27840000000", "+27740000000", "+27830000000", "+27730000000", "+27820000000", "+27=720000000"], "nonMatches": ["+27=7200000000", "+27=72000000"]}, {"regex": "&quot;^[A-Z0-9a-z&#39;&()/]{0,1}[A-Z0-9a-z&#39;&()/]{0,1}(([A-Z0-9a-z&#39;&()/_-])|(\\\\s)){0,47}[A-Z0-9a-z&#39;&()/]{1}$&quot;", "exceptionStackTrace": null, "matches": [], "nonMatches": ["&quot;//-//&quot;", "&quot;//-&quot;", "&quot;//-a&quot;", "&quot;//-A&quot;", "&quot;//-;&quot;", "&quot;//-9&quot;", "&quot;//-3&quot;", "&quot;//-0&quot;", "&quot;//-)&quot;", "&quot;//-(&quot;", "&quot;//-&&quot;", "&quot;//-#&quot;", "&quot;//------------------------------------------------/&quot;", "&quot;//-----------------------------------------------/&quot;", "&quot;///&quot;", "&quot;//a/&quot;", "&quot;//_/&quot;", "&quot;//A/&quot;", "&quot;//;/&quot;", "&quot;//9/&quot;", "&quot;//3/&quot;", "&quot;//0/&quot;", "&quot;////&quot;", "&quot;//)/&quot;", "&quot;//(/&quot;", "&quot;//&/&quot;", "&quot;//#/&quot;", "&quot;/a-/&quot;", "&quot;/A-/&quot;", "&quot;/;-/&quot;", "&quot;/9-/&quot;", "&quot;/3-/&quot;", "&quot;/0-/&quot;", "&quot;/)-/&quot;", "&quot;/(-/&quot;", "&quot;/&-/&quot;", "&quot;/#-/&quot;", "&quot;///-/&quot;", "&quot;/-/&quot;", "&quot;a/-/&quot;", "&quot;A/-/&quot;", "&quot;;/-/&quot;", "&quot;9/-/&quot;", "&quot;3/-/&quot;", "&quot;0/-/&quot;", "&quot;)/-/&quot;", "&quot;(/-/&quot;", "&quot;&/-/&quot;", "&quot;#/-/&quot;", "&quot;/&quot;", "&quot;//\\s/&quot;", "&quot;//-/&quot;"]}, {"regex": "(\\d+(-\\d+)*)+(,\\d+(-\\d+)*)*", "exceptionStackTrace": null, "matches": ["0-0,0-0,0-0", "0-0", "0-0,0-0-0", "0-0,0", "0-0,0-00", "0-0,0-", "0-0,00-0", "0-0,-0", "0-00-0,0-0", ",0-0", "0-0-0,0-0", "0,0-0", "0-00,0-0", "0-,0-0", "00-0,0-0", "-0,0-0", "0", "0-0,0-0"], "nonMatches": []}, {"regex": "([A-Z&#228;&#246;&#252;0-9\\/][^a-z\\:\\,\\(\\)]*[A-Z&#228;&#246;&#252;0-9])($|[\\.\\:\\,\\;\\)\\-\\ \\+]|s\\b)", "exceptionStackTrace": null, "matches": ["/evil;;", "/;;", "//;", "/.;", "/-;", "/+;", "/&;", "/#;", "/EVIL;", "/ ;", "/6;", "/_;", "/;s", "/;+", "/;"], "nonMatches": ["/evil;:", "/evil;.", "/evil;-", "/evil;,", "/evil;)", "/evil; ", "/evilA", "/evil8", "/evil6", "/evil5", "/evil4", "/evil2", "/evil0", "/evil&", "/evil#", "/:;", "/,;", "/);", "/(;", "/eVil;", "/ev_il;", "/ev il;", "/ev4il;", "/e;", "Aevil;", ";evil;", "8evil;", "6evil;", "5evil;", "4evil;", "2evil;", "0evil;", "&evil;", "#evil;", "/evil;s", "/evil;+", "/evil;"]}, {"regex": "^04[0-9]{8}", "exceptionStackTrace": null, "matches": ["04000000000", "0400000000"], "nonMatches": ["040000000"]}, {"regex": "^(\\d{1,3}&#39;(\\d{3}&#39;)*\\d{3}(\\.\\d{1,3})?|\\d{1,3}(\\.\\d{3})?)$", "exceptionStackTrace": null, "matches": ["000.000", "0&#39;000&#39;000", "0&#39;000&#39;000.000", "0&#39;000&#39;000&#39;000.0", "0&#39;000.0", "000&#39;000&#39;000.0", "0", "0&#39;000", "0.000", "0&#39;000&#39;000.0"], "nonMatches": ["0.000.000", "0.0000", "0.00", "0000.000", ".000", "0&#39;000&#39;000.0.0", "0&#39;000&#39;000.0000", "0&#39;000&#39;000.", "0&#39;000&#39;0000.0", "0&#39;000&#39;00.0", "0&#39;0000&#39;000.0", "0&#39;00&#39;000.0", "0000&#39;000&#39;000.0", "&#39;000&#39;000.0"]}, {"regex": "^((0?[1-9]|[12][1-9]|3[01])\\.(0?[13578]|1[02])\\.20[0-9]{2}|(0?[1-9]|[12][1-9]|30)\\.(0?[13456789]|1[012])\\.20[0-9]{2}|(0?[1-9]|1[1-9]|2[0-8])\\.(0?[123456789]|1[012])\\.20[0-9]{2}|(0?[1-9]|[12][1-9])\\.(0?[123456789]|1[012])\\.20(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))$", "exceptionStackTrace": null, "matches": ["29.09.2000", "01.02.2000", "01.06.2000", "01.04.2000", "01.9.2000", "1.09.2000", "30.08.2000", "20.08.2000", "11.08.2000", "01.11.2000", "01.10.2000", "01.07.2000", "01.05.2000", "01.03.2000", "01.01.2000", "01.8.2000", "1.08.2000", "1.9.2096", "1.9.2092", "1.9.2088", "1.9.2084", "1.9.2080", "1.9.2076", "1.9.2072", "1.9.2068", "1.9.2064", "1.9.2060", "1.9.2056", "1.9.2052", "1.9.2048", "1.9.2044", "1.9.2040", "1.9.2036", "1.9.2032", "1.9.2028", "1.9.2024", "1.9.2020", "1.9.2016", "1.9.2012", "1.9.2008", "1.9.2004", "20.9.2000", "11.9.2000", "30.9.2000", "21.9.2000", "1.9.2000", "31.8.2000", "21.8.2000", "1.12.2000", "1.8.2000", "01.09.2096", "01.09.2092", "01.09.2088", "01.09.2084", "01.09.2080", "01.09.2076", "01.09.2072", "01.09.2068", "01.09.2064", "01.09.2060", "01.09.2056", "01.09.2052", "01.09.2048", "01.09.2044", "01.09.2040", "01.09.2036", "01.09.2032", "01.09.2028", "01.09.2024", "01.09.2020", "01.09.2016", "01.09.2012", "01.09.2008", "01.09.2004", "20.09.2000", "11.09.2000", "30.09.2000", "21.09.2000", "01.09.2000", "31.08.2000", "21.08.2000", "01.12.2000", "01.08.2000"], "nonMatches": ["10.09.2000", "01.13.2000", "01.09.20000", "01.09.200", "01.009.2000", "00.09.2000", "001.09.2000", "32.08.2000", "01.08.20000", "01.08.200", "01.00.2000", "01.008.2000", "00.08.2000", "001.08.2000"]}, {"regex": "^((\\(([1-9]{2})\\))(\\s)?(\\.)?(\\-)?([0-9]{0,1})?([0-9]{4})(\\s)?(\\.)?(\\-)?([0-9]{4})|(([1-9]{2}))(\\s)?(\\.)?(\\-)?([0-9]{0,1})?([0-9]{4})(\\s)?(\\.)?(\\-)?([0-9]{4}))$", "exceptionStackTrace": null, "matches": ["11 .-00000 .0000", "11 .-00000 -0000", "11 .-00000.-0000", "11 .-0000 .-0000", "11 .00000 .-0000", "11 -00000 .-0000", "11.-00000 .-0000", "(11) .-00000 .0000", "(11) .-00000 -0000", "(11) .-00000.-0000", "(11) .-0000 .-0000", "(11) .00000 .-0000", "(11) -00000 .-0000", "(11).-00000 .-0000", "1100000000", "(11)00000000", "11 .-00000 .-0000", "(11) .-00000 .-0000"], "nonMatches": ["11 .-00000 .-00000", "11 .-00000 .-000", "11 .-00000 .--0000", "11 .-00000 ..-0000", "11 .-00000  .-0000", "11 .-000000 .-0000", "11 .--00000 .-0000", "11 ..-00000 .-0000", "11  .-00000 .-0000", "111 .-00000 .-0000", "1 .-00000 .-0000", "01 .-00000 .-0000", "(11) .-00000 .-00000", "(11) .-00000 .-000", "(11) .-00000 .--0000", "(11) .-00000 ..-0000", "(11) .-00000  .-0000", "(11) .-000000 .-0000", "(11) .--00000 .-0000", "(11) ..-00000 .-0000", "(11)  .-00000 .-0000", "(111) .-00000 .-0000", "(1) .-00000 .-0000", "(01) .-00000 .-0000"]}, {"regex": "^(([a-zA-Z]:)|(\\\\{2}\\w+)\\$?)(\\\\(\\w[\\w ]*.*))+\\.(txt|TXT)$", "exceptionStackTrace": null, "matches": ["\\\\evil\\aevilevil.txt", "\\\\eVil$\\aevilevil.txt", "\\\\EVIL$\\aevilevil.txt", "\\\\ev_il$\\aevilevil.txt", "\\\\ev4il$\\aevilevil.txt", "\\\\e$\\aevilevil.txt", "\\\\6$\\aevilevil.txt", "\\\\_$\\aevilevil.txt", "A:\\aevilevil\\aevilevil.txt", "A:\\aevil\\.txt", "A:\\aevil:.txt", "A:\\aevil..txt", "A:\\aevil$.txt", "A:\\aevileVil.txt", "A:\\aevilEVIL.txt", "A:\\aevilev_il.txt", "A:\\aevilev il.txt", "A:\\aevilev4il.txt", "A:\\aevile.txt", "A:\\aevil .txt", "A:\\aevil6.txt", "A:\\aevil_.txt", "A:\\aeVilevil.txt", "A:\\aEVILevil.txt", "A:\\aev_ilevil.txt", "A:\\aev ilevil.txt", "A:\\aev4ilevil.txt", "A:\\aeevil.txt", "A:\\a evil.txt", "A:\\a6evil.txt", "A:\\a_evil.txt", "A:\\aevil.txt", "A:\\_evilevil.txt", "A:\\Aevilevil.txt", "A:\\0evilevil.txt", "a:\\aevilevil.txt", "\\\\evil\\a.txt", "A:\\a.TXT", "A:\\a.txt", "\\\\evil$\\aevilevil.txt", "A:\\aevilevil.TXT", "A:\\aevilevil.txt"], "nonMatches": ["\\\\evil$$\\aevilevil.txt", "\\\\ev il$\\aevilevil.txt", "\\\\ $\\aevilevil.txt", "\\\\$\\aevilevil.txt", "\\\\\\evil$\\aevilevil.txt", "\\evil$\\aevilevil.txt", "A:.txt"]}, {"regex": "^[0-9]{6}", "exceptionStackTrace": null, "matches": ["0000000", "000000"], "nonMatches": ["00000"]}, {"regex": "\\xA9", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 169"}, "matches": [], "nonMatches": []}, {"regex": "\\u2122", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 8482"}, "matches": [], "nonMatches": []}, {"regex": "\\u00AE", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 174"}, "matches": [], "nonMatches": []}, {"regex": "\\u00A3", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 163"}, "matches": [], "nonMatches": []}, {"regex": "\\u20AC", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 8364"}, "matches": [], "nonMatches": []}, {"regex": "\\u00A5", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 165"}, "matches": [], "nonMatches": []}, {"regex": "\\u221E", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 8734"}, "matches": [], "nonMatches": []}, {"regex": "^(([a-zA-Z]:)|(\\\\{2}\\w+)\\$?)(\\\\(\\w[\\w ]*.*))+\\.(jpg|JPG)$", "exceptionStackTrace": null, "matches": ["\\\\evil\\aevilevil.jpg", "\\\\eVil$\\aevilevil.jpg", "\\\\EVIL$\\aevilevil.jpg", "\\\\ev_il$\\aevilevil.jpg", "\\\\ev4il$\\aevilevil.jpg", "\\\\e$\\aevilevil.jpg", "\\\\6$\\aevilevil.jpg", "\\\\_$\\aevilevil.jpg", "A:\\aevilevil\\aevilevil.jpg", "A:\\aevil\\.jpg", "A:\\aevil:.jpg", "A:\\aevil..jpg", "A:\\aevil$.jpg", "A:\\aevileVil.jpg", "A:\\aevilEVIL.jpg", "A:\\aevilev_il.jpg", "A:\\aevilev il.jpg", "A:\\aevilev4il.jpg", "A:\\aevile.jpg", "A:\\aevil .jpg", "A:\\aevil6.jpg", "A:\\aevil_.jpg", "A:\\aeVilevil.jpg", "A:\\aEVILevil.jpg", "A:\\aev_ilevil.jpg", "A:\\aev ilevil.jpg", "A:\\aev4ilevil.jpg", "A:\\aeevil.jpg", "A:\\a evil.jpg", "A:\\a6evil.jpg", "A:\\a_evil.jpg", "A:\\aevil.jpg", "A:\\_evilevil.jpg", "A:\\Aevilevil.jpg", "A:\\0evilevil.jpg", "a:\\aevilevil.jpg", "\\\\evil\\a.jpg", "A:\\a.JPG", "A:\\a.jpg", "\\\\evil$\\aevilevil.jpg", "A:\\aevilevil.JPG", "A:\\aevilevil.jpg"], "nonMatches": ["\\\\evil$$\\aevilevil.jpg", "\\\\ev il$\\aevilevil.jpg", "\\\\ $\\aevilevil.jpg", "\\\\$\\aevilevil.jpg", "\\\\\\evil$\\aevilevil.jpg", "\\evil$\\aevilevil.jpg", "A:.jpg"]}, {"regex": "(((19|20)([2468][048]|[13579][26]|0[48])|2000)/02/29|((19|20)[0-9]{2}/(0[469]|11)/(0[1-9]|[12][0-9]|30)|(19|20)[0-9]{2}/(0[13578]|1[02])/(0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}/02/(0[1-9]|1[0-9]|2[0-8]))) ", "exceptionStackTrace": null, "matches": ["1900/10/01 ", "1900/08/30 ", "1900/08/10 ", "1900/07/01 ", "1900/05/01 ", "1900/03/01 ", "1900/01/01 ", "1900/09/10 ", "1900/06/01 ", "1900/04/01 ", "1904/02/29 ", "1992/02/29 ", "1976/02/29 ", "1956/02/29 ", "1936/02/29 ", "1916/02/29 ", "1984/02/29 ", "1980/02/29 ", "1968/02/29 ", "1948/02/29 ", "1928/02/29 ", "2000/02/01 ", "1900/02/20 ", "1900/02/10 ", "1900/02/01 ", "2000/08/01 ", "1900/12/01 ", "1900/08/31 ", "1900/08/20 ", "1900/08/01 ", "2000/09/01 ", "1900/11/01 ", "1900/09/30 ", "1900/09/20 ", "1900/09/01 ", "2000/02/29 ", "2088/02/29 ", "1908/02/29 ", "1996/02/29 ", "1988/02/29 "], "nonMatches": ["1900/02/00 ", "19000/02/01 ", "190/02/01 ", "1900/08/32 ", "1900/08/00 ", "19000/08/01 ", "190/08/01 ", "1900/09/00 ", "1900/00/01 ", "19000/09/01 ", "190/09/01 ", "1900/02/29 ", "1990/02/29 ", "1906/02/29 ", "1981/02/29 "]}, {"regex": "((((19|20)([2468][048]|[13579][26]|0[48])|2000)-02-29|((19|20)[0-9]{2}-(0[469]|11)-(0[1-9]|[12][0-9]|30)|(19|20)[0-9]{2}-(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}-02-(0[1-9]|1[0-9]|2[0-8])))\\s([01][0-9]|2[0-3]):([012345][0-9]):([012345][0-9])) ", "exceptionStackTrace": null, "matches": ["1900-10-01 10:50:50 ", "1900-08-30 10:50:50 ", "1900-08-10 10:50:50 ", "1900-07-01 10:50:50 ", "1900-05-01 10:50:50 ", "1900-03-01 10:50:50 ", "1900-01-01 10:50:50 ", "1900-09-10 10:50:50 ", "1900-06-01 10:50:50 ", "1900-04-01 10:50:50 ", "1904-02-29 10:50:50 ", "1992-02-29 10:50:50 ", "1976-02-29 10:50:50 ", "1956-02-29 10:50:50 ", "1936-02-29 10:50:50 ", "1916-02-29 10:50:50 ", "1988-02-29 10:50:40 ", "1988-02-29 10:50:30 ", "1988-02-29 10:50:20 ", "1988-02-29 10:50:10 ", "1988-02-29 10:50:00 ", "1988-02-29 10:40:50 ", "1988-02-29 10:30:50 ", "1988-02-29 10:20:50 ", "1988-02-29 10:10:50 ", "1988-02-29 10:00:50 ", "1988-02-29 00:50:50 ", "1984-02-29 10:50:50 ", "1980-02-29 10:50:50 ", "1968-02-29 10:50:50 ", "1948-02-29 10:50:50 ", "1928-02-29 10:50:50 ", "2000-02-01 10:50:50 ", "1900-02-20 10:50:50 ", "1900-02-10 10:50:50 ", "1900-02-01 10:50:50 ", "2000-08-01 10:50:50 ", "1900-12-01 10:50:50 ", "1900-08-31 10:50:50 ", "1900-08-20 10:50:50 ", "1900-08-01 10:50:50 ", "2000-09-01 10:50:50 ", "1900-11-01 10:50:50 ", "1900-09-30 10:50:50 ", "1900-09-20 10:50:50 ", "1900-09-01 10:50:50 ", "2000-02-29 10:50:50 ", "2088-02-29 10:50:50 ", "1908-02-29 10:50:50 ", "1996-02-29 10:50:50 ", "1988-02-29 20:50:50 ", "1988-02-29 10:50:50 "], "nonMatches": ["1900-02-00 10:50:50 ", "19000-02-01 10:50:50 ", "190-02-01 10:50:50 ", "1900-08-32 10:50:50 ", "1900-08-00 10:50:50 ", "19000-08-01 10:50:50 ", "190-08-01 10:50:50 ", "1900-09-00 10:50:50 ", "1900-00-01 10:50:50 ", "19000-09-01 10:50:50 ", "190-09-01 10:50:50 ", "1900-02-29 10:50:50 ", "1990-02-29 10:50:50 ", "1906-02-29 10:50:50 ", "1988-02-29 24:50:50 ", "1988-02-29 10:50:60 ", "1988-02-29 10:60:50 ", "1981-02-29 10:50:50 "]}, {"regex": "(((\\d{2}((0[13578]|1[02])(0[1-9]|[12]\\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\\d|30)|02(0[1-9]|1\\d|2[0-8])))|([02468][048]|[13579][26])0229))(( |-)(\\d{4})( |-)([01]8((( |-)\\d{1})|\\d{1}))|(\\d{4}[01]8\\d{1}))", "exceptionStackTrace": null, "matches": ["920229 0000 18 0", "760229 0000 18 0", "560229 0000 18 0", "360229 0000 18 0", "160229 0000 18 0", "840229 0000 18 0", "800229 0000 18 0", "680229 0000 18 0", "480229 0000 18 0", "280229 0000 18 0", "080229 0000 18 0", "000229 0000 18 0", "000910 0000 18 0", "000601 0000 18 0", "000401 0000 18 0", "001101 0000 18 0", "001001 0000 18 0", "000830 0000 18 0", "000810 0000 18 0", "00080100001800", "0008010000080", "000801 0000 1800", "000801 0000 18 00", "000801 0000 08 0", "000701 0000 18 0", "000501 0000 18 0", "000301 0000 18 0", "000101 0000 18 0", "0000801 0000 18 0", "960229 0000 18 0", "880229 0000 18 0", "000220 0000 18 0", "000210 0000 18 0", "000201 0000 18 0", "000930 0000 18 0", "000920 0000 18 0", "000901 0000 18 0", "001201 0000 18 0", "000831 0000 18 0", "000820 0000 18 0", "0008010000180", "000801-0000 18 0", "000801 0000-18 0", "000801 0000 180", "000801 0000 18-0", "000801 0000 18 0"], "nonMatches": ["900229 0000 18 0", "060229 0000 18 0", "810229 0000 18 0", "180229 0000 18 0", "000200 0000 18 0", "001301 0000 18 0", "000900 0000 18 0", "000832 0000 18 0", "000801000018", "0008010000280", "00080100000180", "000801000180", "000801 0000 18", "000801 0000 18 ", "000801 0000 28 0", "000801 00000 18 0", "000801 000 18 0", "000800 0000 18 0", "000001 0000 18 0", "00801 0000 18 0"]}, {"regex": "(?<=<\\w+ )(\\w+-*\\w*=[^>]+\\s?)(?=>)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "look-behind requires fixed-width pattern"}, "matches": []}, {"regex": "[\\u0410-\\u042F\\u0430-\\u044F]+", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 1040"}, "matches": [], "nonMatches": []}, {"regex": "^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$ \n", "exceptionStackTrace": null, "matches": [], "nonMatches": ["(00)-(44)-(0)-(845-46--40-x0 \n", "(00)-(44)-(0)-(845-4640-x0 \n", "(00)-(44)-(0)-(845-46 40-x0 \n", "(00)-(44)-(0)-(845--46-40-x0 \n", "(00)-(44)-(0)-(84546-40-x0 \n", "(00)-(44)-(0)-(845 46-40-x0 \n", "(00)-(44)-(0)-(800-11--11-x0 \n", "(00)-(44)-(0)-(800-1111-x0 \n", "(00)-(44)-(0)-(800-11 11-x0 \n", "(00)-(44)-(0)-(800--11-11-x0 \n", "(00)-(44)-(0)-(80011-11-x0 \n", "(00)-(44)-(0)-(800 11-11-x0 \n", "(00)-(44)-(0)-(00000)-000000-x0 \n", "(00)-(44)-(0)-(00000)-000-x0 \n", "(00)-(44)-(0)-(00000)--0000-x0 \n", "(00)-(44)-(0)-(00000)0000-x0 \n", "(00)-(44)-(0)-(00000) 0000-x0 \n", "(00)-(44)-(0)-(00000))-0000-x0 \n", "(00)-(44)-(0)-(00000-0000-x0 \n", "(00)-(44)-(0)-(000000)-0000-x0 \n", "(00)-(44)-(0)-(0000)-000-0000-x0 \n", "(00)-(44)-(0)-(0000)-000-00-x0 \n", "(00)-(44)-(0)-(0000)-000--000-x0 \n", "(00)-(44)-(0)-(0000)-000 000-x0 \n", "(00)-(44)-(0)-(0000)-0000-000-x0 \n", "(00)-(44)-(0)-(0000)-00-000-x0 \n", "(00)-(44)-(0)-(0000)-000000-x0 \n", "(00)-(44)-(0)-(0000)-0000-x0 \n", "(00)-(44)-(0)-(0000)--00000-x0 \n", "(00)-(44)-(0)-(0000)00000-x0 \n", "(00)-(44)-(0)-(0000) 00000-x0 \n", "(00)-(44)-(0)-(0000))-00000-x0 \n", "(00)-(44)-(0)-(0000-00000-x0 \n", "(00)-(44)-(0)-(00000)-00000-x0 \n", "(00)-(44)-(0)-(000)-00000-x0 \n", "(00)-(44)-(0)-(000)-000-00000-x0 \n", "(00)-(44)-(0)-(000)-000-0000-x0 \n", "(00)-(44)-(0)-(000)-000-00-x0 \n", "(00)-(44)-(0)-(000)-000--000-x0 \n", "(00)-(44)-(0)-(000)-000000-x0 \n", "(00)-(44)-(0)-(000)-000 000-x0 \n", "(00)-(44)-(0)-(000)-0000-000-x0 \n", "(00)-(44)-(0)-(000)-00-000-x0 \n", "(00)-(44)-(0)-(000)--000-000-x0 \n", "(00)-(44)-(0)-(000)000-000-x0 \n", "(00)-(44)-(0)-(000) 000-000-x0 \n", "(00)-(44)-(0)-(000))-000-000-x0 \n", "(00)-(44)-(0)-(000-000-000-x0 \n", "(00)-(44)-(0)-(00)-000-000-x0 \n", "(00)-(44)-(0)-(00)-0000-0000-ext.  0 \n", "(00)-(44)-(0)-(00)-0000-0000-ext.0 \n", "(00)-(44)-(0)-(00)-0000-0000-ext.. 0 \n", "(00)-(44)-(0)-(00)-0000-0000-ext 0 \n", "(00)-(44)-(0)-(00)-0000-0000-x0-x0 \n", "(00)-(44)-(0)-(00)-0000-0000 \n", "(00)-(44)-(0)-(00)-0000-0000-x00 \n", "(00)-(44)-(0)-(00)-0000-0000-x \n", "(00)-(44)-(0)-(00)-0000-0000--x0 \n", "(00)-(44)-(0)-(00)-0000-0000x0 \n", "(00)-(44)-(0)-(00)-0000-0000 x0 \n", "(00)-(44)-(0)-(00)-0000-00000-x0 \n", "(00)-(44)-(0)-(00)-0000-000-x0 \n", "(00)-(44)-(0)-(00)-0000--0000-x0 \n", "(00)-(44)-(0)-(00)-00000000-x0 \n", "(00)-(44)-(0)-(00)-0000 0000-x0 \n", "(00)-(44)-(0)-(00)-00000-0000-x0 \n", "(00)-(44)-(0)-(00)-000-0000-x0 \n", "(00)-(44)-(0)-(00)--0000-0000-x0 \n", "(00)-(44)-(0)-(00)0000-0000-x0 \n", "(00)-(44)-(0)-(00) 0000-0000-x0 \n", "(00)-(44)-(0)-(00))-0000-0000-x0 \n", "(00)-(44)-(0)-(00-0000-0000-x0 \n", "(00)-(44)-(0)-(000)-0000-0000-x0 \n", "(00)-(44)-(0)-(0)-0000-0000-x0 \n", "(00)-(44)-(0)-(0)-(00)-0000-0000-x0 \n", "(00)-(44)-(00)-0000-0000-x0 \n", "(00)-(44)-(0)-((00)-0000-0000-x0 \n", "(00)-(44)-(0)-00)-0000-0000-x0 \n", "(00)-(44)-(0)--(00)-0000-0000-x0 \n", "(00)-(44)-(0)(00)-0000-0000-x0 \n", "(00)-(44)-(0) (00)-0000-0000-x0 \n", "(00)-(44)-(0))-(00)-0000-0000-x0 \n", "(00)-(44)-(0-(00)-0000-0000-x0 \n", "(00)-(44)-((0)-(00)-0000-0000-x0 \n", "(00)-(44)-0)-(00)-0000-0000-x0 \n", "(00)-(44)--(0)-(00)-0000-0000-x0 \n", "(00)-(44)(0)-(00)-0000-0000-x0 \n", "(00)-(44) (0)-(00)-0000-0000-x0 \n", "(00)-(44))-(0)-(00)-0000-0000-x0 \n", "(00)-(44-(0)-(00)-0000-0000-x0 \n", "(00)-((44)-(0)-(00)-0000-0000-x0 \n", "(00)-44)-(0)-(00)-0000-0000-x0 \n", "(00)--(44)-(0)-(00)-0000-0000-x0 \n", "(00)(44)-(0)-(00)-0000-0000-x0 \n", "(00) (44)-(0)-(00)-0000-0000-x0 \n", "(00))-(44)-(0)-(00)-0000-0000-x0 \n", "(00-(44)-(0)-(00)-0000-0000-x0 \n", "((00)-(44)-(0)-(00)-0000-0000-x0 \n", "00)-(44)-(0)-(00)-0000-0000-x0 \n", "00000000000 \n", "+440000000000 \n", "011440000000000 \n", "00448454640 \n", "00448001111 \n", "0044000000000 \n", "00440000000000 \n", "(000)-0000-0000-x0 \n", "(+44)-(0)-(00)-0000-0000-x0 \n", "(011)-(44)-(0)-(00)-0000-0000-x0 \n", "(00)-(44)-(0)-(845-46-40-x0 \n", "(00)-(44)-(0)-(800-11-11-x0 \n", "(00)-(44)-(0)-(00000)-0000-x0 \n", "(00)-(44)-(0)-(0000)-000-000-x0 \n", "(00)-(44)-(0)-(0000)-00000-x0 \n", "(00)-(44)-(0)-(000)-000-000-x0 \n", "(00)-(44)-(0)-(00)-0000-0000-#0 \n", "(00)-(44)-(0)-(00)-0000-0000-ext. 0 \n", "(00)-(44)-(0)-(00)-0000-0000-x0 \n"]}, {"regex": "^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)(44)\\)?[\\s-]?\\(?(?:0\\)?[\\s-]?\\(?)?|0)([1-9]\\d{1,4}\\)?[\\s\\d-]+)(?:((?:x|ext\\.?\\s?|\\#)\\d+)?)$ ", "exceptionStackTrace": null, "matches": [], "nonMatches": ["(00)-(44)-(0)-(10)-ext.  0 ", "(00)-(44)-(0)-(10)-ext.0 ", "(00)-(44)-(0)-(10)-ext.. 0 ", "(00)-(44)-(0)-(10)-ext 0 ", "(00)-(44)-(0)-(10)-x0x0 ", "(00)-(44)-(0)-(10)- ", "(00)-(44)-(0)-(10)-x00 ", "(00)-(44)-(0)-(10)-x ", "(00)-(44)-(0)-(10)--x0 ", "(00)-(44)-(0)-(10)x0 ", "(00)-(44)-(0)-(10)0x0 ", "(00)-(44)-(0)-(10) x0 ", "(00)-(44)-(0)-(10))-x0 ", "(00)-(44)-(0)-(10-x0 ", "(00)-(44)-(0)-(100000)-x0 ", "(00)-(44)-(0)-(10000)-x0 ", "(00)-(44)-(0)-(1)-x0 ", "(00)-(44)-(0)-(00)-x0 ", "(00)-(44)-(0)-(0)-(10)-x0 ", "(00)-(44)-(10)-x0 ", "(00)-(44)-(0)-((10)-x0 ", "(00)-(44)-(0)-10)-x0 ", "(00)-(44)-(0)--(10)-x0 ", "(00)-(44)-(0)(10)-x0 ", "(00)-(44)-(0) (10)-x0 ", "(00)-(44)-(0))-(10)-x0 ", "(00)-(44)-(0-(10)-x0 ", "(00)-(44)-((0)-(10)-x0 ", "(00)-(44)-0)-(10)-x0 ", "(00)-(44)--(0)-(10)-x0 ", "(00)-(44)(0)-(10)-x0 ", "(00)-(44) (0)-(10)-x0 ", "(00)-(44))-(0)-(10)-x0 ", "(00)-(44-(0)-(10)-x0 ", "(00)-((44)-(0)-(10)-x0 ", "(00)-44)-(0)-(10)-x0 ", "(00)--(44)-(0)-(10)-x0 ", "(00)(44)-(0)-(10)-x0 ", "(00) (44)-(0)-(10)-x0 ", "(00))-(44)-(0)-(10)-x0 ", "(00-(44)-(0)-(10)-x0 ", "((00)-(44)-(0)-(10)-x0 ", "00)-(44)-(0)-(10)-x0 ", "010- ", "+4410- ", "0114410- ", "004410- ", "(010)-x0 ", "(+44)-(0)-(10)-x0 ", "(011)-(44)-(0)-(10)-x0 ", "(00)-(44)-(0)-(10)-#0 ", "(00)-(44)-(0)-(10)-ext. 0 ", "(00)-(44)-(0)-(10)-x0 "]}, {"regex": "^((1[1-9]|2[03489]|3[0347]|5[56]|7[04-9]|8[047]|9[018])\\d{8}|(1[2-9]\\d|[58]00)\\d{6}|8(001111|45464\\d))$ ", "exceptionStackTrace": null, "matches": [], "nonMatches": ["500000000 ", "000000000 ", "1200000000 ", "12000000 ", "100000000 ", "9200000000 ", "9100000000 ", "9000000000 ", "8400000000 ", "8100000000 ", "8000000000 ", "7400000000 ", "7100000000 ", "5500000000 ", "5000000000 ", "3400000000 ", "3300000000 ", "3100000000 ", "3000000000 ", "2800000000 ", "2400000000 ", "2300000000 ", "2100000000 ", "2000000000 ", "11000000000 ", "110000000 ", "1000000000 ", "8454640 ", "8001111 ", "800000000 ", "120000000 ", "9800000000 ", "8700000000 ", "7000000000 ", "5600000000 ", "3700000000 ", "2900000000 ", "1100000000 "]}, {"regex": "^[a-zA-Z0-9._-]+$", "exceptionStackTrace": null, "matches": [".", "-", "eVil", "EVIL", "ev_il", "ev4il", "e", "6", "_", "evil"], "nonMatches": ["ev il", " ", ""]}, {"regex": "^([Aa][LKSZRAEPlkszraep]|[Cc][AOTaot]|[Dd][ECec]|[Ff][LMlm]|[Gg][AUau]|HI|hi|[Ii][ADLNadln]|[Kk][SYsy]|LA|la|[Mm][ADEHINOPSTadehinopst]|[Nn][CDEHJMVYcdehjmvy]|[Oo][HKRhkr]|[Pp][ARWarw]|RI|ri|[Ss][CDcd]|[Tt][NXnx]|UT|ut|[Vv][AITait]|[Ww][AIVYaivy])$", "exceptionStackTrace": null, "matches": ["wv", "wi", "wa", "wY", "wV", "wI", "wA", "Wy", "vi", "va", "vT", "vI", "vA", "Vt", "tn", "tX", "tN", "Tx", "sc", "sD", "sC", "Sd", "pr", "pa", "pW", "pR", "pA", "Pw", "ok", "oh", "oR", "oK", "oH", "Or", "Ar", "nv", "nm", "nj", "nh", "ne", "nd", "nc", "nY", "nV", "nM", "nJ", "nH", "nE", "nD", "nC", "Ny", "ms", "mp", "mo", "mn", "mi", "mh", "me", "md", "ma", "mT", "mS", "mP", "mO", "mN", "mI", "mH", "mE", "mD", "mA", "Mt", "ks", "kY", "kS", "Ky", "il", "id", "ia", "iN", "iL", "iD", "iA", "In", "ga", "gU", "gA", "Gu", "fl", "fM", "fL", "Fm", "de", "dE", "dC", "Dc", "co", "ca", "cT", "cO", "cA", "Ct", "az", "as", "ar", "al", "ak", "ae", "aa", "aZ", "aS", "aR", "aP", "aL", "aK", "aE", "aA", "Ap", "wy", "vt", "ut", "UT", "tx", "sd", "ri", "RI", "pw", "or", "ny", "mt", "la", "LA", "ky", "in", "hi", "HI", "gu", "fm", "dc", "ct", "ap"], "nonMatches": ["wb", "wB", "vb", "vB", "ta", "tA", "ax", "Ax", "sa", "sA", "ad", "Ad", "pb", "pB", "aw", "Aw", "oa", "oA", "na", "nA", "mb", "mB", "ka", "kA", "ay", "Ay", "ib", "iB", "an", "An", "gb", "gB", "au", "Au", "fa", "fA", "am", "Am", "da", "dA", "ac", "Ac", "cb", "cB", "at", "At", "ab", "aB", "bp", "Bp"]}, {"regex": "^((31(?! (FEB|APR|JUN|SEP|NOV)))|((30|29)(?! FEB))|(29(?= FEB (((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))|(0?[1-9])|1\\d|2[0-8])-(JAN|FEB|MAR|MAY|APR|JUL|JUN|AUG|OCT|SEP|NOV|DEC)-((1[6-9]|[2-9]\\d)\\d{2})$", "exceptionStackTrace": null, "matches": ["1-JAN-1600", "20-JAN-1600", "10-JAN-1600", "01-JAN-1600", "29-JAN-1600", "30-JAN-1600", "31-DEC-1600", "31-NOV-1600", "31-SEP-1600", "31-OCT-1600", "31-AUG-1600", "31-JUN-1600", "31-JUL-1600", "31-APR-1600", "31-MAY-1600", "31-MAR-1600", "31-FEB-1600", "31-JAN-2000", "31-JAN-1600"], "nonMatches": ["00-JAN-1600", "001-JAN-1600", "31-JAN-0000", "31-JAN-16000", "31-JAN-160", "31-JAN-1000"]}, {"regex": "^((31(?! (FEB|APR|JUN|SEP|NOV)))|(30|29)|(0[1-9])|1\\d|2[0-8]) (JAN|FEB|MAR|MAY|APR|JUL|JUN|AUG|OCT|SEP|NOV|DEC)$", "exceptionStackTrace": null, "matches": ["20 JAN", "10 JAN", "01 JAN", "29 JAN", "30 JAN", "31 DEC", "31 OCT", "31 AUG", "31 JUL", "31 MAY", "31 MAR", "31 JAN"], "nonMatches": ["00 JAN", "31 NOV", "31 SEP", "31 JUN", "31 APR", "31 FEB"]}, {"regex": "^((31(?! (FEB|APR|JUN|SEP|NOV)))|((30|29)(?! FEB))|(29(?= FEB (((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))|(0?[1-9])|1\\d|2[0-8]) (JAN|FEB|MAR|MAY|APR|JUL|JUN|AUG|OCT|SEP|NOV|DEC) ((1[6-9]|[2-9]\\d)\\d{2})$", "exceptionStackTrace": null, "matches": ["1 JAN 1600", "20 JAN 1600", "10 JAN 1600", "01 JAN 1600", "29 JAN 1600", "30 JAN 1600", "31 DEC 1600", "31 OCT 1600", "31 AUG 1600", "31 JUL 1600", "31 MAY 1600", "31 MAR 1600", "31 JAN 2000", "31 JAN 1600"], "nonMatches": ["00 JAN 1600", "001 JAN 1600", "31 JAN 0000", "31 JAN 16000", "31 JAN 160", "31 JAN 1000", "31 NOV 1600", "31 SEP 1600", "31 JUN 1600", "31 APR 1600", "31 FEB 1600"]}, {"regex": "^\\$(?<key>.+):\\s*(?<value>.+);", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<k"}, "matches": []}, {"regex": "^(\\+?)(\\d{2,4})(\\s?)(\\-?)((\\(0\\))?)(\\s?)(\\d{2})(\\s?)(\\-?)(\\d{3})(\\s?)(\\-?)(\\d{2})(\\s?)(\\-?)(\\d{2})", "exceptionStackTrace": null, "matches": ["+00 -(0) 00 -000 -00 -000", "+00 -(0) 00 -000 -00 00", "+00 -(0) 00 -000 -00-00", "+00 -(0) 00 -000 00 -00", "+00 -(0) 00 -000-00 -00", "+00 -(0) 00 000 -00 -00", "+00 -(0) 00-000 -00 -00", "+00 -(0)00 -000 -00 -00", "+00 - 00 -000 -00 -00", "+00 (0) 00 -000 -00 -00", "+00-(0) 00 -000 -00 -00", "+0000 -(0) 00 -000 -00 -00", "00 -(0) 00 -000 -00 -00", "00000000000", "+00 -(0) 00 -000 -00 -00"], "nonMatches": ["+00 -(0) 00 -000 -00 -0", "+00 -(0) 00 -000 -00 --00", "+00 -(0) 00 -000 -00  -00", "+00 -(0) 00 -000 -000 -00", "+00 -(0) 00 -000 -0 -00", "+00 -(0) 00 -000 --00 -00", "+00 -(0) 00 -000  -00 -00", "+00 -(0) 00 -0000 -00 -00", "+00 -(0) 00 -00 -00 -00", "+00 -(0) 00 --000 -00 -00", "+00 -(0) 00  -000 -00 -00", "+00 -(0) 000 -000 -00 -00", "+00 -(0) 0 -000 -00 -00", "+00 -(0)  00 -000 -00 -00", "+00 -(0)(0) 00 -000 -00 -00", "+00 --(0) 00 -000 -00 -00", "+00  -(0) 00 -000 -00 -00", "+00000 -(0) 00 -000 -00 -00", "+0 -(0) 00 -000 -00 -00", "++00 -(0) 00 -000 -00 -00"]}, {"regex": "^\\s*\\(?(020[7,8]{1}\\)?[ ]?[1-9]{1}[0-9{2}[ ]?[0-9]{4})|(0[1-8]{1}[0-9]{3}\\)?[ ]?[1-9]{1}[0-9]{2}[ ]?[0-9]{3})\\s*$", "exceptionStackTrace": null, "matches": ["01000) 100 000  ", "01000) 100 000", "01000) 100000 ", "01000)100 000 ", "01000 100 000 ", " (0208) 1 00000", " (0208) 10000", " (0208) 1}0000", " (0208) 1{0000", " (0208) 1[0000", " (0208) 120000", " (0208) 100000", " (0208)1 0000", " (0208 1 0000", " (0207) 1 0000", " (020,) 1 0000", " 0208) 1 0000", "  (0208) 1 0000", "(0208) 1 0000", "01000100000", "020810000", "01000) 100 000 ", " (0208) 1 0000"], "nonMatches": ["01000) 100 0000 ", "01000) 100 00 ", "01000) 100  000 ", "01000) 1000 000 ", "01000) 10 000 ", "01000) 1100 000 ", "01000) 00 000 ", "01000) 000 000 ", "01000)  100 000 ", "01000)) 100 000 ", "010000) 100 000 ", "0100) 100 000 ", "011000) 100 000 ", "0000) 100 000 ", "00000) 100 000 ", " (0208) 1 000", " (0208) 1  0000", " (0208) 11 0000", " (0208)  0000", " (0208) 0 0000", " (0208)  1 0000", " (0208)) 1 0000", " (02088) 1 0000", " (020) 1 0000", " (0200) 1 0000", " ((0208) 1 0000"]}, {"regex": "\\$(\\d*)??,??(\\d*)??,??(\\d*)\\.(\\d*)", "exceptionStackTrace": null, "matches": ["$0,0,0.00", "$0,0,0.", "$0,0,00.0", "$0,0,.0", "$0,00.0", "$0,00,0.0", "$0,,0.0", "$00,0.0", "$00,0,0.0", "$,0,0.0", "$.", "$0,0,0.0"], "nonMatches": ["$0,0,,0.0", "$0,,0,0.0"]}, {"regex": "^((([\\(]?[2-9]{1}[0-9]{2}[\\)]?)|([2-9]{1}[0-9]{2}\\.?)){1}[ ]?[2-9]{1}[0-9]{2}[\\-\\.]{1}[0-9]{4})([ ]?[xX]{1}[ ]?[0-9]{3,4})?$", "exceptionStackTrace": null, "matches": ["200 200.0000 X 000", "(200) 200.0000", "(200) 200.0000 X 0000", "(200) 200.0000 X000", "(200) 200.0000 x 000", "(200) 200.0000X 000", "(200) 200-0000 X 000", "(200)200.0000 X 000", "(200 200.0000 X 000", "200) 200.0000 X 000", "200200.0000", "200. 200.0000 X 000", "(200) 200.0000 X 000"], "nonMatches": ["200.. 200.0000 X 000", "2000. 200.0000 X 000", "20. 200.0000 X 000", "2200. 200.0000 X 000", "00. 200.0000 X 000", "000. 200.0000 X 000", "(200) 200.0000 X 000 X 000", "(200) 200.0000 X 00000", "(200) 200.0000 X 00", "(200) 200.0000 X  000", "(200) 200.0000 XX 000", "(200) 200.0000  000", "(200) 200.0000 a 000", "(200) 200.0000 A 000", "(200) 200.0000  X 000", "(200) 200.00000 X 000", "(200) 200.000 X 000", "(200) 200..0000 X 000", "(200) 2000000 X 000", "(200) 2000.0000 X 000", "(200) 20.0000 X 000", "(200) 2200.0000 X 000", "(200) 00.0000 X 000", "(200) 000.0000 X 000", "(200)  200.0000 X 000", "(200)(200) 200.0000 X 000", " 200.0000 X 000", "(200)) 200.0000 X 000", "(2000) 200.0000 X 000", "(20) 200.0000 X 000", "(2200) 200.0000 X 000", "(00) 200.0000 X 000", "(000) 200.0000 X 000", "((200) 200.0000 X 000"]}, {"regex": "^(~/|/|(((ht|f)tp(s?))\\://))[^/](\\S*)[^/]+$", "exceptionStackTrace": null, "matches": ["http://aevilevil", "~/aevil~", "~/aevil:", "~/aevileVil", "~/aevilEVIL", "~/aevilev_il", "~/aevilev il", "~/aevilev4il", "~/aevile", "~/aevil ", "~/aevil6", "~/aevil_", "~/a~evil", "~/a:evil", "~/a/evil", "~/aeVilevil", "~/aEVILevil", "~/aev_ilevil", "~/aev ilevil", "~/aev4ilevil", "~/aeevil", "~/a evil", "~/a6evil", "~/a_evil", "~/~evilevil", "~/Aevilevil", "~/:evilevil", "~/0evilevil", "~/ evilevil", "ftp://aevil", "http://aevil", "/aevil", "~/aevil", "ftps://aevilevil", "https://aevilevil", "/aevilevil", "~/aevilevil"], "nonMatches": ["httpss://aevilevil", "~/aevil/", "~//evilevil"]}, {"regex": "[( ]?\\d{1,3}[ )]?[ -]?\\d{3}[ -]?\\d{4}", "exceptionStackTrace": null, "matches": [" 0)-000-00000", " 0)-0000000", " 0)-000 0000", " 0)-0000-0000", " 0)000-0000", " 0) 000-0000", " 0-000-0000", " 0 -000-0000", " 0000)-000-0000", " 000)-000-0000", "  0)-000-0000", "0)-000-0000", "(0)-000-0000", "00000000", " 0)-000-0000"], "nonMatches": [" 0)-000-000", " 0)-000--0000", " 0)-00-0000", " 0)--000-0000", " 0))-000-0000", " )-000-0000"]}, {"regex": "[+ ]?\\s?\\d{1,3}[- ]?\\d{1,3}[- ]?\\d{4}[- ]?\\d{4}", "exceptionStackTrace": null, "matches": ["  0 0 0000 00000", "  0 0 00000000", "  0 0 0000-0000", "  0 0 00000 0000", "  0 00000 0000", "  0 0-0000 0000", "  0 0000 0000 0000", "  0 000 0000 0000", "  00 0000 0000", "  0-0 0000 0000", "  0000 0 0000 0000", "  000 0 0000 0000", "   0 0 0000 0000", " 0 0 0000 0000", "+ 0 0 0000 0000", "0000000000", "  0 0 0000 0000"], "nonMatches": ["  0 0 0000 000", "  0 0 0000  0000", "  0 0 000 0000", "  0 0  0000 0000", "  0  0000 0000", "  0  0 0000 0000", "   0 0000 0000"]}, {"regex": "\\([+]?[ ]?\\d{1,3}[)][ ]?[(][+]?[ ]?\\d{1,3}[)][- ]?\\d{4}[- ]?\\d{4}", "exceptionStackTrace": null, "matches": ["(+ 0) (+ 0) 0000 00000", "(+ 0) (+ 0) 00000000", "(+ 0) (+ 0) 0000-0000", "(+ 0) (+ 0)0000 0000", "(+ 0) (+ 0)-0000 0000", "(+ 0) (+ 000) 0000 0000", "(+ 0) (+0) 0000 0000", "(+ 0) ( 0) 0000 0000", "(+ 0)(+ 0) 0000 0000", "(+ 000) (+ 0) 0000 0000", "(+0) (+ 0) 0000 0000", "( 0) (+ 0) 0000 0000", "(0)(0)00000000", "(+ 0) (+ 0) 0000 0000"], "nonMatches": ["(+ 0) (+ 0) 0000 000", "(+ 0) (+ 0) 0000  0000", "(+ 0) (+ 0) 00000 0000", "(+ 0) (+ 0) 000 0000", "(+ 0) (+ 0)  0000 0000", "(+ 0) (+ 0000) 0000 0000", "(+ 0) (+ ) 0000 0000", "(+ 0) (+  0) 0000 0000", "(+ 0) (++ 0) 0000 0000", "(+ 0)  (+ 0) 0000 0000", "(+ 0000) (+ 0) 0000 0000", "(+ ) (+ 0) 0000 0000", "(+  0) (+ 0) 0000 0000", "(++ 0) (+ 0) 0000 0000"]}, {"regex": "[+]?[ ]?\\d{1,3}[ ]?\\d{1,3}[- ]?\\d{4}[- ]?\\d{4}", "exceptionStackTrace": null, "matches": ["+ 0 0 0000 00000", "+ 0 0 00000000", "+ 0 0 0000-0000", "+ 0 0 00000 0000", "+ 0 00000 0000", "+ 0 0-0000 0000", "+ 0 0000 0000 0000", "+ 0 000 0000 0000", "+ 00 0000 0000", "+ 0000 0 0000 0000", "+ 000 0 0000 0000", "+  0 0 0000 0000", "+0 0 0000 0000", "++ 0 0 0000 0000", " 0 0 0000 0000", "0000000000", "+ 0 0 0000 0000"], "nonMatches": ["+ 0 0 0000 000", "+ 0 0 0000  0000", "+ 0 0 000 0000", "+ 0 0  0000 0000", "+ 0  0000 0000", "+ 0  0 0000 0000", "+  0 0000 0000"]}, {"regex": "^(?!.*(.)\\1{3})((?=.*[\\d])(?=.*[A-Za-z])|(?=.*[^\\w\\d\\s])(?=.*[A-Za-z])).{8,20}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaa", "aaaaaaa", "_aaaaaaa", "Aaaaaaaa", "0aaaaaaa", " aaaaaaa", "aaaaaaaa"]}, {"regex": "ljol;oik", "exceptionStackTrace": null, "matches": ["ljol;oik"], "nonMatches": []}, {"regex": "^(([\\w][\\w\\-\\.]*)\\.)?([\\w][\\w\\-]+)(\\.([\\w][\\w\\.]*))?$", "exceptionStackTrace": null, "matches": ["aevil.aevil.a.", "aevil.aevil.a-", "aevil.aevil.aeVil", "aevil.aevil.aEVIL", "aevil.aevil.aev_il", "aevil.aevil.aev4il", "aevil.aevil.ae", "aevil.aevil.a6", "aevil.aevil.a_", "aevil.aevil.a", "aevil.aevil._evil", "aevil.aevil.Aevil", "aevil.aevil.0evil", "aevil.a..aevil", "aevil.a-.aevil", "aevil.aeVil.aevil", "aevil.aEVIL.aevil", "aevil.aev_il.aevil", "aevil.aev4il.aevil", "aevil.ae.aevil", "aevil.a6.aevil", "aevil.a_.aevil", "aevil.a.aevil", "aevil._evil.aevil", "aevil.Aevil.aevil", "aevil.0evil.aevil", "aevil.aevil.aevil.aevil", "aevil.aevil", "a..aevil.aevil", "a-.aevil.aevil", "aeVil.aevil.aevil", "aEVIL.aevil.aevil", "aev_il.aevil.aevil", "aev4il.aevil.aevil", "ae.aevil.aevil", "a6.aevil.aevil", "a_.aevil.aevil", "a.aevil.aevil", "_evil.aevil.aevil", "Aevil.aevil.aevil", "0evil.aevil.aevil", "aevil", "aevil.aevil.aevil"], "nonMatches": ["aevil.aevil.aev il", "aevil.aevil.a ", "aevil.aev il.aevil", "aevil.a .aevil", "aev il.aevil.aevil", "a .aevil.aevil"]}, {"regex": "^[{|\\(]?[0-9a-fA-F]{8}[-]?([0-9a-fA-F]{4}[-]?){3}[0-9a-fA-F]{12}[\\)|}]?$", "exceptionStackTrace": null, "matches": ["(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA|", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA)", "(AAAAAAAA-AAAA-AAAA-AAAA-aAAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAA-0AAAAAAAAAAA}", "(AAAAAAAA-AAAAAAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-aAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-0AAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAAAAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(aAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(0AAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "|AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "{AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "AAAAAAAAAAAAAAAA-AAAA-AAAAAAAAAAAA", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}"], "nonMatches": ["(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}}", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAA-gAAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAA-GAAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-AAAA--AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-AAAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-AAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-gAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA-GAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAA--AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(AAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(gAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "(GAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}", "((AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA}"]}, {"regex": "^(?:(?:[\\+]?(?<CountryCode>[\\d]{1,3}(?:[ ]+|[\\-.])))?[(]?(?<AreaCode>[\\d]{3})[\\-/)]?(?:[ ]+)?)?(?<Number>[a-zA-Z2-9][a-zA-Z0-9 \\-.]{6,})(?:(?:[ ]+|[xX]|(i:ext[\\.]?)){1,2}(?<Ext>[\\d]{1,5}))?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<C"}, "matches": []}, {"regex": "^(application|audio|example|image|message|model|multipart|text|video)/[a-z0-9]+([.-][a-z0-9]+)*(\\+(xml|json|ber|der|fastinfoset|wbxml|zip|cbor))?", "exceptionStackTrace": null, "matches": ["application/evil-evil+xml+xml", "application/evil-evil", "application/evil-evil-evil+xml", "application/evil+xml", "application/evil-eVil+xml", "application/evil-EVIL+xml", "application/evil-ev_il+xml", "application/evil-ev il+xml", "application/evil-ev4il+xml", "application/evil-e+xml", "application/evil- +xml", "application/evil-6+xml", "application/evil-_+xml", "application/evil-+xml", "application/evil.evil+xml", "application/eVil-evil+xml", "application/ev_il-evil+xml", "application/ev il-evil+xml", "application/ev4il-evil+xml", "application/e-evil+xml", "application/6-evil+xml", "video/evil", "text/evil", "multipart/evil", "model/evil", "message/evil", "image/evil", "example/evil", "audio/evil", "application/evil", "video/evil-evil+xml", "text/evil-evil+xml", "multipart/evil-evil+xml", "model/evil-evil+xml", "message/evil-evil+xml", "image/evil-evil+xml", "example/evil-evil+xml", "audio/evil-evil+xml", "application/evil-evil+cbor", "application/evil-evil+zip", "application/evil-evil+wbxml", "application/evil-evil+fastinfoset", "application/evil-evil+der", "application/evil-evil+ber", "application/evil-evil+json", "application/evil-evil+xml"], "nonMatches": ["application/EVIL-evil+xml", "application/ -evil+xml", "application/_-evil+xml", "application/-evil+xml"]}, {"regex": "(?<!(?<!\\{)\\{)\\{(?<index>\\d+)(,(?<alignment>\\d+))?(:(?<formatString>[^\\}]+))?\\}(?!\\}(?!\\}))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<i"}, "matches": []}, {"regex": "gtrdgb", "exceptionStackTrace": null, "matches": ["gtrdgb"], "nonMatches": []}, {"regex": "1", "exceptionStackTrace": null, "matches": ["1"], "nonMatches": []}, {"regex": "2", "exceptionStackTrace": null, "matches": ["2"], "nonMatches": []}, {"regex": "fesdfe", "exceptionStackTrace": null, "matches": ["fesdfe"], "nonMatches": []}, {"regex": "(?<=<TAGNAME.*>).*(?=</TAGNAME>)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "look-behind requires fixed-width pattern"}, "matches": []}, {"regex": "([\\d]{4}[ |-]?){2}([\\d]{11}[ |-]?)([\\d]{2})", "exceptionStackTrace": null, "matches": ["0000-0000-00000000000-000", "0000-0000-0000000000000", "0000-0000-00000000000|00", "0000-0000-00000000000 00", "0000-0000-0000-00000000000-00", "00000000-00000000000-00", "0000|0000-00000000000-00", "0000 0000-00000000000-00", "00000-0000-00000000000-00", "00000000-0000000000000", "0000-0000-00000000000-00"], "nonMatches": ["0000-0000-00000000000-0", "0000-0000-00000000000--00", "0000-0000-000000000000-00", "0000-0000-0000000000-00", "0000-00000000000-00", "0000--0000-00000000000-00", "000-0000-00000000000-00"]}, {"regex": "^(((0)[13578]|(10)|(12))(/)((0[1-9])|([12][0-9])|((3)[01]))(/)(\\d{4}))|(((0)[469]|(11))(/)((0[1-9])|([12][0-9])|(30))(/)(\\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-8]))(/)(\\d{4}))|((02)(/)((0[1-9])|((1)[0-9])|((2)[0-9]))(/)((\\d{2})(([02468][048])|([13579][26]))))$", "exceptionStackTrace": null, "matches": ["02/01/0092", "02/01/0090", "02/01/0076", "02/01/0056", "02/01/0036", "02/01/0016", "02/01/0006", "02/01/0084", "02/01/0081", "02/01/0080", "02/01/0068", "02/01/0048", "02/01/0028", "02/01/0018", "02/01/0008", "02/01/00088", "02/29/0000", "02/01/00000", "09/10/0000", "09/01/00000", "06/01/0000", "04/01/0000", "08/30/0000", "08/10/0000", "08/01/00000", "07/01/0000", "05/01/0000", "03/01/0000", "01/01/0000", "02/20/0088", "02/10/0088", "02/01/0096", "02/01/0088", "02/20/0000", "02/10/0000", "02/01/0000", "11/01/0000", "09/30/0000", "09/20/0000", "09/01/0000", "12/01/0000", "10/01/0000", "08/31/0000", "08/20/0000", "08/01/0000"], "nonMatches": ["02/01/088", "02/00/0088", "02/01/000", "02/00/0000", "09/01/000", "09/00/0000", "08/32/0000", "08/01/000", "08/00/0000", "00/01/0000"]}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookPhoneNumber", "exceptionStackTrace": null, "matches": ["FacebookPhoneNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService, FacebookCustomerServiceNumber", "exceptionStackTrace": null, "matches": ["FacebookCustomerService, FacebookCustomerServiceNumber"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "FacebookCustomerService,FacebookCustomerService Number", "exceptionStackTrace": null, "matches": ["FacebookCustomerService,FacebookCustomerService Number"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "ContactFacebookCustomerService", "exceptionStackTrace": null, "matches": ["ContactFacebookCustomerService"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook Customer Service", "exceptionStackTrace": null, "matches": ["Facebook Customer Service"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": "Facebook contact Number", "exceptionStackTrace": null, "matches": ["Facebook contact Number"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": " Gmail help", "exceptionStackTrace": null, "matches": [" Gmail help"], "nonMatches": []}, {"regex": "href(\\s*)=(\\s*)(&#39;|&quot;)http:\\/\\/(.*)((&quot;|&#39;))", "exceptionStackTrace": null, "matches": ["href = &#39;http://=&quot;", "href = &#39;http://;&quot;", "href = &#39;http://:&quot;", "href = &#39;http:///&quot;", "href = &#39;http://&&quot;", "href = &#39;http://#&quot;", "href = &#39;http://eVil&quot;", "href = &#39;http://EVIL&quot;", "href = &#39;http://ev_il&quot;", "href = &#39;http://ev il&quot;", "href = &#39;http://ev4il&quot;", "href = &#39;http://e&quot;", "href = &#39;http:// &quot;", "href = &#39;http://6&quot;", "href = &#39;http://_&quot;", "href = &#39;http://&quot;", "href =  &#39;http://evil&quot;", "href =&#39;http://evil&quot;", "href  = &#39;http://evil&quot;", "href= &#39;http://evil&quot;", "href=&quot;http://&quot;", "href=&#39;http://&#39;", "href=&#39;http://&quot;", "href = &quot;http://evil&quot;", "href = &#39;http://evil&#39;", "href = &#39;http://evil&quot;"], "nonMatches": []}, {"regex": "^0[1-9]\\d{7,8}$", "exceptionStackTrace": null, "matches": ["0100000000", "010000000"], "nonMatches": ["01000000000", "01000000", "000000000"]}, {"regex": "^[^\\\\\\/\\?\\*\\&quot;\\&#39;\\&gt;\\&lt;\\:\\|]*$", "exceptionStackTrace": null, "matches": ["EVIL", "e", " ", "6", "_", ""], "nonMatches": ["|", "\\", "?", ";", ":", "/", "*", "&", "#", "eVil", "ev_il", "ev il", "ev4il", "evil"]}, {"regex": "[0-9]{1,2}[:|&#176;][0-9]{1,2}[:|&#39;](?:\\b[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+\\b)&quot;?[N|S|E|W]", "exceptionStackTrace": null, "matches": ["0;0;.00&quot;W", "0;0;0.0&quot;|", "0;0;0.0&quot;S", "0;0;0.0&quot;N", "0;0;0.0&quot;E", "0;0;0.0&quotW", "0;0;0&quot;W", "0;0;0.00&quot;W", "0;0;0.&quot;W", "0;0;00.0&quot;W", "0;0|0.0&quot;W", "0;0:0.0&quot;W", "0;0&0.0&quot;W", "0;0#0.0&quot;W", "0;00;0.0&quot;W", "0|0;0.0&quot;W", "0:0;0.0&quot;W", "070;0.0&quot;W", "060;0.0&quot;W", "010;0.0&quot;W", "0&0;0.0&quot;W", "0#0;0.0&quot;W", "000;0;0.0&quot;W", "00;0;0.0&quot;W", "0;0;.0&quotW", "0;0;0&quotW", "0;0;.0&quot;W", "0;0;0.0&quot;W"], "nonMatches": ["0;0;.&quot;W", "0;0;0.0&quot;A", "0;0;0.0&quot;;W", "0;0;0.0.0&quot;W", "0;090.0&quot;W", "0;030.0&quot;W", "0;000.0&quot;W", "0;000;0.0&quot;W", "0;;0.0&quot;W", "000;0.0&quot;W", ";0;0.0&quot;W"]}, {"regex": "copper ingot 99.999% price", "exceptionStackTrace": null, "matches": ["copper ingot 99A999% price", "copper ingot 990999% price", "copper ingot 99%999% price", "copper ingot 99 999% price", "copper ingot 99a999% price"], "nonMatches": []}, {"regex": "((([0][1-9]|[12][\\d])|[3][01])[-/]([0][13578]|[1][02])[-/][1-9]\\d\\d\\d)|((([0][1-9]|[12][\\d])|[3][0])[-/]([0][13456789]|[1][012])[-/][1-9]\\d\\d\\d)|(([0][1-9]|[12][\\d])[-/][0][2][-/][1-9]\\d([02468][048]|[13579][26]))|(([0][1-9]|[12][0-8])[-/][0][2][-/][1-9]\\d\\d\\d)", "exceptionStackTrace": null, "matches": ["29/02/1000", "10/02/1000", "01/02-1000", "01-02/1000", "10/02/1088", "01/02/1092", "01/02/1090", "01/02/1076", "01/02/1056", "01/02/1036", "01/02/1016", "01/02/1006", "01/02/1084", "01/02/1081", "01/02/1080", "01/02/1068", "01/02/1048", "01/02/1028", "01/02/1018", "01/02/1008", "01/02-1088", "01-02/1088", "10/09/1000", "01/09-1000", "01/06/1000", "01/04/1000", "01-09/1000", "30/08/1000", "10/08/1000", "01/11/1000", "01/10/1000", "01/08-1000", "01/07/1000", "01/05/1000", "01/03/1000", "01/01/1000", "01-08/1000", "20/02/1000", "01/02/1000", "20/02/1088", "01/02/1096", "01/02/1088", "30/09/1000", "20/09/1000", "01/09/1000", "31/08/1000", "20/08/1000", "01/12/1000", "01/08/1000"], "nonMatches": ["01/02/0000", "00/02/1000", "01/02/0088", "00/02/1088", "01/13/1000", "01/09/0000", "00/09/1000", "32/08/1000", "01/08/0000", "01/00/1000", "00/08/1000"]}, {"regex": "[-]?[1-9]\\d{0,16}\\.?\\d{0,2}|[-]?[0]?\\.[1-9]{1,2}|[-]?[0]?\\.[0-9][1-9]", "exceptionStackTrace": null, "matches": ["-00.01", "-.01", "--0.01", "0.01", "-0.111", "-0.11", "-00.1", "-.1", "--0.1", "0.1", "-10.000", "-10.00", "-10.", "-10..0", "-100", "-100000000000000000.0", "-10000000000000000.0", "-1.0", "--10.0", "10.0", ".01", ".1", "1", "-0.01", "-0.1", "-10.0"], "nonMatches": ["-0.00", "-0.", "-0.0", "-00.0"]}, {"regex": "(<(!--|script)(.|\\n[^<])*(--|script)>)|(<|&lt;)(/?[\\w!?]+)\\s?[^<]*(>|&gt;)|(\\&[\\w]+\\;)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "[^a-zA-Z \\-]|(  )|(\\-\\-)|(^\\s*$)", "exceptionStackTrace": null, "matches": ["", " ", "--", "  ", "0"], "nonMatches": ["a", "A", "-"]}]