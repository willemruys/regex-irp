[{"regex": "[-\\w$%&&#39;*+\\/=?^_`{|}~.]+@(?<domain>[-a-zA-Z0-9_]+\\.*[-a-zA-Z0-9]+\\.\\.*[-a-zA-Z0-9]+\\.[a-zA-Z0-9]{2,7})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "^(?=.*[a-zA-Z].*[a-zA-Z])(?=.*\\d.*\\d)[a-zA-Z0-9]{6,20}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["000000000000000000000", "00000000000000000000", "00000", "a00000", "A00000", "000000"]}, {"regex": "^[a-zA-Z0-9\\-\\.]+\\.([a-zA-Z]{2,3})$", "exceptionStackTrace": null, "matches": ["evil.AAA", "evil.aA", "..AA", "-.AA", "eVil.AA", "EVIL.AA", "ev4il.AA", "e.AA", "6.AA", "evil.AA"], "nonMatches": ["evil.AAAA", "evil.A", "ev_il.AA", "ev il.AA", " .AA", "_.AA", ".AA"]}, {"regex": "^([a-zA-Z0-9-\\,\\s]{2,64})$", "exceptionStackTrace": null, "matches": [",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,", "a,", "A,", "0,", "-,", " ,", ",,"], "nonMatches": [",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,", ","]}, {"regex": "\\$(\\d)*\\d", "exceptionStackTrace": null, "matches": ["$000", "$0", "$00"], "nonMatches": []}, {"regex": "((8|\\+7)-?)\\W((\\d{3,5})|\\(?\\d{3,5}\\))\\W\\d{3}\\W((\\d{2}\\W\\d{2})|(\\d{4}))|(((8|\\+7)-?)?\\(?\\d{3,5}\\)?-?\\d{1}-?\\d{1}-?\\d{1}-?\\d{1}-?\\d{1}((-?\\d{1})?-?\\d{1})?)", "exceptionStackTrace": null, "matches": ["8-(000)-0-0-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0", "8-(000)-0-0-0-0-0-0-00", "8-(000)-0-0-0-0-0-0-", "8-(000)-0-0-0-0-0-0--0", "8-(000)-0-0-0-0-0-00", "8-(000)-0-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-00-0", "8-(000)-0-0-0-0-0--0", "8-(000)-0-0-0-0-0--0-0", "8-(000)-0-0-0-0-00-0", "8-(000)-0-0-0-0-00-0-0", "8-(000)-0-0-0-00-0-0", "8-(000)-0-0-0-00-0-0-0", "8-(000)-0-0-00-0-0-0", "8-(000)-0-0-00-0-0-0-0", "8-(000)-0-00-0-0-0-0", "8-(000)-0-00-0-0-0-0-0", "8-(000)-00-0-0-0-0-0", "8-(000)-00-0-0-0-0-0-0", "8-(000)0-0-0-0-0-0-0", "8-(000-0-0-0-0-0-0-0", "8-(000000)-0-0-0-0-0-0-0", "8-(00000)-0-0-0-0-0-0-0", "8-((000)-0-0-0-0-0-0-0", "8-000)-0-0-0-0-0-0-0", "8-8-(000)-0-0-0-0-0-0-0", "(000)-0-0-0-0-0-0-0", "8--(000)-0-0-0-0-0-0-0", "8(000)-0-0-0-0-0-0-0", "8-;(00000);000;00;00", "8-;000);000;00;00", "8-;000;000;00;000", "8-;000;000;00000", "8-;000;000;00-00", "8-;000;000;00+00", "8-;000;000;00)00", "8-;000;000;00(00", "8-;000;000;00 00", "8-;000;000-00;00", "8-;000;000+00;00", "8-;000;000)00;00", "8-;000;000(00;00", "8-;000;000 00;00", "8-;000-000;00;00", "8-;000+000;00;00", "8-;000)000;00;00", "8-;000(000;00;00", "8-;000 000;00;00", "8-;00000;000;00;00", "8-0000;000;00;00", "8--000;000;00;00", "8-+000;000;00;00", "8-)000;000;00;00", "8-(000;000;00;00", "8- 000;000;00;00", "00000000", "+7;000;000;00;00", "8;000);000;00;00", "8;000;000;0000", "8;000;000;00;00", "+7-(000)-0-0-0-0-0-0-0", "8-(000)-0-0-0-0-0-0-0", "+7-;000;000;00;00", "8-;(000);000;00;00", "8-;000;000;0000", "8-;000;000;00;00"], "nonMatches": ["8-(000)-0-0-0-0--0-0", "8-(000)-0-0-0-0--0-0-0", "8-(000)-0-0-0--0-0-0", "8-(000)-0-0-0--0-0-0-0", "8-(000)-0-0--0-0-0-0", "8-(000)-0-0--0-0-0-0-0", "8-(000)-0--0-0-0-0-0", "8-(000)-0--0-0-0-0-0-0", "8-(000)--0-0-0-0-0-0", "8-(000)--0-0-0-0-0-0-0", "8-(000))-0-0-0-0-0-0-0", "8-(00)-0-0-0-0-0-0-0", "8-;(000000);000;00;00", "8-;(00);000;00;00", "8-;((000);000;00;00", "8-;000;000;000", "8-;000;000;00;0", "8-;000;000;00a00", "8-;000;000;00_00", "8-;000;000;00A00", "8-;000;000;000;00", "8-;000;000;0;00", "8-;000;000a00;00", "8-;000;000_00;00", "8-;000;000A00;00", "8-;000;000000;00", "8-;000;0000;00;00", "8-;000;00;00;00", "8-;000a000;00;00", "8-;000_000;00;00", "8-;000A000;00;00", "8-;0000000;00;00", "8-;000000;000;00;00", "8-;00;000;00;00", "8-a000;000;00;00", "8-_000;000;00;00", "8-A000;000;00;00", "8--;000;000;00;00"]}, {"regex": "# The real regex is: \n# (?&lt;=\\n......\\s*\\b)COPY\\b\\s*\\b(\\w*(-)?\\w*)*\\b\n\\bCOPY\\b\\s*\\b(\\w*(-)?\\w*)*\\b", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^\\d{4}\\/\\d{1,2}\\/\\d{1,2}$", "exceptionStackTrace": null, "matches": ["0000/0/00", "0000/00/0", "0000/0/0"], "nonMatches": ["0000/0/000", "0000/0/", "0000/000/0", "0000//0", "00000/0/0", "000/0/0"]}, {"regex": "^(\\+(1 ?(2(4[2,6]|6[4,8]|84)|34(0|5)|4(41|73)|6(49|64|7[0,1]|84)|7(58|67|8[4,7])|8(09|29|6[8,9]|76)|939)?|2(0|1[1-4,6,8]|2[0-9]|3[0-9]|4[0-9]|5[0-8]|6[0-9]|7|9[0,1,7-9])|3([0-4]|5[0-9]|6|7[0-9]|8[0-7,9]|9)|4(0|1|2[0,1,3]|[3-9])|5(0[0-9]|[1-8]|9[0-9])|6([0-6]|7[0,2-9]|8[0-3,5-9]|9[0-2])|7|8([1,2,4]|5[0,2,3,5,6]|6|8[0,6])|9([0-5]|6[0-8]|7[0-7]|8|9([2-6]|8))))", "exceptionStackTrace": null, "matches": ["+880", "+88,", "+855", "+853", "+852", "+850", "+85,", "+82", "+81", "+8,", "+685", "+680", "+672", "+670", "+421", "+420", "+42,", "+380", "+38,", "+297", "+291", "+290", "+216", "+211", "+21,", "+1 868", "+1 860", "+1 86,", "+1 784", "+1 780", "+1 78,", "+1 672", "+1 670", "+1 67,", "+1 264", "+1 260", "+1 26,", "+1 246246", "+1 ", "+1 242", "+1 240", "+1 24,", "+1  246", "+1246", "+1", "+998", "+992", "+98", "+970", "+960", "+90", "+886", "+86", "+856", "+84", "+7", "+690", "+68,", "+67,", "+60", "+590", "+51", "+500", "+43", "+423", "+41", "+40", "+39", "+389", "+370", "+36", "+350", "+30", "+29,", "+27", "+260", "+250", "+240", "+230", "+220", "+218", "+20", "+1 939", "+1 876", "+1 869", "+1 829", "+1 809", "+1 787", "+1 767", "+1 758", "+1 684", "+1 671", "+1 664", "+1 649", "+1 473", "+1 441", "+1 345", "+1 340", "+1 284", "+1 268", "+1 246"], "nonMatches": ["+990", "+978", "+969", "+96", "+881", "+851", "+80", "+693", "+684", "+671", "+67", "+50", "+422", "+388", "+35", "+292", "+259", "+210"]}, {"regex": "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.(([0-9]{1,3})|([a-zA-Z]{2,})))(;[ ]?[_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.(([0-9]{1,3})|([a-zA-Z]{2,})))*$", "exceptionStackTrace": null, "matches": ["evil.evil@evil.evil.aA; evil.evil@evil.evil.0", "evil.evil@evil.evil.0; evil.evil@evil.evil.aA", "evil.evil@evil.evil.0; evil.evil@evil.evil.0; evil.evil@evil.evil.0", "evil.evil@evil.evil.0", "evil.evil@evil.evil.0; evil.evil@evil.evil.000", "evil.evil@evil.evil.0; evil.evil@evil.evil.evil.0", "evil.evil@evil.evil.0; evil.evil@evil.0", "evil.evil@evil.evil.0; evil.evil@evil.-.0", "evil.evil@evil.evil.0; evil.evil@evil.eVil.0", "evil.evil@evil.evil.0; evil.evil@evil.EVIL.0", "evil.evil@evil.evil.0; evil.evil@evil.ev4il.0", "evil.evil@evil.evil.0; evil.evil@evil.e.0", "evil.evil@evil.evil.0; evil.evil@evil.6.0", "evil.evil@evil.evil.0; evil.evil@-.evil.0", "evil.evil@evil.evil.0; evil.evil@eVil.evil.0", "evil.evil@evil.evil.0; evil.evil@EVIL.evil.0", "evil.evil@evil.evil.0; evil.evil@ev4il.evil.0", "evil.evil@evil.evil.0; evil.evil@e.evil.0", "evil.evil@evil.evil.0; evil.evil@6.evil.0", "evil.evil@evil.evil.0; evil.evil.evil@evil.evil.0", "evil.evil@evil.evil.0; evil@evil.evil.0", "evil.evil@evil.evil.0; evil.-@evil.evil.0", "evil.evil@evil.evil.0; evil.eVil@evil.evil.0", "evil.evil@evil.evil.0; evil.EVIL@evil.evil.0", "evil.evil@evil.evil.0; evil.ev_il@evil.evil.0", "evil.evil@evil.evil.0; evil.ev4il@evil.evil.0", "evil.evil@evil.evil.0; evil.e@evil.evil.0", "evil.evil@evil.evil.0; evil.6@evil.evil.0", "evil.evil@evil.evil.0; evil._@evil.evil.0", "evil.evil@evil.evil.0; -.evil@evil.evil.0", "evil.evil@evil.evil.0; eVil.evil@evil.evil.0", "evil.evil@evil.evil.0; EVIL.evil@evil.evil.0", "evil.evil@evil.evil.0; ev_il.evil@evil.evil.0", "evil.evil@evil.evil.0; ev4il.evil@evil.evil.0", "evil.evil@evil.evil.0; e.evil@evil.evil.0", "evil.evil@evil.evil.0; 6.evil@evil.evil.0", "evil.evil@evil.evil.0; _.evil@evil.evil.0", "evil.evil@evil.evil.0;evil.evil@evil.evil.0", "evil.evil@evil.evil.000; evil.evil@evil.evil.0", "evil.evil@evil.evil.evil.0; evil.evil@evil.evil.0", "evil.evil@evil.0; evil.evil@evil.evil.0", "evil.evil@evil.-.0; evil.evil@evil.evil.0", "evil.evil@evil.eVil.0; evil.evil@evil.evil.0", "evil.evil@evil.EVIL.0; evil.evil@evil.evil.0", "evil.evil@evil.ev4il.0; evil.evil@evil.evil.0", "evil.evil@evil.e.0; evil.evil@evil.evil.0", "evil.evil@evil.6.0; evil.evil@evil.evil.0", "evil.evil@-.evil.0; evil.evil@evil.evil.0", "evil.evil@eVil.evil.0; evil.evil@evil.evil.0", "evil.evil@EVIL.evil.0; evil.evil@evil.evil.0", "evil.evil@ev4il.evil.0; evil.evil@evil.evil.0", "evil.evil@e.evil.0; evil.evil@evil.evil.0", "evil.evil@6.evil.0; evil.evil@evil.evil.0", "evil.evil.evil@evil.evil.0; evil.evil@evil.evil.0", "evil@evil.evil.0; evil.evil@evil.evil.0", "evil.-@evil.evil.0; evil.evil@evil.evil.0", "evil.eVil@evil.evil.0; evil.evil@evil.evil.0", "evil.EVIL@evil.evil.0; evil.evil@evil.evil.0", "evil.ev_il@evil.evil.0; evil.evil@evil.evil.0", "evil.ev4il@evil.evil.0; evil.evil@evil.evil.0", "evil.e@evil.evil.0; evil.evil@evil.evil.0", "evil.6@evil.evil.0; evil.evil@evil.evil.0", "evil._@evil.evil.0; evil.evil@evil.evil.0", "-.evil@evil.evil.0; evil.evil@evil.evil.0", "eVil.evil@evil.evil.0; evil.evil@evil.evil.0", "EVIL.evil@evil.evil.0; evil.evil@evil.evil.0", "ev_il.evil@evil.evil.0; evil.evil@evil.evil.0", "ev4il.evil@evil.evil.0; evil.evil@evil.evil.0", "e.evil@evil.evil.0; evil.evil@evil.evil.0", "6.evil@evil.evil.0; evil.evil@evil.evil.0", "_.evil@evil.evil.0; evil.evil@evil.evil.0", "evil@evil.AA", "evil@evil.0", "evil.evil@evil.evil.AA; evil.evil@evil.evil.0", "evil.evil@evil.evil.0; evil.evil@evil.evil.AA", "evil.evil@evil.evil.0; evil.evil@evil.evil.0"], "nonMatches": ["evil.evil@evil.evil.A; evil.evil@evil.evil.0", "evil.evil@evil.evil.0; evil.evil@evil.evil.A", "evil.evil@evil.evil.0; evil.evil@evil.evil.0000", "evil.evil@evil.evil.0; evil.evil@evil.evil.", "evil.evil@evil.evil.0; evil.evil@evil.@.0", "evil.evil@evil.evil.0; evil.evil@evil.;.0", "evil.evil@evil.evil.0; evil.evil@evil...0", "evil.evil@evil.evil.0; evil.evil@evil.ev_il.0", "evil.evil@evil.evil.0; evil.evil@evil.ev il.0", "evil.evil@evil.evil.0; evil.evil@evil. .0", "evil.evil@evil.evil.0; evil.evil@evil._.0", "evil.evil@evil.evil.0; evil.evil@evil..0", "evil.evil@evil.evil.0; evil.evil@@.evil.0", "evil.evil@evil.evil.0; evil.evil@;.evil.0", "evil.evil@evil.evil.0; evil.evil@..evil.0", "evil.evil@evil.evil.0; evil.evil@ev_il.evil.0", "evil.evil@evil.evil.0; evil.evil@ev il.evil.0", "evil.evil@evil.evil.0; evil.evil@ .evil.0", "evil.evil@evil.evil.0; evil.evil@_.evil.0", "evil.evil@evil.evil.0; evil.evil@.evil.0", "evil.evil@evil.evil.0; evil.@@evil.evil.0", "evil.evil@evil.evil.0; evil.;@evil.evil.0", "evil.evil@evil.evil.0; evil..@evil.evil.0", "evil.evil@evil.evil.0; evil.ev il@evil.evil.0", "evil.evil@evil.evil.0; evil. @evil.evil.0", "evil.evil@evil.evil.0; evil.@evil.evil.0", "evil.evil@evil.evil.0; @.evil@evil.evil.0", "evil.evil@evil.evil.0; ;.evil@evil.evil.0", "evil.evil@evil.evil.0; ..evil@evil.evil.0", "evil.evil@evil.evil.0; ev il.evil@evil.evil.0", "evil.evil@evil.evil.0;  .evil@evil.evil.0", "evil.evil@evil.evil.0; .evil@evil.evil.0", "evil.evil@evil.evil.0;  evil.evil@evil.evil.0", "evil.evil@evil.evil.0000; evil.evil@evil.evil.0", "evil.evil@evil.evil.; evil.evil@evil.evil.0", "evil.evil@evil.@.0; evil.evil@evil.evil.0", "evil.evil@evil.;.0; evil.evil@evil.evil.0", "evil.evil@evil...0; evil.evil@evil.evil.0", "evil.evil@evil.ev_il.0; evil.evil@evil.evil.0", "evil.evil@evil.ev il.0; evil.evil@evil.evil.0", "evil.evil@evil. .0; evil.evil@evil.evil.0", "evil.evil@evil._.0; evil.evil@evil.evil.0", "evil.evil@evil..0; evil.evil@evil.evil.0", "evil.evil@@.evil.0; evil.evil@evil.evil.0", "evil.evil@;.evil.0; evil.evil@evil.evil.0", "evil.evil@..evil.0; evil.evil@evil.evil.0", "evil.evil@ev_il.evil.0; evil.evil@evil.evil.0", "evil.evil@ev il.evil.0; evil.evil@evil.evil.0", "evil.evil@ .evil.0; evil.evil@evil.evil.0", "evil.evil@_.evil.0; evil.evil@evil.evil.0", "evil.evil@.evil.0; evil.evil@evil.evil.0", "evil.@@evil.evil.0; evil.evil@evil.evil.0", "evil.;@evil.evil.0; evil.evil@evil.evil.0", "evil..@evil.evil.0; evil.evil@evil.evil.0", "evil.ev il@evil.evil.0; evil.evil@evil.evil.0", "evil. @evil.evil.0; evil.evil@evil.evil.0", "evil.@evil.evil.0; evil.evil@evil.evil.0", "@.evil@evil.evil.0; evil.evil@evil.evil.0", ";.evil@evil.evil.0; evil.evil@evil.evil.0", "..evil@evil.evil.0; evil.evil@evil.evil.0", "ev il.evil@evil.evil.0; evil.evil@evil.evil.0", " .evil@evil.evil.0; evil.evil@evil.evil.0", ".evil@evil.evil.0; evil.evil@evil.evil.0"]}, {"regex": "^((([A-PR-UWYZ](\\d([A-HJKSTUW]|\\d)?|[A-HK-Y]\\d([ABEHMNPRVWXY]|\\d)?))\\s*(\\d[ABD-HJLNP-UW-Z]{2})?)|GIR\\s*0AA)$", "exceptionStackTrace": null, "matches": ["GIR  0AA", "ZK0 0NN", "ZK0X 0NN", "ZK0W 0NN", "ZK0V 0NN", "ZK0R 0NN", "ZK0P 0NN", "ZK0N 0NN", "ZK0M 0NN", "ZK0H 0NN", "ZK0E 0NN", "ZK0B 0NN", "ZK0A 0NN", "ZA0Y 0NN", "Z0W ", "Z0W 0WN", "Z0W 0PN", "Z0W 0LN", "Z0W 0JN", "Z0W 0DN", "Z0W 0BN", "Z0W 0AN", "Z0W  0NN", "Z0W0NN", "Z0 0NN", "Z0U 0NN", "Z0T 0NN", "Z0S 0NN", "Z0K 0NN", "Z0J 0NN", "Z0A 0NN", "Y0W 0NN", "W0W 0NN", "R0W 0NN", "A0W 0NN", "GIR0AA", "ZK0", "Z0", "GIR 0AA", "ZK00 0NN", "ZK0Y 0NN", "Z00 0NN", "Z0W 0NN"], "nonMatches": ["ZK0YY 0NN", "ZK0C 0NN", "ZI0Y 0NN", "Z0W 0NN0NN", "Z0W 0NNN", "Z0W 0N", "Z0W 0CN", "Z0WW 0NN", "Z0I 0NN", "Q0W 0NN"]}, {"regex": "^(0|1)+$", "exceptionStackTrace": null, "matches": ["00", "1", "0"], "nonMatches": [""]}, {"regex": "^((0?[1-9])|(([1|2]\\d)|(3[0|1])))(/|-)((0?[1-9])|(1[0|1|2]))(/|-)(((19|20)\\d\\d)|(\\d\\d))", "exceptionStackTrace": null, "matches": ["3|/01/1900", "30/01/1900", "|0/01/1900", "10/01/1900", "01/1|/1900", "01/11/1900", "01/10/1900", "01/1/1900", "1/01/1900", "31/1/1900", "20/1/1900", "1-1/1900", "1/12/1900", "1/1-1900", "1/1/00", "1/1/2000", "1/1/1900", "31/01/1900", "20/01/1900", "01-01/1900", "01/12/1900", "01/01-1900", "01/01/00", "01/01/2000", "01/01/1900"], "nonMatches": ["32/01/1900", "01/13/1900", "01/00/1900", "01/001/1900", "00/01/1900", "001/01/1900"]}, {"regex": "^(0{1})([1-9]{2})(\\s|-|.{0,1})(\\d{3})(\\s|-|.{0,1})(\\d{2})(\\s|-|.{0,1})(\\d{2})$", "exceptionStackTrace": null, "matches": ["011A000 00 00", "0110000 00 00", "011 000A00 00", "011 000000 00", "011 000 00A00", "011 000 00000", "011000 00 00", "011 00000 00", "011 000 0000", "011a000 00 00", "011-000 00 00", "011 000a00 00", "011 000-00 00", "011 000 00a00", "011 000 00-00", "011 000 00 00"], "nonMatches": ["011aa000 00 00", "011 000aa00 00", "011 000 00aa00", "011 000 00 000", "011 000 00 0", "011 000 000 00", "011 000 0 00", "011 0000 00 00", "011 00 00 00", "0111 000 00 00", "01 000 00 00", "001 000 00 00", "0011 000 00 00", "11 000 00 00"]}, {"regex": "[/,,/.,/=,\\s]([0-6]\\d{2}|7[0-6]\\d|77[0-2])(\\s|\\-)?(\\d{2})\\2(\\d{4})[/,,/.,\\s]", "exceptionStackTrace": null, "matches": [",000 00 0000/", ",000 00 0000.", ",000 00 0000 ", "=000 00 0000,", "/000 00 0000,", ".000 00 0000,", " 000 00 0000,", ",770 00 0000,", ",700 00 0000,", ",000 00 0000,"], "nonMatches": [",773 00 0000,", ",000 00 00000,", ",000 00 000,", ",000 000 0000,", ",000 0 0000,", ",000  00 0000,", ",0000 00 0000,", ",00 00 0000,", ",77000 0000,", ",70000 0000,", ",00000 0000,", ",000-00 0000,"]}, {"regex": "style=&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;", "exceptionStackTrace": null, "matches": ["&#39;=&#39;", "&#39;eVil&#39;", "&#39;EVIL&#39;", "&#39;ev_il&#39;", "&#39;ev il&#39;", "&#39;ev4il&#39;", "&#39;e&#39;", "&#39; &#39;", "&#39;6&#39;", "&#39;_&#39;", "style=&quot;=&quot;", "style=&quot;#&quot;", "style=&quot;eVil&quot;", "style=&quot;EVIL&quot;", "style=&quot;ev_il&quot;", "style=&quot;ev il&quot;", "style=&quot;ev4il&quot;", "style=&quot;e&quot;", "style=&quot; &quot;", "style=&quot;6&quot;", "style=&quot;_&quot;", "&#39;&#39;", "style=&quot;&quot;", "&#39;evil&#39;", "style=&quot;evil&quot;"], "nonMatches": ["&#39;;&#39;", "&#39;&&#39;", "&#39;#&#39;", "style=&quot;;&quot;", "style=&quot;&&quot;"]}, {"regex": "\\+?[A-Z]?\\d{2,}\\.?[A-Z]*\\d*", "exceptionStackTrace": null, "matches": ["+A00.evil00", "+A00.evil", "+A00.eVil0", "+A00.EVIL0", "+A00.ev_il0", "+A00.ev il0", "+A00.ev4il0", "+A00.e0", "+A00. 0", "+A00.60", "+A00._0", "+A00.0", "+A00..evil0", "+A00evil0", "+AA00.evil0", "+00.evil0", "++A00.evil0", "A00.evil0", "00", "+A00.evil0"], "nonMatches": ["+A0.evil0"]}, {"regex": "^(([01][0-9]|[012][0-3]):([0-5][0-9]))*$", "exceptionStackTrace": null, "matches": ["10:0010:00", "00:00", "", "20:00", "10:00"], "nonMatches": ["24:00", "30:00", "10:60"]}, {"regex": "(([1-9]|[0][1-9])|1[012])[- /.](([1-9]|[0][1-9])|[12][0-9]|3[01])[- /.](19|20)\\d\\d", "exceptionStackTrace": null, "matches": ["13.1.1900", "11.1.1900", "10.1.1900", "1.30.1900", "1.10.1900", "1.1/1900", "1.1-1900", "1.1 1900", "1/1.1900", "1-1.1900", "1 1.1900", "12.1.1900", "01.1.1900", "1.31.1900", "1.20.1900", "1.01.1900", "1.1.2000", "1.1.1900"], "nonMatches": ["00.1.1900", "1.32.1900", "1.00.1900", "1.0.1900", "0.1.1900"]}, {"regex": "^\\d*[0-9](|.\\d*[0-9]|,\\d*[0-9])?$", "exceptionStackTrace": null, "matches": ["00,000", "00,0", "00", "00a000", "00a0", "00A00", "00000", "00 00", "000a00", "0a00", "0", "00,00", "00a00"], "nonMatches": ["00a00a00"]}, {"regex": "^.*lager(?:(?!~n&quot;).)*$", "exceptionStackTrace": null, "matches": ["evillageraa", "evillager", "evillager~", "evillagerA", "evillager;", "evillager0", "evillager&", "evillager ", "~lagera", ";lagera", "&lagera", "eVillagera", "EVILlagera", "ev_illagera", "ev illagera", "ev4illagera", "elagera", " lagera", "6lagera", "_lagera", "lagera", "lager", "evillagera"], "nonMatches": []}, {"regex": "\\[(?<name>[^\\]]*)\\](?<value>[^\\[]*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<n"}, "matches": []}, {"regex": "^(\\+?420)? ?[0-9]{3} ?[0-9]{3} ?[0-9]{3}$", "exceptionStackTrace": null, "matches": ["+420 000 000000", "+420 000000 000", "+420000 000 000", " 000 000 000", "420 000 000 000", "000000000", "+420 000 000 000"], "nonMatches": ["+420 000 000 0000", "+420 000 000 00", "+420 000 000  000", "+420 000 0000 000", "+420 000 00 000", "+420 000  000 000", "+420 0000 000 000", "+420 00 000 000", "+420  000 000 000", "+420+420 000 000 000", "++420 000 000 000"]}, {"regex": "cfdsgvdrg", "exceptionStackTrace": null, "matches": ["cfdsgvdrg"], "nonMatches": []}, {"regex": "^((((19|20)(([02468][048])|([13579][26])).02.29))|((20[0-9][0-9])|(19[0-9][0-9])).((((0[1-9])|(1[0-2])).((0[1-9])|(1[0-9])|(2[0-8])))|((((0[13578])|(1[02])).31)|(((0[1,3-9])|(1[0-2])).(29|30)))))$", "exceptionStackTrace": null, "matches": ["2000a0,A29", "2000a0,029", "2000a0,,29", "2000a0, 29", "2000a03a29", "2000a10a31", "2000a08A31", "2000a08031", "2000a08,31", "2000a08 31", "2000a07a31", "2000a05a31", "2000a03a31", "2000a01a31", "2000a01a29", "2000a01A01", "2000a01001", "2000a01,01", "2000a01 01", "2000A01a01", "2000001a01", "2000,01a01", "2000 01a01", "1992a02a29", "1976a02a29", "1956a02a29", "1936a02a29", "1916a02a29", "1988a02A29", "1988a02029", "1988a02,29", "1988a02 29", "1988A02a29", "1988002a29", "1988,02a29", "1988 02a29", "1984a02a29", "1980a02a29", "1968a02a29", "1948a02a29", "1928a02a29", "1908a02a29", "1900a01a01", "2000a10a29", "2000a0,a30", "2000a0,a29", "2000a12a31", "2000a08a31", "2000a10a01", "2000a01a20", "2000a01a10", "2000a01a01", "2088a02a29", "1996a02a29", "1988a02a29"], "nonMatches": ["2000a13a29", "2000a00a29", "2000a11a31", "2000a00a31", "2000a13a01", "2000a01a00", "2000a00a01", "1990a02a29", "1906a02a29", "1981a02a29", "1918a02a29"]}, {"regex": "jar:file:/(([A-Z]:)?/([A-Z 0-9 * ( ) + \\- & $ # @ _ . ! ~ /])+)(/[A-Z 0-9 _ ( ) \\[ \\] - = + _ ~]+\\.jar!)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range:  - "}, "matches": [], "nonMatches": []}, {"regex": "(jar:)?file:/(([A-Z]:)?/([A-Z0-9\\*\\()\\+\\-\\&$#@_.!~\\[\\]/])+)((/[A-Z0-9_()\\[\\]\\-=\\+_~]+\\.jar!)|([^!])(/com/regexlib/example/))", "exceptionStackTrace": null, "matches": ["jar:file:/A://~/com/regexlib/example/", "jar:file:/A://_/com/regexlib/example/", "jar:file:/A://]/com/regexlib/example/", "jar:file:/A://[/com/regexlib/example/", "jar:file:/A://A/com/regexlib/example/", "jar:file:/A://@/com/regexlib/example/", "jar:file:/A://=/com/regexlib/example/", "jar:file:/A://:/com/regexlib/example/", "jar:file:/A://0/com/regexlib/example/", "jar:file:/A:////com/regexlib/example/", "jar:file:/A://./com/regexlib/example/", "jar:file:/A://-/com/regexlib/example/", "jar:file:/A://+/com/regexlib/example/", "jar:file:/A://*/com/regexlib/example/", "jar:file:/A://)/com/regexlib/example/", "jar:file:/A://(/com/regexlib/example/", "jar:file:/A://&/com/regexlib/example/", "jar:file:/A://$/com/regexlib/example/", "jar:file:/A://#/com/regexlib/example/", "jar:file:/A:// /com/regexlib/example/", "jar:file:/A:///~.jar!", "jar:file:/A:///].jar!", "jar:file:/A:///[.jar!", "jar:file:/A:///=.jar!", "jar:file:/A:///-.jar!", "jar:file:/A:///+.jar!", "jar:file:/A:///).jar!", "jar:file:/A:///(.jar!", "jar:file:/A:///EVIL.jar!", "jar:file:/A:///6.jar!", "jar:file:/A:///_.jar!", "file:///a/com/regexlib/example/", "jar:file:/A://a/com/regexlib/example/"], "nonMatches": ["jar:file:/A://!/com/regexlib/example/", "jar:file:/A:///@.jar!", "jar:file:/A:///:.jar!", "jar:file:/A:////.jar!", "jar:file:/A:///..jar!", "jar:file:/A:///*.jar!", "jar:file:/A:///&.jar!", "jar:file:/A:///$.jar!", "jar:file:/A:///#.jar!", "jar:file:/A:///!.jar!", "jar:file:/A:///eVil.jar!", "jar:file:/A:///ev_il.jar!", "jar:file:/A:///ev il.jar!", "jar:file:/A:///ev4il.jar!", "jar:file:/A:///e.jar!", "jar:file:/A:/// .jar!", "jar:file:/A:///.jar!", "jar:file:/A:////evil.jar!", "jar:file:/A://evil.jar!", "jar:file:/A:/~/evil.jar!", "jar:file:/A:/_/evil.jar!", "jar:file:/A:/]/evil.jar!", "jar:file:/A:/[/evil.jar!", "jar:file:/A:/A/evil.jar!", "jar:file:/A:/@/evil.jar!", "jar:file:/A:/0/evil.jar!", "jar:file:/A:/./evil.jar!", "jar:file:/A:/-/evil.jar!", "jar:file:/A:/+/evil.jar!", "jar:file:/A:/*/evil.jar!", "jar:file:/A:/)/evil.jar!", "jar:file:/A:/(/evil.jar!", "jar:file:/A:/&/evil.jar!", "jar:file:/A:/$/evil.jar!", "jar:file:/A:/#/evil.jar!", "jar:file:/A:/!/evil.jar!", "jar:file:/A:A:///evil.jar!", "jar:file:////evil.jar!", "jar:jar:file:/A:///evil.jar!", "file:/A:///evil.jar!", "file:////evil.jar!", "jar:file:/A:///evil.jar!"]}, {"regex": "^[A-PR-UWYZ]([0-9]([A-HJKSTUW]|[0-9])?|[A-HK-Y][0-9]([ABEHMNPRVWXY]|[0-9])) [0-9][ABD-HJLNP-UW-Z]{2}|GIR 0AA$", "exceptionStackTrace": null, "matches": ["ZK0X 0NN", "ZK0W 0NN", "ZK0V 0NN", "ZK0R 0NN", "ZK0P 0NN", "ZK0N 0NN", "ZK0M 0NN", "ZK0H 0NN", "ZK0E 0NN", "ZK0B 0NN", "ZK0A 0NN", "ZA0Y 0NN", "Z0W 0NNN", "Z0W 0WN", "Z0W 0PN", "Z0W 0LN", "Z0W 0JN", "Z0W 0DN", "Z0W 0BN", "Z0W 0AN", "Z0U 0NN", "Z0T 0NN", "Z0S 0NN", "Z0K 0NN", "Z0J 0NN", "Z0A 0NN", "Y0W 0NN", "W0W 0NN", "R0W 0NN", "A0W 0NN", "Z0 0NN", "GIR 0AA", "ZK00 0NN", "ZK0Y 0NN", "Z00 0NN", "Z0W 0NN"], "nonMatches": ["ZK0C 0NN", "ZI0Y 0NN", "Z0W 0N", "Z0W 0CN", "Z0WW 0NN", "Z0I 0NN", "Q0W 0NN"]}, {"regex": "^(\\+65)?\\d{8}$", "exceptionStackTrace": null, "matches": ["00000000", "+6500000000"], "nonMatches": ["+65000000000", "+650000000", "+65+6500000000"]}, {"regex": "((a|p|A|P)(m|M)\\s{0,1}(0[0-9]|1[0-2]|[0-9]):[0-5][0-9]:[0-5][0-9])|((a|p|A|P)(m|M)\\s{0,1}(0[0-9]|1[0-2]|[0-9]):[0-5][0-9])|((0[0-9]|1[0-2]|[0-9]):[0-5][0-9]\\s{0,1}(a|p|A|P)(m|M))|((0[0-9]|1[0-2]|[0-9]):[0-5][0-9]:[0-5][0-9]\\s{0,1}(a|p|A|P)(m|M))|((0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]:[0-5][0-9])|((0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9])", "exceptionStackTrace": null, "matches": ["24:00", "24:00:00", "00:00:60", "00:60:00", "13:00:00 am", "00:00:00  am", "00:00:60 am", "00:60:00 am", "13:00 am", "00:00  am", "am 13:00", "am  00:00", "am 13:00:00", "am 00:00:60", "am 00:60:00", "am  00:00:00", "0:00:00am", "10:00:00am", "00:00:00Pm", "00:00:00Am", "00:00:00pm", "00:00:00aM", "00:00:00am", "0:00am", "10:00am", "00:00Pm", "00:00Am", "00:00pm", "00:00aM", "00:00am", "Pm00:00", "Am00:00", "pm00:00", "aM00:00", "am0:00", "am10:00", "am00:00", "Pm00:00:00", "Am00:00:00", "pm00:00:00", "aM00:00:00", "am0:00:00", "am10:00:00", "am00:00:00", "0:00", "20:00", "10:00", "00:00", "0:00:00", "20:00:00", "10:00:00", "00:00:00", "0:00:00 am", "10:00:00 am", "00:00:00 Pm", "00:00:00 Am", "00:00:00 pm", "00:00:00 aM", "00:00:00 am", "0:00 am", "10:00 am", "00:00 Pm", "00:00 Am", "00:00 pm", "00:00 aM", "00:00 am", "Pm 00:00", "Am 00:00", "pm 00:00", "aM 00:00", "am 0:00", "am 10:00", "am 00:00", "Pm 00:00:00", "Am 00:00:00", "pm 00:00:00", "aM 00:00:00", "am 0:00:00", "am 10:00:00", "am 00:00:00"], "nonMatches": ["00:60", "00:60 am", "am 00:60"]}, {"regex": "^(([0]?[1-9]|[1-2][0-3])(:)([0-5][0-9]))$", "exceptionStackTrace": null, "matches": ["1:00", "10:00", "01:00"], "nonMatches": ["14:00", "01:60", "00:00", "001:00"]}, {"regex": " ^(([0-1]?[1-9]|2[0-3])(:)([0-5][0-9]))$", "exceptionStackTrace": null, "matches": [], "nonMatches": [" 24:00", " 01:60", " 00:00", " 001:00", " 21:00", " 1:00", " 20:00", " 01:00"]}, {"regex": "^([1-9]+\\d{0,2},(\\d{3},)*\\d{3}(\\.\\d{1,2})?|[1-9]+\\d*(\\.\\d{1,2})?)$", "exceptionStackTrace": null, "matches": ["10", "10.00", "100.0", "1.0", "110.0", "10,000,000", "10,000,000.00", "10,000,000,000.0", "10,000.0", "100,000,000.0", "1,000,000.0", "110,000,000.0", "1", "1,000", "10.0", "10,000,000.0"], "nonMatches": ["10.0.0", "10.000", "10.", "0.0", "00.0", "10,000,000.0.0", "10,000,000.000", "10,000,000.", "10,000,0000.0", "10,000,00.0", "10,0000,000.0", "10,00,000.0", "1000,000,000.0", "0,000,000.0", "00,000,000.0"]}, {"regex": "Quicken Contact Number,Quicken Customer Service", "exceptionStackTrace": null, "matches": ["Quicken Contact Number,Quicken Customer Service"], "nonMatches": []}, {"regex": "(((0[13578]|10|12)([-./])(0[1-9]|[12][0-9]|3[01])([-./])(\\d{4}))|((0[469]|11)([-./])([0][1-9]|[12][0-9]|30)([-./])(\\d{4}))|((2)([-./])(0[1-9]|1[0-9]|2[0-8])([-./])(\\d{4}))|((2)(\\.|-|\\/)(29)([-./])([02468][048]00))|((2)([-./])(29)([-./])([13579][26]00))|((2)([-./])(29)([-./])([0-9][0-9][0][48]))|((2)([-./])(29)([-./])([0-9][0-9][2468][048]))|((2)([-./])(29)([-./])([0-9][0-9][13579][26])))", "exceptionStackTrace": null, "matches": ["2/29/0092", "2/29/0076", "2/29/0056", "2/29/0036", "2/29/0016", "2/29.0096", "2/29-0096", "2.29/0096", "2-29/0096", "2/29/0084", "2/29/0080", "2/29/0068", "2/29/0048", "2/29/0028", "2/29.0088", "2/29-0088", "2.29/0088", "2-29/0088", "2/29/0004", "2/29.0008", "2/29-0008", "2.29/0008", "2-29/0008", "2/29/9200", "2/29/7600", "2/29/5600", "2/29/3600", "2/29/1600", "2/29.9600", "2/29-9600", "2.29/9600", "2-29/9600", "2.29/8400", "2.29/8000", "2.29/6800", "2.29/4800", "2.29/2800", "2.29/0800", "2.29.8800", "2.29-8800", "2/29/0000", "2/01/00000", "2/01.0000", "2/01-0000", "2.01/0000", "2-01/0000", "09/10/0000", "09/01/00000", "09/01.0000", "09/01-0000", "09.01/0000", "09-01/0000", "06/01/0000", "04/01/0000", "08/30/0000", "08/10/0000", "08/01/00000", "08/01.0000", "08/01-0000", "08.01/0000", "08-01/0000", "07/01/0000", "05/01/0000", "03/01/0000", "01/01/0000", "2/29/0096", "2/29/0088", "2/29/0008", "2/29/9600", "2/29/8800", "2-29/8800", "2.29/8800", "2/20/0000", "2/10/0000", "2/01/0000", "11/01/0000", "09/30/0000", "09/20/0000", "09/01/0000", "12/01/0000", "10/01/0000", "08/31/0000", "08/20/0000", "08/01/0000"], "nonMatches": ["2/29/0090", "2/29/0006", "2/29/0081", "2/29/9000", "2/29/0600", "2.29/8100", "2.29/1800", "2/01/000", "2/00/0000", "09/01/000", "09/00/0000", "08/32/0000", "08/01/000", "08/00/0000", "00/01/0000"]}, {"regex": "^(((\\d{1,3})(,\\d{3})*)|(\\d+))(.\\d+)?$", "exceptionStackTrace": null, "matches": ["00a0", "0,000", "0,000a00", "0,000A0", "0,00000", "0,000,0", "0,000 0", "0,000,000a0", "000,000a0", "0", "0a0", "0,000a0"], "nonMatches": ["a0", "0,000a0a0", "0,000a", "0,0000a0", "0,00a0", "0000,000a0", ",000a0"]}, {"regex": "[^\\d^\\-^\\,^\\x20]+", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", "_", "evil"], "nonMatches": ["^", "-", ",", " ", "6", ""]}, {"regex": "^[1-9]{1}[0-9]{3}-(0[1-9]{1}|1[0-2]{1})-([0-2]{1}[1-9]{1}|3[0-1]{1}) ([0-1]{1}[0-9]{1}|2[0-3]{1}):[0-5]{1}[0-9]{1}:[0-5]{1}[0-9]{1}$", "exceptionStackTrace": null, "matches": ["1000-01-31 00:00:00", "1000-10-01 00:00:00", "1000-01-30 00:00:00", "1000-01-01 20:00:00", "1000-01-01 00:00:00"], "nonMatches": ["1000-100-01 00:00:00", "1000-1-01 00:00:00", "1000-13-01 00:00:00", "1000-01-300 00:00:00", "1000-01-3 00:00:00", "1000-01-32 00:00:00", "1000-01-01 200:00:00", "1000-01-01 2:00:00", "1000-01-01 24:00:00", "1000-01-01 00:00:000", "1000-01-01 00:00:0", "1000-01-01 00:00:60", "1000-01-01 00:000:00", "1000-01-01 00:0:00", "1000-01-01 00:60:00", "1000-01-01 000:00:00", "1000-01-01 0:00:00", "1000-01-011 00:00:00", "1000-01-0 00:00:00", "1000-01-00 00:00:00", "1000-01-001 00:00:00", "1000-01-1 00:00:00", "1000-011-01 00:00:00", "1000-0-01 00:00:00", "1000-00-01 00:00:00", "10000-01-01 00:00:00", "100-01-01 00:00:00", "11000-01-01 00:00:00", "000-01-01 00:00:00", "0000-01-01 00:00:00"]}, {"regex": "^([0-1][0-9]|[2][0-3]):([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["20:00", "00:00"], "nonMatches": ["24:00", "00:60"]}, {"regex": "^(V-|I-)?[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000", "I-00000", "V-00000"], "nonMatches": ["V-000000", "V-0000", "V-V-00000"]}, {"regex": "http://fullmoviesdownloadnow.wordpress.com/2011/05/01/download-thor-movie-thor-download/", "exceptionStackTrace": null, "matches": ["http://fullmoviesdownloadnowawordpressAcom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpress:com/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpress0com/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpress/com/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpress-com/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpress com/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowAwordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnow:wordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnow0wordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnow/wordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnow-wordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnow wordpressacom/2011/05/01/download-thor-movie-thor-download/", "http://fullmoviesdownloadnowawordpressacom/2011/05/01/download-thor-movie-thor-download/"], "nonMatches": []}, {"regex": "gtfbthb", "exceptionStackTrace": null, "matches": ["gtfbthb"], "nonMatches": []}, {"regex": "^((\\\\){2})(([A-Za-z &#39;,.;]+)(\\\\?)([A-Za-z &#39;,.;]\\\\?)*)$", "exceptionStackTrace": null, "matches": ["\\\\evil\\;\\;\\", "\\\\evil\\", "\\\\evil\\;", "\\\\evil\\a\\", "\\\\evil\\A\\", "\\\\evil\\9\\", "\\\\evil\\3\\", "\\\\evil\\.\\", "\\\\evil\\,\\", "\\\\evil\\&\\", "\\\\evil\\#\\", "\\\\evil\\ \\", "\\\\evil;\\", "\\\\;\\;\\", "\\\\.\\;\\", "\\\\,\\;\\", "\\\\&\\;\\", "\\\\#\\;\\", "\\\\eVil\\;\\", "\\\\EVIL\\;\\", "\\\\ev il\\;\\", "\\\\e\\;\\", "\\\\ \\;\\", "\\\\evil", "\\\\evil\\;\\"], "nonMatches": ["\\\\evil\\;\\\\", "\\\\evil\\0\\", "\\\\evil\\\\;\\", "\\\\\\\\;\\", "\\\\ev_il\\;\\", "\\\\ev4il\\;\\", "\\\\6\\;\\", "\\\\_\\;\\", "\\\\\\;\\", "\\\\\\evil\\;\\", "\\evil\\;\\"]}, {"regex": "([a-zA-Z]{2}[0-9]{1,2}\\s{0,1}[0-9]{1,2}[a-zA-Z]{2})", "exceptionStackTrace": null, "matches": ["AA0 0AAA", "AA0 0aA", "AA0 00AA", "AA00 0AA", "AAA0 0AA", "aA0 0AA", "AA00AA", "AA0 0AA"], "nonMatches": ["AA0 0A", "AA0 000AA", "AA0 AA", "AA0  0AA", "AA000 0AA", "AA 0AA", "A0 0AA"]}, {"regex": "white light smile", "exceptionStackTrace": null, "matches": ["white light smile"], "nonMatches": []}, {"regex": "^[A-Fa-f0-9]{32}$|({|\\()?[A-Fa-f0-9]{8}-([A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}(}|\\))?$|^({)?[0xA-Fa-f0-9]{3,10}(, {0,1}[0xA-Fa-f0-9]{3,6}){2}, {0,1}({)([0xA-Fa-f0-9]{3,4}, {0,1}){7}[0xA-Fa-f0-9]{3,4}(}})$", "exceptionStackTrace": null, "matches": ["{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxxx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, axx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, Axx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, 1xx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, 0xx}}", "{xxx, xxx, xxx, {xxx,xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {xxxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {axx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {Axx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {1xx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {0xx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx,{xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxxxxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, axx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, Axx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, 1xx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, 0xx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx,xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxxxxxxxxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{axx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{Axx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{1xx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{0xx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{00000000-0000-0000-0000-000000000000", "{00000000-0000-0000-0000-a00000000000}", "{00000000-0000-0000-0000-A00000000000}", "{00000000-a000-0000-0000-000000000000}", "{00000000-A000-0000-0000-000000000000}", "{000000000-0000-0000-0000-000000000000}", "{a0000000-0000-0000-0000-000000000000}", "{A0000000-0000-0000-0000-000000000000}", "{{00000000-0000-0000-0000-000000000000}", "00000000-0000-0000-0000-000000000000}", "a0000000000000000000000000000000", "A0000000000000000000000000000000", "xxx,xxx, xxx,{xxx,xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "00000000-0000-0000-0000-000000000000", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "(00000000-0000-0000-0000-000000000000}", "{00000000-0000-0000-0000-000000000000)", "{00000000-0000-0000-0000-000000000000}", "00000000000000000000000000000000"], "nonMatches": ["{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxxxx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, gxx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, Gxx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {xxx,  xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {xxxxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {xx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {gxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, {Gxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx,  {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xxxxxxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, xx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, gxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx, Gxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxx,  xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xxxxxxxxxxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{xx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{gxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{Gxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{{xxx, xxx, xxx, {xxx, xxx, xxx, xxx, xxx, xxx, xxx, xxx}}", "{00000000-0000-0000-0000-000000000000}}", "{00000000-0000-0000-0000-0000000000000}", "{00000000-0000-0000-0000-00000000000}", "{00000000-0000-0000-0000-g00000000000}", "{00000000-0000-0000-0000-G00000000000}", "{00000000-0000-0000-0000-0000-000000000000}", "{00000000-0000-0000-000000000000}", "{00000000-00000-0000-0000-000000000000}", "{00000000-000-0000-0000-000000000000}", "{00000000-g000-0000-0000-000000000000}", "{00000000-G000-0000-0000-000000000000}", "{0000000-0000-0000-0000-000000000000}", "{g0000000-0000-0000-0000-000000000000}", "{G0000000-0000-0000-0000-000000000000}", "000000000000000000000000000000000", "0000000000000000000000000000000", "g0000000000000000000000000000000", "G0000000000000000000000000000000"]}, {"regex": "Facebook helpline number", "exceptionStackTrace": null, "matches": ["Facebook helpline number"], "nonMatches": []}, {"regex": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$", "exceptionStackTrace": null, "matches": ["evil-evil@evil-evil.aa.aa", "evil-evil@evil-evil.aaa", "evil-evil@evil-evil._a", "evil-evil@evil-evil.Aa", "evil-evil@evil-evil.0a", "evil-evil@evil-evil-evil.aa", "evil-evil@evil.aa", "evil-evil@evil-eVil.aa", "evil-evil@evil-EVIL.aa", "evil-evil@evil-ev_il.aa", "evil-evil@evil-ev4il.aa", "evil-evil@evil-e.aa", "evil-evil@evil-6.aa", "evil-evil@evil-_.aa", "evil-evil@evilevil.aa", "evil-evil@evil.evil.aa", "evil-evil@eVil-evil.aa", "evil-evil@EVIL-evil.aa", "evil-evil@ev_il-evil.aa", "evil-evil@ev4il-evil.aa", "evil-evil@e-evil.aa", "evil-evil@6-evil.aa", "evil-evil@_-evil.aa", "evil-evil-evil@evil-evil.aa", "evil@evil-evil.aa", "evil-eVil@evil-evil.aa", "evil-EVIL@evil-evil.aa", "evil-ev_il@evil-evil.aa", "evil-ev4il@evil-evil.aa", "evil-e@evil-evil.aa", "evil-6@evil-evil.aa", "evil-_@evil-evil.aa", "evilevil@evil-evil.aa", "evil.evil@evil-evil.aa", "eVil-evil@evil-evil.aa", "EVIL-evil@evil-evil.aa", "ev_il-evil@evil-evil.aa", "ev4il-evil@evil-evil.aa", "e-evil@evil-evil.aa", "6-evil@evil-evil.aa", "_-evil@evil-evil.aa", "evil@evil.aa", "evil-evil@evil-evil.aa"], "nonMatches": ["evil-evil@evil-evil", "evil-evil@evil-evil.aaaa", "evil-evil@evil-evil.a", "evil-evil@evil-ev il.aa", "evil-evil@evil- .aa", "evil-evil@evil-.aa", "evil-evil@evil--evil.aa", "evil-evil@ev il-evil.aa", "evil-evil@ -evil.aa", "evil-evil@-evil.aa", "evil-ev il@evil-evil.aa", "evil- @evil-evil.aa", "evil-@evil-evil.aa", "evil--evil@evil-evil.aa", "ev il-evil@evil-evil.aa", " -evil@evil-evil.aa", "-evil@evil-evil.aa"]}, {"regex": "^(\\d|\\d{1,9}|1\\d{1,9}|20\\d{8}|213\\d{7}|2146\\d{6}|21473\\d{5}|214747\\d{4}|2147482\\d{3}|21474835\\d{2}|214748364[0-7])$", "exceptionStackTrace": null, "matches": ["214748350", "214748200", "214747000", "214730000", "214600000", "213000000", "200000000", "1000000000", "1", "000000000", "2147483640", "2147483500", "2147482000", "2147470000", "2147300000", "2146000000", "2130000000", "2000000000", "10", "0"], "nonMatches": ["2147483648", "21474835000", "21474820000", "21474700000", "21473000000", "21460000000", "21300000000", "20000000000", "10000000000", "0000000000", ""]}, {"regex": "([oO0]*)([|:;=X^])([-&#39;]*)([)(oO0\\]\\[DPp*>X^@])", "exceptionStackTrace": null, "matches": ["0^;p", "0^;o", "0^;^", "0^;]", "0^;[", "0^;X", "0^;P", "0^;O", "0^;D", "0^;>", "0^;0", "0^;*", "0^;)", "0^;(", "0^;;@", "0^@", "0^9@", "0^3@", "0^0@", "0^-@", "0^&@", "0^#@", "0|;@", "0X;@", "0A;@", "0=;@", "0;;@", "0:;@", "00^;@", "^;@", "o^;@", "a^;@", "O^;@", "A^;@", "1^;@", "^@", "0^;@"], "nonMatches": ["0^;a", "0^;A", "0^;1"]}, {"regex": "dsa", "exceptionStackTrace": null, "matches": ["dsa"], "nonMatches": []}, {"regex": "^[0-9]{5}$", "exceptionStackTrace": null, "matches": ["00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^(?:(((Jan(uary)?|Ma(r(ch)?|y)|Jul(y)?|Aug(ust)?|Oct(ober)?|Dec(ember)?)\\ 31)|((Jan(uary)?|Ma(r(ch)?|y)|Apr(il)?|Ju((ly?)|(ne?))|Aug(ust)?|Oct(ober)?|(Sept|Nov|Dec)(ember)?)\\ (0?[1-9]|([12]\\d)|30))|(Feb(ruary)?\\ (0?[1-9]|1\\d|2[0-8]|(29(?=,\\ ((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)))))))\\,((1[6-9]|[2-9]\\d)\\d{2})) (?:[0-1]?[0-9]|[2][1-4]):[0-5]?[0-9]:[0-5]?[0-9]\\s?([apAP][Mm])?$", "exceptionStackTrace": null, "matches": ["February 1,1600 00:00:00 Pm", "Feb 01,1600 00:00:00 Pm", "Sept 01,1600 00:00:00 Pm", "Oct 01,1600 00:00:00 Pm", "Aug 01,1600 00:00:00 Pm", "Jun 01,1600 00:00:00 Pm", "Jul 01,1600 00:00:00 Pm", "Apr 01,1600 00:00:00 Pm", "Mar 01,1600 00:00:00 Pm", "January 10,1600 00:00:00 Pm", "January 1,1600 00:00:00 Pm", "Jan 01,1600 00:00:00 Pm", "Dec 31,1600 00:00:00 Pm", "Oct 31,1600 00:00:00 Pm", "Aug 31,1600 00:00:00 Pm", "Jul 31,1600 00:00:00 Pm", "Mar 31,1600 00:00:00 Pm", "January 31,1600 00:00:00 ", "January 31,1600 00:00:00 PM", "January 31,1600 00:00:00 pm", "January 31,1600 00:00:00 am", "January 31,1600 00:00:00 Am", "January 31,1600 00:00:00Pm", "January 31,1600 00:00:0 Pm", "January 31,1600 00:0:00 Pm", "January 31,1600 0:00:00 Pm", "Jan 31,1600 00:00:00 Pm", "Feb 20,1600 0:0:0", "Feb 10,1600 0:0:0", "Feb 1,1600 0:0:0", "Dec 1,1600 0:0:0", "Nov 1,1600 0:0:0", "Sept 1,1600 0:0:0", "Oct 1,1600 0:0:0", "Aug 1,1600 0:0:0", "Jun 1,1600 0:0:0", "Jul 1,1600 0:0:0", "Apr 1,1600 0:0:0", "May 1,1600 0:0:0", "Mar 1,1600 0:0:0", "Jan 30,1600 0:0:0", "Jan 20,1600 0:0:0", "Jan 1,1600 0:0:0", "Dec 31,1600 0:0:0", "Oct 31,1600 0:0:0", "Aug 31,1600 0:0:0", "Jul 31,1600 0:0:0", "May 31,1600 0:0:0", "Mar 31,1600 0:0:0", "Jan 31,2000 0:0:0", "Jan 31,1600 21:0:0", "Jan 31,1600 0:0:0", "February 20,1600 00:00:00 Pm", "February 10,1600 00:00:00 Pm", "February 01,1600 00:00:00 Pm", "December 01,1600 00:00:00 Pm", "November 01,1600 00:00:00 Pm", "September 01,1600 00:00:00 Pm", "October 01,1600 00:00:00 Pm", "August 01,1600 00:00:00 Pm", "June 01,1600 00:00:00 Pm", "July 01,1600 00:00:00 Pm", "April 01,1600 00:00:00 Pm", "May 01,1600 00:00:00 Pm", "March 01,1600 00:00:00 Pm", "January 30,1600 00:00:00 Pm", "January 20,1600 00:00:00 Pm", "January 01,1600 00:00:00 Pm", "December 31,1600 00:00:00 Pm", "October 31,1600 00:00:00 Pm", "August 31,1600 00:00:00 Pm", "July 31,1600 00:00:00 Pm", "May 31,1600 00:00:00 Pm", "March 31,1600 00:00:00 Pm", "January 31,2000 00:00:00 Pm", "January 31,1600 21:00:00 Pm", "January 31,1600 00:00:00 Pm"], "nonMatches": ["February 00,1600 00:00:00 Pm", "February 001,1600 00:00:00 Pm", "Februaryruary 01,1600 00:00:00 Pm", "Septemberember 01,1600 00:00:00 Pm", "Octoberober 01,1600 00:00:00 Pm", "Augustust 01,1600 00:00:00 Pm", "Junee 01,1600 00:00:00 Pm", "Julyy 01,1600 00:00:00 Pm", "Aprilil 01,1600 00:00:00 Pm", "Marchch 01,1600 00:00:00 Pm", "January 00,1600 00:00:00 Pm", "January 001,1600 00:00:00 Pm", "Januaryuary 01,1600 00:00:00 Pm", "Decemberember 31,1600 00:00:00 Pm", "Octoberober 31,1600 00:00:00 Pm", "Augustust 31,1600 00:00:00 Pm", "Julyy 31,1600 00:00:00 Pm", "Marchch 31,1600 00:00:00 Pm", "January 31,0000 00:00:00 Pm", "January 31,1600 00:00:00 PmPm", "January 31,1600 00:00:00 Pa", "January 31,1600 00:00:00 PA", "January 31,1600 00:00:00 bm", "January 31,1600 00:00:00 Bm", "January 31,1600 00:00:00  Pm", "January 31,1600 00:00:000 Pm", "January 31,1600 00:00:60 Pm", "January 31,1600 00:000:00 Pm", "January 31,1600 00:60:00 Pm", "January 31,1600 000:00:00 Pm", "January 31,1600 20:00:00 Pm", "January 31,16000 00:00:00 Pm", "January 31,160 00:00:00 Pm", "January 31,1000 00:00:00 Pm", "Januaryuary 31,1600 00:00:00 Pm", "Feb 29,1600 0:0:0", "February 29,1600 00:00:00 Pm"]}, {"regex": "Vital Forskolin", "exceptionStackTrace": null, "matches": ["Vital Forskolin"], "nonMatches": []}, {"regex": "(?:Error|Warning|Exception)", "exceptionStackTrace": null, "matches": ["Exception", "Warning", "Error"], "nonMatches": []}, {"regex": "^(([+]31|0031)\\s\\(0\\)([0-9]{9})|([+]31|0031)\\s0([0-9]{9})|0([0-9]{9}))$", "exceptionStackTrace": null, "matches": ["0000000000", "0031 0000000000", "+31 0000000000", "0031 (0)000000000", "+31 (0)000000000"], "nonMatches": ["00000000000", "000000000", "+31 00000000000", "+31 000000000", "+31 (0)0000000000", "+31 (0)00000000"]}, {"regex": "(^\\x20*)|(\\x20*$)|(\\x20(?=\\x20))", "exceptionStackTrace": null, "matches": ["  ", "", " "], "nonMatches": []}, {"regex": "^(([1-4][0-9])|(0[1-9])|(5[0-2]))\\/[1-2]\\d{3}$", "exceptionStackTrace": null, "matches": ["50/1000", "01/1000", "10/1000"], "nonMatches": ["53/1000", "10/10000", "10/100", "10/0000", "00/1000"]}, {"regex": "^(([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+([;.](([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+)*$", "exceptionStackTrace": null, "matches": ["evil@evil.AA.evil@evil.AA.evil@evil.AA", "evil@evil.AA.evil@evil.AAevil@evil.AA", "evil@evil.AA.evil@evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "evil@evil.AA.evil@evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "evil@evil.AA.evil@evil.AAAAAA", "evil@evil.AA.evil@evil.AAAAA", "evil@evil.AA.evil@evil.aA", "evil@evil.AA.evil@..AA", "evil@evil.AA.evil@-.AA", "evil@evil.AA.evil@eVil.AA", "evil@evil.AA.evil@EVIL.AA", "evil@evil.AA.evil@ev_il.AA", "evil@evil.AA.evil@ev4il.AA", "evil@evil.AA.evil@e.AA", "evil@evil.AA.evil@6.AA", "evil@evil.AA.evil@_.AA", "evil@evil.AA..@evil.AA", "evil@evil.AA.-@evil.AA", "evil@evil.AA.eVil@evil.AA", "evil@evil.AA.EVIL@evil.AA", "evil@evil.AA.ev_il@evil.AA", "evil@evil.AA.ev4il@evil.AA", "evil@evil.AA.e@evil.AA", "evil@evil.AA.6@evil.AA", "evil@evil.AA._@evil.AA", "evil@evil.AA.@evil.AA", "evil@evil.AA;evil@evil.AA", "evil@evil.AAevil@evil.AA.evil@evil.AA", ".evil@evil.AA", "evil@evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.evil@evil.AA", "evil@evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.evil@evil.AA", "evil@evil..evil@evil.AA", "evil@evil.AAAAAA.evil@evil.AA", "evil@evil.AAAAA.evil@evil.AA", "evil@evil.A.evil@evil.AA", "evil@evil.aA.evil@evil.AA", "evil@..AA.evil@evil.AA", "evil@-.AA.evil@evil.AA", "evil@eVil.AA.evil@evil.AA", "evil@EVIL.AA.evil@evil.AA", "evil@ev_il.AA.evil@evil.AA", "evil@ev4il.AA.evil@evil.AA", "evil@e.AA.evil@evil.AA", "evil@6.AA.evil@evil.AA", "evil@_.AA.evil@evil.AA", "evil@.AA.evil@evil.AA", ".@evil.AA.evil@evil.AA", "-@evil.AA.evil@evil.AA", "eVil@evil.AA.evil@evil.AA", "EVIL@evil.AA.evil@evil.AA", "ev_il@evil.AA.evil@evil.AA", "ev4il@evil.AA.evil@evil.AA", "e@evil.AA.evil@evil.AA", "6@evil.AA.evil@evil.AA", "_@evil.AA.evil@evil.AA", "evil@evil.AA", "evil@evil.AA.evil@evil.AA"], "nonMatches": ["evil@evil.AA.", "evil@evil.AA.evil@evil.", "evil@evil.AA.evil@evil.A", "evil@evil.AA.evil@@.AA", "evil@evil.AA.evil@;.AA", "evil@evil.AA.evil@ev il.AA", "evil@evil.AA.evil@ .AA", "evil@evil.AA.evil@.AA", "evil@evil.AA.@@evil.AA", "evil@evil.AA.;@evil.AA", "evil@evil.AA.ev il@evil.AA", "evil@evil.AA. @evil.AA", "evil@@.AA.evil@evil.AA", "evil@;.AA.evil@evil.AA", "evil@ev il.AA.evil@evil.AA", "evil@ .AA.evil@evil.AA", "@@evil.AA.evil@evil.AA", ";@evil.AA.evil@evil.AA", "ev il@evil.AA.evil@evil.AA", " @evil.AA.evil@evil.AA", "@evil.AA.evil@evil.AA"]}, {"regex": "^[a-zA-Z]{1}[0-9]{1}[a-zA-Z]{1}(\\-| |){1}[0-9]{1}[a-zA-Z]{1}[0-9]{1}$", "exceptionStackTrace": null, "matches": ["A0A-0a0", "A0a-0A0", "a0A-0A0", "A0A0A0", "A0A 0A0", "A0A-0A0"], "nonMatches": ["A0A  0A0", "A0A-0A00", "A0A-0A", "A0A-0AA0", "A0A-00", "A0A-00A0", "A0A-A0", "A0A--0A0", "A0AA-0A0", "A0-0A0", "A00A-0A0", "AA-0A0", "AA0A-0A0", "0A-0A0"]}, {"regex": "^(?:(?:0?[13578]|1[02])|(?:0?[469]|11)(?!\\/31)|(?:0?2)(?:(?!\\/3[01]|\\/29\\/(?:(?:0[^48]|[13579][^26]|[2468][^048])00|(?:\\d{2}(?:0[^48]|[13579][^26]|[2468][^048]))))))\\/(?:0?[1-9]|[12][0-9]|3[01])\\/(?:0?19|20)\\d{2}$", "exceptionStackTrace": null, "matches": ["2/01/01900", "06/01/01900", "04/01/01900", "9/01/01900", "10/01/01900", "08/30/01900", "08/10/01900", "08/01/1900", "08/1/01900", "07/01/01900", "05/01/01900", "03/01/01900", "01/01/01900", "8/01/01900", "2/1/1900", "11/1/1900", "9/1/1900", "12/1/1900", "8/31/1900", "8/20/1900", "8/1/2000", "8/1/1900", "02/01/01900", "11/01/01900", "09/01/01900", "12/01/01900", "08/31/01900", "08/20/01900", "08/01/2000", "08/01/01900"], "nonMatches": ["002/01/01900", "009/01/01900", "08/32/01900", "08/01/019000", "08/01/0190", "08/01/001900", "08/00/01900", "08/001/01900", "00/01/01900", "008/01/01900"]}, {"regex": "^-?([1-8]?[1-9]|[1-9]0)\\.{1}\\d{1,6}", "exceptionStackTrace": null, "matches": ["-11.0000000", "-11.000000", "-1.0", "11.0", "10.0", "1.0", "-10.0", "-11.0"], "nonMatches": ["-00.0", "-11.", "-11..0", "-110", "-111.0", "-01.0", "--11.0"]}, {"regex": "^-?([1]?[1-7][1-9]|[1]?[1-8][0]|[1-9]?[0-9])\\.{1}\\d{1,6}", "exceptionStackTrace": null, "matches": ["-0.0", "-111.0000000", "-111.000000", "-11.0", "111.0", "0.0", "10.0", "11.0", "-10.0", "-110.0", "-111.0"], "nonMatches": ["-00.0", "-100.0", "-1110.0", "-111.", "-111..0", "-1110", "-101.0", "-1111.0", "--111.0"]}, {"regex": "^[a-z0-9!$&#39;*+\\-_]+(\\.[a-z0-9!$&#39;*+\\-_]+)*@([a-z0-9]+(-+[a-z0-9]+)*\\.)+([a-z]{2}|aero|arpa|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|travel)$", "exceptionStackTrace": null, "matches": ["evil.evil@evil-evil.evil-evil.aa", "evil.evil@evil-evil-evil.aa", "evil.evil@evil.aa", "evil.evil@evil-ev4il.aa", "evil.evil@evil-e.aa", "evil.evil@evil-6.aa", "evil.evil@evil--evil.aa", "evil.evil@evilevil.aa", "evil.evil@ev4il-evil.aa", "evil.evil@e-evil.aa", "evil.evil@6-evil.aa", "evil.evil.evil@evil-evil.aa", "evil@evil-evil.aa", "evil.;@evil-evil.aa", "evil.-@evil-evil.aa", "evil.+@evil-evil.aa", "evil.*@evil-evil.aa", "evil.&@evil-evil.aa", "evil.$@evil-evil.aa", "evil.#@evil-evil.aa", "evil.!@evil-evil.aa", "evil.ev_il@evil-evil.aa", "evil.ev4il@evil-evil.aa", "evil.e@evil-evil.aa", "evil.6@evil-evil.aa", "evil._@evil-evil.aa", ";.evil@evil-evil.aa", "-.evil@evil-evil.aa", "+.evil@evil-evil.aa", "*.evil@evil-evil.aa", "&.evil@evil-evil.aa", "$.evil@evil-evil.aa", "#.evil@evil-evil.aa", "!.evil@evil-evil.aa", "ev_il.evil@evil-evil.aa", "ev4il.evil@evil-evil.aa", "e.evil@evil-evil.aa", "6.evil@evil-evil.aa", "_.evil@evil-evil.aa", "evil@evil.travel", "evil@evil.pro", "evil@evil.org", "evil@evil.net", "evil@evil.name", "evil@evil.museum", "evil@evil.mobi", "evil@evil.mil", "evil@evil.jobs", "evil@evil.int", "evil@evil.info", "evil@evil.gov", "evil@evil.edu", "evil@evil.coop", "evil@evil.com", "evil@evil.cat", "evil@evil.biz", "evil@evil.arpa", "evil@evil.aero", "evil@evil.aa", "evil.evil@evil-evil.travel", "evil.evil@evil-evil.pro", "evil.evil@evil-evil.org", "evil.evil@evil-evil.net", "evil.evil@evil-evil.name", "evil.evil@evil-evil.museum", "evil.evil@evil-evil.mobi", "evil.evil@evil-evil.mil", "evil.evil@evil-evil.jobs", "evil.evil@evil-evil.int", "evil.evil@evil-evil.info", "evil.evil@evil-evil.gov", "evil.evil@evil-evil.edu", "evil.evil@evil-evil.coop", "evil.evil@evil-evil.com", "evil.evil@evil-evil.cat", "evil.evil@evil-evil.biz", "evil.evil@evil-evil.arpa", "evil.evil@evil-evil.aero", "evil.evil@evil-evil.aa"], "nonMatches": ["evil.evil@evil-evil.aaa", "evil.evil@evil-evil.a", "evil.evil@aa", "evil.evil@evil-eVil.aa", "evil.evil@evil-EVIL.aa", "evil.evil@evil-ev_il.aa", "evil.evil@evil-ev il.aa", "evil.evil@evil- .aa", "evil.evil@evil-_.aa", "evil.evil@evil-.aa", "evil.evil@eVil-evil.aa", "evil.evil@EVIL-evil.aa", "evil.evil@ev_il-evil.aa", "evil.evil@ev il-evil.aa", "evil.evil@ -evil.aa", "evil.evil@_-evil.aa", "evil.evil@-evil.aa", "evil.@@evil-evil.aa", "evil..@evil-evil.aa", "evil.eVil@evil-evil.aa", "evil.EVIL@evil-evil.aa", "evil.ev il@evil-evil.aa", "evil. @evil-evil.aa", "evil.@evil-evil.aa", "@.evil@evil-evil.aa", "..evil@evil-evil.aa", "eVil.evil@evil-evil.aa", "EVIL.evil@evil-evil.aa", "ev il.evil@evil-evil.aa", " .evil@evil-evil.aa", ".evil@evil-evil.aa"]}, {"regex": "fregvrdg", "exceptionStackTrace": null, "matches": ["fregvrdg"], "nonMatches": []}, {"regex": "^[a-zA-Z]{4}((\\d{2}((0[13578]|1[02])(0[1-9]|[12]\\d|3[01])|(0[13456789]|1[012])(0[1-9]|[12]\\d|30)|02(0[1-9]|1\\d|2[0-8])))|([02468][048]|[13579][26])0229)(H|M)(AS|BC|BS|CC|CL|CM|CS|CH|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|SM|NE)([a-zA-Z]{3})([a-zA-Z0-9\\s]{1})\\d{1}$+", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "nothing to repeat"}, "matches": []}, {"regex": "([\\r\\n ]*//[^\\r\\n]*)+", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "(@\\s*&quot;.*?&quot;)|(&quot;([^&quot;\\\\]|\\\\.)*?&quot;)", "exceptionStackTrace": null, "matches": ["&quot;\\\\&quot;", "&quot;\\A&quot;", "&quot;\\@&quot;", "&quot;\\;&quot;", "&quot;\\0&quot;", "&quot;\\&&quot;", "&quot;\\ &quot;", "&quot;aa&quot;", "&quot;A&quot;", "&quot;@&quot;", "&quot;0&quot;", "&quot; &quot;", "@ &quot;\\&quot;", "@ &quot;@&quot;", "@ &quot;;&quot;", "@ &quot;&&quot;", "@ &quot;eVil&quot;", "@ &quot;EVIL&quot;", "@ &quot;ev_il&quot;", "@ &quot;ev il&quot;", "@ &quot;ev4il&quot;", "@ &quot;e&quot;", "@ &quot; &quot;", "@ &quot;6&quot;", "@ &quot;_&quot;", "@ &quot;&quot;", "@  &quot;evil&quot;", "@&quot;evil&quot;", "&quot;&quot;", "@&quot;&quot;", "&quot;\\a&quot;", "&quot;a&quot;", "@ &quot;evil&quot;"], "nonMatches": ["&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;\\&quot;", "&quot;;&quot;", "&quot;&&quot;"]}, {"regex": "\\w*", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"], "nonMatches": []}, {"regex": "(^\\d{1,3}([,]\\d{3})*$)|(^\\d{1,16}$)", "exceptionStackTrace": null, "matches": ["0000000000000000", "0,000,000", "000,000", "0", "0,000"], "nonMatches": ["00000000000000000", "", "0,0000", "0,00", "0000,000", ",000"]}, {"regex": "^\\#?[A-Fa-f0-9]{3}([A-Fa-f0-9]{3})?$", "exceptionStackTrace": null, "matches": ["#000", "#000a00", "#000A00", "#a00000", "#A00000", "000000", "000", "#000000"], "nonMatches": ["#000000000", "#000g00", "#000G00", "#0000000", "#00000", "#g00000", "#G00000", "##000000"]}, {"regex": "([1-9]{1,2})?(d|D)([1-9]{1,3})((\\+|-)([1-9]{1,3}))?", "exceptionStackTrace": null, "matches": ["1d1+1+1", "1d1", "1d1+1111", "1d1+111", "1d1+", "1d1+0", "1d1111+1", "1d111+1", "111d1+1", "11d1+1", "d1+1", "0d1+1", "D1", "d1", "1D1+1", "1d1-1", "1d1+1"], "nonMatches": ["1d+1", "1d0+1"]}, {"regex": "^([A-Z][a-z]+)\\s([A-Z][a-zA-Z-]+)$", "exceptionStackTrace": null, "matches": ["Aevil A-", "Aevil AeVil", "Aevil AEVIL", "Aevil Ae", "Ae Aevil", "Aevil Aevil"], "nonMatches": ["Aevil Aev_il", "Aevil Aev il", "Aevil Aev4il", "Aevil A ", "Aevil A6", "Aevil A_", "Aevil A", "AeVil Aevil", "AEVIL Aevil", "Aev_il Aevil", "Aev il Aevil", "Aev4il Aevil", "A  Aevil", "A6 Aevil", "A_ Aevil", "A Aevil"]}, {"regex": "https?://(?!\\S*?domainname\\.tld/)\\S*?/", "exceptionStackTrace": null, "matches": ["https://:/", "https:////", "https://./", "https://eVil/", "https://EVIL/", "https://ev_il/", "https://ev4il/", "https://e/", "https://6/", "https://_/", "https:///", "http://evil/", "http:///", "https://evil/"], "nonMatches": ["https://ev il/", "https:// /", "httpss://evil/"]}, {"regex": "^(97(8|9))?\\d{9}(\\d|X)$", "exceptionStackTrace": null, "matches": ["000000000X", "0000000000", "9790000000000", "978000000000X", "9780000000000"], "nonMatches": ["97800000000000", "978000000000", "9789780000000000"]}, {"regex": "^(?:(?:[+\\-]?\\$?)|(?:\\$?[+\\-]?))?(?:(?:\\d{1,3}(?:(?:,\\d{3})|(?:\\d))*(?:\\.(?:\\d*|\\d+[eE][+\\-]\\d+))?)|(?:\\.\\d+(?:[eE][+\\-]\\d+)?))$", "exceptionStackTrace": null, "matches": ["$+0,000.0", "-$.0", "-$.0E-00", "-$.0E+0", "-$.0e-0", "-$.00E-0", "-$0,000.0E-00", "-$0,000.0E+0", "-$0,000.0e-0", "-$0,000.00E-0", "-$0,000", "-$0,000.00", "-$0,000.", "-$0,000,000.0", "-$0.0", "-$0,0000.0", "-$0000,000.0", "-$000,000.0", "0,000.0", "-0,000.0", "$0,000.0", "+$0,000.0", ".0", "0", "$-0,000.0", "-$.0E-0", "-$00.0", "-$0,000.0E-0", "-$0,000.0"], "nonMatches": ["$--0,000.0", "$$-0,000.0", "-$.0E-0E-0", "-$.0E-", "-$.0a-0", "-$.0A-0", "-$.E-0", "-$0,000.0E-", "-$0,000.0a-0", "-$0,000.0A-0", "-$0,000.E-0", "-$0,000.0.0", "-$0,00.0", "-$,000.0", "-$-$0,000.0", "-$$0,000.0", "--$0,000.0"]}, {"regex": "([A-Za-z]{0,}[\\.\\,\\s]{0,}[A-Za-z]{1,}[\\.\\s]{1,}[0-9]{1,2}[\\,\\s]{0,}[0-9]{4})| ([0-9]{0,4}[-,\\s]{0,}[A-Za-z]{3,9}[-,\\s]{0,}[0-9]{1,2}[-,\\s]{0,}[A-Za-z]{0,8})| ([0-9]{1,4}[\\/\\.\\-][0-9]{1,4}[\\/\\.\\-][0-9]{1,4})", "exceptionStackTrace": null, "matches": [" 0-0-00000", " 0-0-0000", " 0-0/0", " 0-0.0", " 0-0000-0", " 0/0-0", " 0.0-0", " 0000-0-0", " 0,aaa,0,aaaaaaaaa", " 0,aaa,0,aaaaaaaa", " 0,aaa,0,", " 0,aaa,0,A", " 0,aaa,0,,a", " 0,aaa,0a", " 0,aaa,0-a", " 0,aaa,0 a", " 0,aaa,000,a", " 0,aaa,00,a", " 0,aaa,,0,a", " 0,aaa0,a", " 0,aaa-0,a", " 0,aaa 0,a", " 0,aaaaaaaaa,0,a", " 0,Aaa,0,a", " 0,,aaa,0,a", " 0aaa,0,a", " 0-aaa,0,a", " 0 aaa,0,a", " 0000,aaa,0,a", " ,aaa,0,a", "evil,evil.0,00000", "evil,evil.0,,0000", "evil,evil.00000", "evil,evil.0 0000", "evil,evil.00,0000", "evil,evil..0,0000", "evil,evil 0,0000", "evil,eVil.0,0000", "evil,EVIL.0,0000", "evil,ev_il.0,0000", "evil,ev il.0,0000", "evil,ev4il.0,0000", "evil,e.0,0000", "evil,,evil.0,0000", "evilevil.0,0000", "evil.evil.0,0000", "evil evil.0,0000", "eVil,evil.0,0000", "EVIL,evil.0,0000", "ev_il,evil.0,0000", "ev il,evil.0,0000", "ev4il,evil.0,0000", "e,evil.0,0000", " ,evil.0,0000", "6,evil.0,0000", "_,evil.0,0000", ",evil.0,0000", " aaa0", "evil.00000", " 0-0-0", " 0,aaa,0,a", "evil,evil.0,0000"], "nonMatches": [" 0-0-", " 0-00000-0", " 0--0", " 00000-0-0", " -0-0", " 0,aaa,,a", " 0,aaaaaaaaaa,0,a", " 0,aa,0,a", " 00000,aaa,0,a", "evil,evil.0,000", "evil,evil.000,0000", "evil,evil.,0000", "evil,evil0,0000", "evil, .0,0000", "evil,6.0,0000", "evil,_.0,0000", "evil,.0,0000"]}, {"regex": "([0-9]{1,2}[:][0-9]{1,2}[:]{0,2}[0-9]{0,2}[\\s]{0,}[AMPamp]{0,2})", "exceptionStackTrace": null, "matches": ["0:0:0 ppp", "0:0:0 pp", "0:0:0 ", "0:0:0 m", "0:0:0 b", "0:0:0 a", "0:0:0 P", "0:0:0 M", "0:0:0 B", "0:0:0 A", "0:0:0  p", "0:0:0p", "0:0:000 p", "0:0:00 p", "0:0: p", "0:0:::0 p", "0:0::0 p", "0:00 p", "0:000:0 p", "0:00:0 p", "000:0:0 p", "00:0:0 p", ":0:0 p", "0:0", "0:0:0 p"], "nonMatches": ["0::0 p"]}, {"regex": "^([A-Za-z0-9]\\s?)+([,]\\s?([A-Za-z0-9]\\s?)+)*$", "exceptionStackTrace": null, "matches": ["0 , 0 , 0 ", "0 ", "0 , 0 0 ", "0 , 0", "0 , a ", "0 , A ", "0 ,0 ", "0 0 , 0 ", "0, 0 ", "a , 0 ", "A , 0 ", "0", "0 , 0 "], "nonMatches": ["0 , ", "0 , 0  ", "0 ,  0 ", ", 0 ", "0  , 0 "]}, {"regex": "[?&]([^&#=]+)(?:=([^&#]*))?", "exceptionStackTrace": null, "matches": ["&evil=evil=evil", "&evil=?", "&evil==", "&evil=&", "&evil=#", "&evil=eVil", "&evil=EVIL", "&evil=ev_il", "&evil=ev il", "&evil=ev4il", "&evil=e", "&evil= ", "&evil=6", "&evil=_", "&evil=", "&?=evil", "&eVil=evil", "&EVIL=evil", "&ev_il=evil", "&ev il=evil", "&ev4il=evil", "&e=evil", "& =evil", "&6=evil", "&_=evil", "?evil=evil", "&evil", "&evil=evil"], "nonMatches": ["&==evil", "&&=evil", "&#=evil", "&=evil"]}, {"regex": "&amp;(?!([a-zA-Z0-9#]{1,6};))", "exceptionStackTrace": null, "matches": ["&amp;"], "nonMatches": []}, {"regex": "^\\((([2-7][0-9]{2})|(8(0[^0]|[^0]0|1\\d|2[^2]|[^2]2|3[^3]|[^3]3|4[^4]|[^4]4|5[^5]|[^5]5|6[^6]|[^6]6|7[^7]|[^7]7|8[^8]|[^8]8|9\\d){1})|(9(0[^0]|[^0]0|[1-9][1-9])))\\)\\s?[0-9]{3}(-|\\s)?[0-9]{4}$|^(([2-7][0-9]{2})|(8(0[^0]|[^0]0|1\\d|2[^2]|[^2]2|3[^3]|[^3]3|4[^4]|[^4]4|5[^5]|[^5]5|6[^6]|[^6]6|7[^7]|[^7]7|8[^8]|[^8]8|9\\d){1})|(9(0[^0]|[^0]0|[1-9][1-9])))-?[0-9]{3}-?[0-9]{4}$", "exceptionStackTrace": null, "matches": ["9A0-000-0000", "910-000-0000", "9-0-000-0000", "9)0-000-0000", "9(0-000-0000", "9 0-000-0000", "90A-000-0000", "901-000-0000", "90--000-0000", "90)-000-0000", "90(-000-0000", "90 -000-0000", "8A8-000-0000", "808-000-0000", "8-8-000-0000", "8)8-000-0000", "8(8-000-0000", "8 8-000-0000", "88A-000-0000", "880-000-0000", "88--000-0000", "88)-000-0000", "88(-000-0000", "88 -000-0000", "8A7-000-0000", "807-000-0000", "8-7-000-0000", "8)7-000-0000", "8(7-000-0000", "8 7-000-0000", "87A-000-0000", "870-000-0000", "87--000-0000", "87)-000-0000", "87(-000-0000", "87 -000-0000", "8A6-000-0000", "806-000-0000", "8-6-000-0000", "8)6-000-0000", "8(6-000-0000", "8 6-000-0000", "86A-000-0000", "860-000-0000", "86--000-0000", "86)-000-0000", "86(-000-0000", "86 -000-0000", "8A5-000-0000", "805-000-0000", "8-5-000-0000", "8)5-000-0000", "8(5-000-0000", "8 5-000-0000", "85A-000-0000", "850-000-0000", "85--000-0000", "85)-000-0000", "85(-000-0000", "85 -000-0000", "8A4-000-0000", "804-000-0000", "8-4-000-0000", "8)4-000-0000", "8(4-000-0000", "8 4-000-0000", "84A-000-0000", "840-000-0000", "84--000-0000", "84)-000-0000", "84(-000-0000", "84 -000-0000", "8A3-000-0000", "803-000-0000", "8-3-000-0000", "8)3-000-0000", "8(3-000-0000", "8 3-000-0000", "83A-000-0000", "830-000-0000", "83--000-0000", "83)-000-0000", "83(-000-0000", "83 -000-0000", "8A2-000-0000", "802-000-0000", "8-2-000-0000", "8)2-000-0000", "8(2-000-0000", "8 2-000-0000", "82A-000-0000", "820-000-0000", "82--000-0000", "82)-000-0000", "82(-000-0000", "82 -000-0000", "8A0-000-0000", "8-0-000-0000", "8)0-000-0000", "8(0-000-0000", "8 0-000-0000", "80A-000-0000", "801-000-0000", "80--000-0000", "80)-000-0000", "80(-000-0000", "80 -000-0000", "200-0000000", "200000-0000", "(9A0) 000-0000", "(910) 000-0000", "(9-0) 000-0000", "(9)0) 000-0000", "(9(0) 000-0000", "(9 0) 000-0000", "(90A) 000-0000", "(901) 000-0000", "(90-) 000-0000", "(90)) 000-0000", "(90() 000-0000", "(90 ) 000-0000", "(8A8) 000-0000", "(808) 000-0000", "(8-8) 000-0000", "(8)8) 000-0000", "(8(8) 000-0000", "(8 8) 000-0000", "(88A) 000-0000", "(880) 000-0000", "(88-) 000-0000", "(88)) 000-0000", "(88() 000-0000", "(88 ) 000-0000", "(8A7) 000-0000", "(807) 000-0000", "(8-7) 000-0000", "(8)7) 000-0000", "(8(7) 000-0000", "(8 7) 000-0000", "(87A) 000-0000", "(870) 000-0000", "(87-) 000-0000", "(87)) 000-0000", "(87() 000-0000", "(87 ) 000-0000", "(8A6) 000-0000", "(806) 000-0000", "(8-6) 000-0000", "(8)6) 000-0000", "(8(6) 000-0000", "(8 6) 000-0000", "(86A) 000-0000", "(860) 000-0000", "(86-) 000-0000", "(86)) 000-0000", "(86() 000-0000", "(86 ) 000-0000", "(8A5) 000-0000", "(805) 000-0000", "(8-5) 000-0000", "(8)5) 000-0000", "(8(5) 000-0000", "(8 5) 000-0000", "(85A) 000-0000", "(850) 000-0000", "(85-) 000-0000", "(85)) 000-0000", "(85() 000-0000", "(85 ) 000-0000", "(8A4) 000-0000", "(804) 000-0000", "(8-4) 000-0000", "(8)4) 000-0000", "(8(4) 000-0000", "(8 4) 000-0000", "(84A) 000-0000", "(840) 000-0000", "(84-) 000-0000", "(84)) 000-0000", "(84() 000-0000", "(84 ) 000-0000", "(8A3) 000-0000", "(803) 000-0000", "(8-3) 000-0000", "(8)3) 000-0000", "(8(3) 000-0000", "(8 3) 000-0000", "(83A) 000-0000", "(830) 000-0000", "(83-) 000-0000", "(83)) 000-0000", "(83() 000-0000", "(83 ) 000-0000", "(8A2) 000-0000", "(802) 000-0000", "(8-2) 000-0000", "(8)2) 000-0000", "(8(2) 000-0000", "(8 2) 000-0000", "(82A) 000-0000", "(820) 000-0000", "(82-) 000-0000", "(82)) 000-0000", "(82() 000-0000", "(82 ) 000-0000", "(8A0) 000-0000", "(8-0) 000-0000", "(8)0) 000-0000", "(8(0) 000-0000", "(8 0) 000-0000", "(80A) 000-0000", "(801) 000-0000", "(80-) 000-0000", "(80)) 000-0000", "(80() 000-0000", "(80 ) 000-0000", "(200) 0000000", "(200)000-0000", "9110000000", "9a00000000", "90a0000000", "8900000000", "8a80000000", "88a0000000", "8a70000000", "87a0000000", "8a60000000", "86a0000000", "8a50000000", "85a0000000", "8a40000000", "84a0000000", "8a30000000", "83a0000000", "8a20000000", "82a0000000", "8100000000", "8a00000000", "80a0000000", "2000000000", "(911)0000000", "(9a0)0000000", "(90a)0000000", "(890)0000000", "(8a8)0000000", "(88a)0000000", "(8a7)0000000", "(87a)0000000", "(8a6)0000000", "(86a)0000000", "(8a5)0000000", "(85a)0000000", "(8a4)0000000", "(84a)0000000", "(8a3)0000000", "(83a)0000000", "(8a2)0000000", "(82a)0000000", "(810)0000000", "(8a0)0000000", "(80a)0000000", "(200)0000000", "911-000-0000", "9a0-000-0000", "90a-000-0000", "890-000-0000", "8a8-000-0000", "88a-000-0000", "8a7-000-0000", "87a-000-0000", "8a6-000-0000", "86a-000-0000", "8a5-000-0000", "85a-000-0000", "8a4-000-0000", "84a-000-0000", "8a3-000-0000", "83a-000-0000", "8a2-000-0000", "82a-000-0000", "810-000-0000", "8a0-000-0000", "80a-000-0000", "200-000-0000", "(911) 000-0000", "(9a0) 000-0000", "(90a) 000-0000", "(890) 000-0000", "(8a8) 000-0000", "(88a) 000-0000", "(8a7) 000-0000", "(87a) 000-0000", "(8a6) 000-0000", "(86a) 000-0000", "(8a5) 000-0000", "(85a) 000-0000", "(8a4) 000-0000", "(84a) 000-0000", "(8a3) 000-0000", "(83a) 000-0000", "(8a2) 000-0000", "(82a) 000-0000", "(810) 000-0000", "(8a0) 000-0000", "(80a) 000-0000", "(200) 000 0000", "(200) 000-0000"], "nonMatches": ["900-000-0000", "888-000-0000", "877-000-0000", "866-000-0000", "855-000-0000", "844-000-0000", "833-000-0000", "822-000-0000", "80a0a-000-0000", "8-000-0000", "800-000-0000", "200-000-00000", "200-000-000", "200-000--0000", "200-0000-0000", "200-00-0000", "200--000-0000", "2000-000-0000", "20-000-0000", "000-000-0000", "(900) 000-0000", "(888) 000-0000", "(877) 000-0000", "(866) 000-0000", "(855) 000-0000", "(844) 000-0000", "(833) 000-0000", "(822) 000-0000", "(80a0a) 000-0000", "(8) 000-0000", "(800) 000-0000", "(200) 000-00000", "(200) 000-000", "(200) 000--0000", "(200) 0000-0000", "(200) 00-0000", "(200)  000-0000", "(2000) 000-0000", "(20) 000-0000", "(000) 000-0000"]}, {"regex": "ggdg", "exceptionStackTrace": null, "matches": ["ggdg"], "nonMatches": []}, {"regex": "^(?=\\d)(?:(?:(?:(?:(?:0?[13578]|1[02])(\\/)31)\\1|(?:(?:0?[1,3-9]|1[0-2])(\\/)(?:29|30)\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})|(?:0?2(\\/)29\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))|(?:(?:0?[1-9])|(?:1[0-2]))(\\/)(?:0?[1-9]|1\\d|2[0-8])\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2}))($|\\ (?=\\d)))?(((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\ [AP]M))|([01]\\d|2[0-3])(:[0-5]\\d){1,2})?$", "exceptionStackTrace": null, "matches": ["08/31/1600", "01:00 PM", "08/31/1600 01:00 PM"], "nonMatches": ["13/01/160001:00 PM", "01/01/000001:00 PM", "01/01/1600001:00 PM", "01/01/16001:00 PM", "01/01/16160001:00 PM", "01/01/0001:00 PM", "01/01/100001:00 PM", "01/00/160001:00 PM", "01/001/160001:00 PM", "01/1/160001:00 PM", "00/01/160001:00 PM", "001/01/160001:00 PM", "1/01/160001:00 PM", "02/29/920001:00 PM", "02/29/900001:00 PM", "02/29/760001:00 PM", "02/29/560001:00 PM", "02/29/360001:00 PM", "02/29/060001:00 PM", "02/29/840001:00 PM", "02/29/810001:00 PM", "02/29/800001:00 PM", "02/29/680001:00 PM", "02/29/480001:00 PM", "02/29/280001:00 PM", "02/29/080001:00 PM", "02/29/000801:00 PM", "02/29/169201:00 PM", "02/29/169001:00 PM", "02/29/167601:00 PM", "02/29/165601:00 PM", "02/29/163601:00 PM", "02/29/161601:00 PM", "02/29/160601:00 PM", "02/29/168401:00 PM", "02/29/168101:00 PM", "02/29/168001:00 PM", "02/29/166801:00 PM", "02/29/164801:00 PM", "02/29/162801:00 PM", "02/29/160401:00 PM", "02/29/16160801:00 PM", "02/29/0801:00 PM", "02/29/100801:00 PM", "002/29/160801:00 PM", "2/29/160801:00 PM", "13/29/160001:00 PM", "03/29/160001:00 PM", "01/29/160001:00 PM", "00/29/160001:00 PM", "00,/29/160001:00 PM", ",/29/160001:00 PM", "11/31/160001:00 PM", "10/31/160001:00 PM", "08/31/000001:00 PM", "08/31/160024:00", "08/31/160010:00:00:00", "08/31/160010:00:00", "08/31/160010", "08/31/160010:60", "08/31/160000:00", "08/31/160013:00 PM", "08/31/160011:00 PM", "08/31/160010:00 PM", "08/31/160001:00 PM01:00 PM", "08/31/160001:00 BM", "08/31/160001:00 AM", "08/31/160001:00:00:00 PM", "08/31/160001:00:00 PM", "08/31/160001 PM", "08/31/160001:60 PM", "08/31/160000:00 PM", "08/31/160008/31/160001:00 PM", "08/31/1600001:00 PM", "08/31/16001:00 PM", "08/31/16160001:00 PM", "08/31/0001:00 PM", "08/31/100001:00 PM", "07/31/160001:00 PM", "05/31/160001:00 PM", "03/31/160001:00 PM", "01/31/160001:00 PM", "00/31/160001:00 PM", "008/31/160001:00 PM", "8/31/160001:00 PM", "", "10/01/160001:00 PM", "01/20/160001:00 PM", "01/10/160001:00 PM", "01/01/200001:00 PM", "01/01/160001:00 PM", "02/29/960001:00 PM", "02/29/880001:00 PM", "02/29/160001:00 PM", "02/29/200801:00 PM", "02/29/169601:00 PM", "02/29/168801:00 PM", "02/29/160801:00 PM", "10/29/160001:00 PM", "0,/30/160001:00 PM", "0,/29/160001:00 PM", "12/31/160001:00 PM", "08/31/200001:00 PM", "08/31/160020:00", "08/31/160010:00", "08/31/160012:00 PM", "08/31/160001:00 PM"]}, {"regex": "^((?&lt;DRIVE&gt;[a-z]:)|(\\\\\\\\(?&lt;SERVER&gt;[0-9]*[a-z\\-][a-z0-9\\-]*)\\\\(?&lt;VOLUME&gt;[^\\.\\x01-\\x1F\\\\&quot;&quot;\\*\\?&lt;&gt;:|\\\\/][^\\x01-\\x1F\\\\&quot;&quot;\\*\\?|&gt;&lt;:\\\\/]*)))?(?&lt;FOLDERS&gt;(?&lt;FOLDER1&gt;(\\.|(\\.\\.)|([^\\.\\x01-\\x1F\\\\&quot;&quot;\\*\\?|&gt;&lt;:\\\\/][^\\x01-\\x1F\\\\&quot;&quot;\\*\\?&lt;&gt;:|\\\\/]*)))?(?&lt;FOLDERm&gt;[\\\\/](\\.|(\\.\\.)|([^\\.\\x01-\\x1F\\\\&quot;&quot;\\*\\?|&gt;&lt;:\\\\/][^\\x01-\\x1F\\\\&quot;&quot;\\*\\?&lt;&gt;:|\\\\/]*)))*)?[\\\\/]?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "preg_match_all(&quot;/([\\(\\+])?([0-9]{1,3}([\\s])?)?([\\+|\\(|\\-|\\)|\\s])?([0-9]{2,4})([\\-|\\)|\\.|\\s]([\\s])?)?([0-9]{2,4})?([\\.|\\-|\\s])?([0-9]{4,8})/&quot;,$string, $phones); ", "exceptionStackTrace": null, "matches": [], "nonMatches": ["preg_match_all&quot;/+0 |00| 00|000000000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00|00000000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00|000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00||0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 000000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00.0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00-0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00 0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| |0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00000|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 0000|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 0|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| | 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |0000|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00|  00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00|00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00. 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00- 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00) 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00  00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00000| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |0000| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |0| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 ||00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 -00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 +00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 )00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 (00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0  00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0 0 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+|00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0  |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0|00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+0000 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+000 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/+ |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/++0 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/0 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/(0 |00| 00|0000/&quot;,string, phones; ", "preg_match_all&quot;/000000/&quot;,string, phones; ", "preg_match_all&quot;/+0 |00| 00|0000/&quot;,string, phones; "]}, {"regex": "(https:[/][/]|http:[/][/]|www.)[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(:[a-zA-Z0-9]*)?/?([a-zA-Z0-9\\-\\._\\?\\,\\&#39;/\\\\\\+&amp;%\\$#\\=~])*$", "exceptionStackTrace": null, "matches": ["www~evil.AA:evil/~", "www_evil.AA:evil/~", "www\\evil.AA:evil/~", "wwwAevil.AA:evil/~", "www?evil.AA:evil/~", "www=evil.AA:evil/~", "www;evil.AA:evil/~", "www:evil.AA:evil/~", "www0evil.AA:evil/~", "www/evil.AA:evil/~", "www.evil.AA:evil/~", "www-evil.AA:evil/~", "www,evil.AA:evil/~", "www+evil.AA:evil/~", "www&evil.AA:evil/~", "www%evil.AA:evil/~", "www$evil.AA:evil/~", "www#evil.AA:evil/~", "www evil.AA:evil/~", "https://evil.AA:evil/~~", "https://evil.AA:evil/", "https://evil.AA:evil/p", "https://evil.AA:evil/m", "https://evil.AA:evil/b", "https://evil.AA:evil/a", "https://evil.AA:evil/_", "https://evil.AA:evil/\\", "https://evil.AA:evil/A", "https://evil.AA:evil/?", "https://evil.AA:evil/=", "https://evil.AA:evil/;", "https://evil.AA:evil/9", "https://evil.AA:evil/3", "https://evil.AA:evil/0", "https://evil.AA:evil//", "https://evil.AA:evil/.", "https://evil.AA:evil/-", "https://evil.AA:evil/,", "https://evil.AA:evil/+", "https://evil.AA:evil/&", "https://evil.AA:evil/%", "https://evil.AA:evil/$", "https://evil.AA:evil/#", "https://evil.AA:evil//~", "https://evil.AA:evil~", "https://evil.AA/~", "https://evil.AA:eVil/~", "https://evil.AA:EVIL/~", "https://evil.AA:ev_il/~", "https://evil.AA:ev4il/~", "https://evil.AA:e/~", "https://evil.AA:6/~", "https://evil.AA:_/~", "https://evil.AA:/~", "https://evil.AAA:evil/~", "https://evil.aA:evil/~", "https://..AA:evil/~", "https://-.AA:evil/~", "https://eVil.AA:evil/~", "https://EVIL.AA:evil/~", "https://ev4il.AA:evil/~", "https://e.AA:evil/~", "https://6.AA:evil/~", "wwwaevil.AA", "http://evil.AA", "https://evil.AA", "wwwaevil.AA:evil/~", "http://evil.AA:evil/~", "https://evil.AA:evil/~"], "nonMatches": ["https://evil.AA:evil:evil/~", "https://evil.AA:ev il/~", "https://evil.AA: /~", "https://evil.AAAA:evil/~", "https://evil.A:evil/~", "https://~.AA:evil/~", "https://\\.AA:evil/~", "https://?.AA:evil/~", "https://=.AA:evil/~", "https://;.AA:evil/~", "https://:.AA:evil/~", "https:///.AA:evil/~", "https://,.AA:evil/~", "https://+.AA:evil/~", "https://&.AA:evil/~", "https://%.AA:evil/~", "https://$.AA:evil/~", "https://#.AA:evil/~", "https://ev_il.AA:evil/~", "https://ev il.AA:evil/~", "https:// .AA:evil/~", "https://_.AA:evil/~", "https://.AA:evil/~"]}, {"regex": "(?<Nbr>[\\+-]?((\\d*\\,\\d+)|(\\d*\\.\\d+)|\\d+))\\s*(?<Unit>mm|cm|dm|min|km|s|m|h)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<N"}, "matches": []}, {"regex": "^(\\(?\\d\\d\\d\\)?)?( |-|\\.)?\\d\\d\\d( |-|\\.)?\\d{4,4}(( |-|\\.)?[ext\\.]+ ?\\d+)?$", "exceptionStackTrace": null, "matches": ["(000) 000 0000", "(000) 000 0000 . 00", "(000) 000 0000 .0", "(000) 000 0000 .. 0", "(000) 000 0000 x 0", "(000) 000 0000 t 0", "(000) 000 0000 e 0", "(000) 000 0000. 0", "(000) 0000000 . 0", "(000)000 0000 . 0", " 000 0000 . 0", "(000 000 0000 . 0", "000) 000 0000 . 0", "0000000", "(000).000 0000 . 0", "(000)-000 0000 . 0", "(000) 000.0000 . 0", "(000) 000-0000 . 0", "(000) 000 0000.. 0", "(000) 000 0000-. 0", "(000) 000 0000 . 0"], "nonMatches": ["(000) 000 0000 . 0 . 0", "(000) 000 0000 . ", "(000) 000 0000 .  0", "(000) 000 0000  0", "(000) 000 0000 a 0", "(000) 000 0000  . 0", "(000) 000 00000 . 0", "(000) 000 000 . 0", "(000) 000  0000 . 0", "(000)  000 0000 . 0", "(000)(000) 000 0000 . 0", "(000)) 000 0000 . 0", "((000) 000 0000 . 0"]}, {"regex": "regex", "exceptionStackTrace": null, "matches": ["regex"], "nonMatches": []}, {"regex": "gfth", "exceptionStackTrace": null, "matches": ["gfth"], "nonMatches": []}, {"regex": "^([0-9a-zA-Z]+|[a-zA-Z]:(\\\\(\\w[\\w ]*.*))+|\\\\(\\\\(\\w[\\w ]*.*))+)\\.[0-9a-zA-Z]{1,3}$", "exceptionStackTrace": null, "matches": ["\\\\aevilevil\\aevilevil.A", "\\\\aevil\\.A", "\\\\aevil:.A", "\\\\aevil..A", "\\\\aevileVil.A", "\\\\aevilEVIL.A", "\\\\aevilev_il.A", "\\\\aevilev il.A", "\\\\aevilev4il.A", "\\\\aevile.A", "\\\\aevil .A", "\\\\aevil6.A", "\\\\aevil_.A", "\\\\aeVilevil.A", "\\\\aEVILevil.A", "\\\\aev_ilevil.A", "\\\\aev ilevil.A", "\\\\aev4ilevil.A", "\\\\aeevil.A", "\\\\a evil.A", "\\\\a6evil.A", "\\\\a_evil.A", "\\\\aevil.A", "\\\\_evilevil.A", "\\\\Aevilevil.A", "\\\\0evilevil.A", "A:\\aevilevil\\aevilevil.A", "A:\\aevil\\.A", "A:\\aevil:.A", "A:\\aevil..A", "A:\\aevileVil.A", "A:\\aevilEVIL.A", "A:\\aevilev_il.A", "A:\\aevilev il.A", "A:\\aevilev4il.A", "A:\\aevile.A", "A:\\aevil .A", "A:\\aevil6.A", "A:\\aevil_.A", "A:\\aeVilevil.A", "A:\\aEVILevil.A", "A:\\aev_ilevil.A", "A:\\aev ilevil.A", "A:\\aev4ilevil.A", "A:\\aeevil.A", "A:\\a evil.A", "A:\\a6evil.A", "A:\\a_evil.A", "A:\\aevil.A", "A:\\_evilevil.A", "A:\\Aevilevil.A", "A:\\0evilevil.A", "a:\\aevilevil.A", "evil.AAA", "evil.a", "evil.0", "eVil.A", "EVIL.A", "ev4il.A", "e.A", "6.A", "\\\\a.A", "A:\\a.A", "\\\\aevilevil.A", "A:\\aevilevil.A", "evil.A"], "nonMatches": ["\\.A", "A:.A", "evil.AAAA", "evil.", "ev_il.A", "ev il.A", " .A", "_.A", ".A"]}, {"regex": "(^\\b\\d+-\\d+$\\b)|(^\\b\\d+$\\b)", "exceptionStackTrace": null, "matches": ["00", "0-00", "00-0", "0", "0-0"], "nonMatches": ["", "0-", "-0"]}, {"regex": "^([0-9]{3,4})$", "exceptionStackTrace": null, "matches": ["0000", "000"], "nonMatches": ["00000", "00"]}, {"regex": "(<meta\\s+)*((name\\s*=\\s*(&quot;|&#39;)(?<name>[^&#39;(&quot;|&#39;)]*)(&quot;|&#39;)){1}|content\\s*=\\s*(&quot;|&#39;)(?<content>[^&#39;(&quot;|&#39;)]*)(&quot;|&#39;)|scheme\\s*=\\s*(&quot;|&#39;)(?<scheme>[^&#39;(&quot;|&#39;)]*)(&quot;|&#39;))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<n"}, "matches": []}, {"regex": "^([EV])?\\d{3,3}(\\.\\d{1,2})?$", "exceptionStackTrace": null, "matches": ["V000", "V000.00", "000.0", "E000.0", "000", "V000.0"], "nonMatches": ["V000.0.0", "V000.000", "V000.", "V0000.0", "V00.0", "VV000.0", "A000.0"]}, {"regex": "^([EV])?\\d{3,3}(\\.\\d{1,2})?(, *([EV])?\\d{3,3}(\\.\\d{1,2})?)*$", "exceptionStackTrace": null, "matches": ["V000.0, V000.0, V000.0", "V000.0", "V000.0, V000", "V000.0, V000.00", "V000.0, 000.0", "V000.0, E000.0", "V000.0,  V000.0", "V000.0,V000.0", "V000, V000.0", "V000.00, V000.0", "000.0, V000.0", "E000.0, V000.0", "000", "V000.0, V000.0"], "nonMatches": ["V000.0, V000.0.0", "V000.0, V000.000", "V000.0, V000.", "V000.0, V0000.0", "V000.0, V00.0", "V000.0, VV000.0", "V000.0, A000.0", "V000.0.0, V000.0", "V000.000, V000.0", "V000., V000.0", "V0000.0, V000.0", "V00.0, V000.0", "VV000.0, V000.0", "A000.0, V000.0"]}, {"regex": "^\\d{4,4}[A-Z0-9]$", "exceptionStackTrace": null, "matches": ["0000A", "00000"], "nonMatches": ["000000", "0000"]}, {"regex": "^\\d{4,4}[A-Z0-9](, *\\d{4,4})[A-Z0-9]*$", "exceptionStackTrace": null, "matches": ["00000, 0000EVIL", "00000, 00006", "00000, 0000", "00000,0000"], "nonMatches": ["00000, 0000eVil", "00000, 0000ev_il", "00000, 0000ev il", "00000, 0000ev4il", "00000, 0000e", "00000, 0000 ", "00000, 0000_", "00000, 00000evil", "00000, 000evil", "00000,  0000evil", "00000,0000evil", "0000A, 0000evil", "000000, 0000evil", "0000, 0000evil", "00000, 0000evil"]}, {"regex": "(\\A|(.*,))VALUE(\\z|([,]?.))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad escape \\z"}, "matches": []}, {"regex": "^[\\w0-9]+( [\\w0-9]+)*$", "exceptionStackTrace": null, "matches": ["evil evil evil", "evil eVil", "evil EVIL", "evil ev_il", "evil ev il", "evil ev4il", "evil e", "evil 6", "evil _", "eVil evil", "EVIL evil", "ev_il evil", "ev il evil", "ev4il evil", "e evil", "6 evil", "_ evil", "evil", "evil evil"], "nonMatches": ["evil  ", "evil ", "  evil", " evil"]}, {"regex": "((?<strElement>(^[A-Z0-9-;=]*:))(?<strValue>(.*)))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<s"}, "matches": []}, {"regex": "^[a-zA-Z&#225;&#233;&#237;&#243;&#250;]+$", "exceptionStackTrace": null, "matches": [";", "&", "#", "eVil", "EVIL", "ev4il", "e", "evil"], "nonMatches": ["ev_il", "ev il", " ", "6", "_", ""]}, {"regex": "^[a-zA-Z&#225;&#233;&#237;&#243;&#250;]+$", "exceptionStackTrace": null, "matches": [";", "&", "#", "eVil", "EVIL", "ev4il", "e", "evil"], "nonMatches": ["ev_il", "ev il", " ", "6", "_", ""]}, {"regex": "^(www\\.|http:\\/\\/|https:\\/\\/|http:\\/\\/www\\.|https:\\/\\/www\\.)[a-z0-9]+\\.[a-z]{2,4}$", "exceptionStackTrace": null, "matches": ["www.evil.aaaa", "www.ev4il.aa", "www.e.aa", "www.6.aa", "https://www.evil.aa", "http://www.evil.aa", "https://evil.aa", "http://evil.aa", "www.evil.aa"], "nonMatches": ["www.evil.aaaaa", "www.evil.a", "www.eVil.aa", "www.EVIL.aa", "www.ev_il.aa", "www.ev il.aa", "www. .aa", "www._.aa", "www..aa"]}, {"regex": "^(www\\.|http:\\/\\/|https:\\/\\/|http:\\/\\/www\\.|https:\\/\\/www\\.)[a-z0-9]+\\.[a-z]{2,4}$", "exceptionStackTrace": null, "matches": ["www.evil.aaaa", "www.ev4il.aa", "www.e.aa", "www.6.aa", "https://www.evil.aa", "http://www.evil.aa", "https://evil.aa", "http://evil.aa", "www.evil.aa"], "nonMatches": ["www.evil.aaaaa", "www.evil.a", "www.eVil.aa", "www.EVIL.aa", "www.ev_il.aa", "www.ev il.aa", "www. .aa", "www._.aa", "www..aa"]}, {"regex": "^(www\\.|http:\\/\\/|https:\\/\\/|http:\\/\\/www\\.|https:\\/\\/www\\.)[a-z0-9]+\\.[a-z]{2,4}$", "exceptionStackTrace": null, "matches": ["www.evil.aaaa", "www.ev4il.aa", "www.e.aa", "www.6.aa", "https://www.evil.aa", "http://www.evil.aa", "https://evil.aa", "http://evil.aa", "www.evil.aa"], "nonMatches": ["www.evil.aaaaa", "www.evil.a", "www.eVil.aa", "www.EVIL.aa", "www.ev_il.aa", "www.ev il.aa", "www. .aa", "www._.aa", "www..aa"]}, {"regex": "How to Order Paravex", "exceptionStackTrace": null, "matches": ["How to Order Paravex"], "nonMatches": []}, {"regex": "^([1-zA-Z0-1@.\\s]{1,255})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: 1-z"}, "matches": [], "nonMatches": []}, {"regex": "(\\(&quot;)([0-9]*)(\\&quot;)", "exceptionStackTrace": null, "matches": ["(&quot;00&quot;", "(&quot;&quot;", "(&quot;0&quot;"], "nonMatches": []}, {"regex": "(&quot;)([0-9]*)(&quot;,&quot;)([0-9]*)(&quot;\\))", "exceptionStackTrace": null, "matches": ["&quot;0&quot;,&quot;00&quot;)", "&quot;0&quot;,&quot;&quot;)", "&quot;00&quot;,&quot;0&quot;)", "&quot;&quot;,&quot;0&quot;)", "&quot;&quot;,&quot;&quot;)", "&quot;0&quot;,&quot;0&quot;)"], "nonMatches": []}, {"regex": "^\\d{1,2}\\/\\d{2,4}$", "exceptionStackTrace": null, "matches": ["0/0000", "00/00", "0/00"], "nonMatches": ["0/00000", "0/0", "000/00", "/00"]}, {"regex": "^\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}$", "exceptionStackTrace": null, "matches": ["{00000000-0000-0000-0000-a00000000000}", "{00000000-0000-0000-0000-A00000000000}", "{00000000-0000-0000-a000-000000000000}", "{00000000-0000-0000-A000-000000000000}", "{00000000-0000-a000-0000-000000000000}", "{00000000-0000-A000-0000-000000000000}", "{00000000-a000-0000-0000-000000000000}", "{00000000-A000-0000-0000-000000000000}", "{a0000000-0000-0000-0000-000000000000}", "{A0000000-0000-0000-0000-000000000000}", "{00000000-0000-0000-0000-000000000000}"], "nonMatches": ["{00000000-0000-0000-0000-0000000000000}", "{00000000-0000-0000-0000-00000000000}", "{00000000-0000-0000-0000-g00000000000}", "{00000000-0000-0000-0000-G00000000000}", "{00000000-0000-0000-00000-000000000000}", "{00000000-0000-0000-000-000000000000}", "{00000000-0000-0000-g000-000000000000}", "{00000000-0000-0000-G000-000000000000}", "{00000000-0000-00000-0000-000000000000}", "{00000000-0000-000-0000-000000000000}", "{00000000-0000-g000-0000-000000000000}", "{00000000-0000-G000-0000-000000000000}", "{00000000-00000-0000-0000-000000000000}", "{00000000-000-0000-0000-000000000000}", "{00000000-g000-0000-0000-000000000000}", "{00000000-G000-0000-0000-000000000000}", "{000000000-0000-0000-0000-000000000000}", "{0000000-0000-0000-0000-000000000000}", "{g0000000-0000-0000-0000-000000000000}", "{G0000000-0000-0000-0000-000000000000}"]}, {"regex": "^((0?[2])/(0?[1-9]|[1-2][0-9])|(0?[469]|11)/(0?[1-9]|[1-2][0-9]|30)|(0?[13578]|1[02])/(0?[1-9]|[1-2][0-9]|3[0-1]))/([1][9][0-9]{2}|[2-9][0-9]{3}) (00|0?[1-9]|1[0-9]|2[0-3])\\:([0-5][0-9])\\:([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["10/01/1900 00:00:00", "08/1/1900 00:00:00", "07/01/1900 00:00:00", "05/01/1900 00:00:00", "03/01/1900 00:00:00", "01/01/1900 00:00:00", "8/01/1900 00:00:00", "09/1/1900 00:00:00", "06/01/1900 00:00:00", "04/01/1900 00:00:00", "9/01/1900 00:00:00", "02/01/1900 1:00:00", "02/1/1900 00:00:00", "2/01/1900 00:00:00", "12/1/1900 00:00:00", "8/30/1900 00:00:00", "8/10/1900 00:00:00", "8/1/1900 00:00:00", "11/1/1900 00:00:00", "9/30/1900 00:00:00", "9/10/1900 00:00:00", "9/1/1900 00:00:00", "2/10/1900 00:00:00", "2/1/2000 00:00:00", "2/1/1900 20:00:00", "2/1/1900 10:00:00", "2/1/1900 1:00:00", "2/1/1900 00:00:00", "12/01/1900 00:00:00", "08/30/1900 00:00:00", "08/10/1900 00:00:00", "08/01/1900 00:00:00", "11/01/1900 00:00:00", "09/30/1900 00:00:00", "09/10/1900 00:00:00", "09/01/1900 00:00:00", "02/10/1900 00:00:00", "02/01/2000 00:00:00", "02/01/1900 20:00:00", "02/01/1900 10:00:00", "02/01/1900 01:00:00", "02/01/1900 00:00:00"], "nonMatches": ["08/32/1900 00:00:00", "08/00/1900 00:00:00", "08/001/1900 00:00:00", "008/01/1900 00:00:00", "09/00/1900 00:00:00", "09/001/1900 00:00:00", "00/01/1900 00:00:00", "009/01/1900 00:00:00", "02/01/20000 00:00:00", "02/01/200 00:00:00", "02/01/0000 00:00:00", "02/01/1900 24:00:00", "02/01/1900 001:00:00", "02/01/1900 00:00:60", "02/01/1900 00:60:00", "02/01/19000 00:00:00", "02/01/190 00:00:00", "02/00/1900 00:00:00", "02/001/1900 00:00:00", "002/01/1900 00:00:00"]}, {"regex": "^(00|0?[1-9]|1[0-9]|2[0-3])\\:([0-5][0-9])\\:([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["1:00:00", "20:00:00", "10:00:00", "01:00:00", "00:00:00"], "nonMatches": ["24:00:00", "001:00:00", "00:00:60", "00:60:00"]}, {"regex": "^(0?[1-9]|1[0-2])(\\:)([0-5][0-9])(\\:)([0-5][0-9]) (AM|PM)$", "exceptionStackTrace": null, "matches": ["1:00:00 PM", "1:00:00 AM", "10:00:00 AM", "01:00:00 PM", "01:00:00 AM"], "nonMatches": ["13:00:00 AM", "01:00:60 AM", "01:60:00 AM", "00:00:00 AM", "001:00:00 AM"]}, {"regex": "^((0?[2])/(0?[1-9]|[1-2][0-9])|(0?[469]|11)/(0?[1-9]|[1-2][0-9]|30)|(0?[13578]|1[02])/(0?[1-9]|[1-2][0-9]|3[0-1]))/([1][9][0-9]{2}|[2-9][0-9]{3})$", "exceptionStackTrace": null, "matches": ["10/01/1900", "08/1/1900", "07/01/1900", "05/01/1900", "03/01/1900", "01/01/1900", "8/01/1900", "09/1/1900", "06/01/1900", "04/01/1900", "9/01/1900", "02/1/1900", "2/01/1900", "12/1/1900", "8/30/1900", "8/10/1900", "8/1/1900", "11/1/1900", "9/30/1900", "9/10/1900", "9/1/1900", "2/10/1900", "2/1/2000", "2/1/1900", "12/01/1900", "08/30/1900", "08/10/1900", "08/01/1900", "11/01/1900", "09/30/1900", "09/10/1900", "09/01/1900", "02/10/1900", "02/01/2000", "02/01/1900"], "nonMatches": ["08/32/1900", "08/00/1900", "08/001/1900", "008/01/1900", "09/00/1900", "09/001/1900", "00/01/1900", "009/01/1900", "02/01/20000", "02/01/200", "02/01/0000", "02/01/19000", "02/01/190", "02/00/1900", "02/001/1900", "002/01/1900"]}, {"regex": "^[2-9][0-8]\\d[2-9]\\d{6}$", "exceptionStackTrace": null, "matches": ["2002000000"], "nonMatches": ["20020000000", "200200000", "2000000000", "2902000000", "0002000000"]}, {"regex": "^((\\d{5})|(\\d{5}-\\d{4})|([A-CEGHJ-NPR-TV-Z]\\d[A-CEGHJ-NPR-TV-Z]\\s\\d[A-CEGHJ-NPR-TV-Z]\\d))$", "exceptionStackTrace": null, "matches": ["P0P 0V0", "P0P 0R0", "P0P 0J0", "P0P 0H0", "P0P 0G0", "P0P 0E0", "P0P 0A0", "P0V 0P0", "P0R 0P0", "P0J 0P0", "P0H 0P0", "P0G 0P0", "P0E 0P0", "P0A 0P0", "V0P 0P0", "R0P 0P0", "J0P 0P0", "H0P 0P0", "G0P 0P0", "E0P 0P0", "A0P 0P0", "P0P 0P0", "00000-0000", "00000"], "nonMatches": ["P0P 0D0", "P0D 0P0", "D0P 0P0", "00000-00000", "00000-000", "000000-0000", "0000-0000", "000000", "0000"]}, {"regex": "^([A-Z]|[a-z]|[0-9])([A-Z]|[a-z]|[0-9]|([A-Z]|[a-z]|[0-9]|(%|&|&#39;|\\+|\\-|@|_|\\.|\\ )[^%&&#39;\\+\\-@_\\.\\ ]|\\.$|([%&&#39;\\+\\-@_\\.]\\ [^\\ ]|\\ [%&&#39;\\+\\-@_\\.][^%&&#39;\\+\\-@_\\.])))+$", "exceptionStackTrace": null, "matches": ["A .A", "A .0", "A . ", "A _a", "A @a", "A ;a", "A 9a", "A 3a", "A 0a", "A -a", "A +a", "A &a", "A %a", "A #a", "A. _", "A. A", "A. @", "A. ;", "A. 0", "A. .", "A. -", "A. +", "A. &", "A. %", "A. #", "A_ a", "A@ a", "A; a", "A9 a", "A3 a", "A0 a", "A- a", "A+ a", "A& a", "A% a", "A# a", "A%A", "A%0", "AAA", "0A", "aA", "A .a", "A. a", "A.", "A a", "A.a", "A_a", "A@a", "A-a", "A+a", "A&#39;a", "A&a", "A%a", "A0", "Aa", "AA"], "nonMatches": ["A ._", "A .@", "A .;", "A .9", "A .3", "A ..", "A .-", "A .+", "A .&", "A .%", "A .#", "A.  ", "A%_", "A%@", "A%;", "A%9", "A%3", "A%.", "A%-", "A%+", "A%&", "A%%", "A%#", "A% ", "A"]}, {"regex": "^(?=.*[a-zA-Z])(?=.*[0-9!@#$%^&*\\?\\+])(?!.*[()_\\-\\`\\\\/\\&quot;\\&#39;|\\[\\]},{:;&#39;/>.<,])(?!.*\\s)(?!.*\\s).{8,20}$", "exceptionStackTrace": null, "matches": ["^aaaaaaa", "@aaaaaaa", "?aaaaaaa", "0aaaaaaa", "+aaaaaaa", "*aaaaaaa", "%aaaaaaa", "$aaaaaaa", "!aaaaaaa"], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaa", "aaaaaaa", "}aaaaaaa", "|aaaaaaa", "{aaaaaaa", "`aaaaaaa", "_aaaaaaa", "]aaaaaaa", "\\aaaaaaa", "[aaaaaaa", "Aaaaaaaa", ">aaaaaaa", "<aaaaaaa", ";aaaaaaa", ":aaaaaaa", "/aaaaaaa", ".aaaaaaa", "-aaaaaaa", ",aaaaaaa", ")aaaaaaa", "(aaaaaaa", "&aaaaaaa", "#aaaaaaa", " aaaaaaa", "aaaaaaaa"]}, {"regex": "^(?=.*[a-zA-Z])(?=.*[a-zA-Z0-9]).{6,20}$", "exceptionStackTrace": null, "matches": ["aaaaaaaaaaaaaaaaaaaa", "_aaaaa", "Aaaaaa", "0aaaaa", " aaaaa", "aaaaaa"], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaa", "aaaaa"]}, {"regex": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*()_\\~\\-\\`\\\\/\\&quot;\\&#39;+|\\[\\]},{:;&#39;?/>.<,])(?!.*\\s)(?!.*\\s).{8,55}$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaa", "~aaaaaaa", "}aaaaaaa", "|aaaaaaa", "{aaaaaaa", "`aaaaaaa", "_aaaaaaa", "^aaaaaaa", "]aaaaaaa", "\\aaaaaaa", "[aaaaaaa", "Aaaaaaaa", "@aaaaaaa", "?aaaaaaa", ">aaaaaaa", "<aaaaaaa", ";aaaaaaa", ":aaaaaaa", "0aaaaaaa", "/aaaaaaa", ".aaaaaaa", "-aaaaaaa", ",aaaaaaa", "+aaaaaaa", "*aaaaaaa", ")aaaaaaa", "(aaaaaaa", "&aaaaaaa", "%aaaaaaa", "$aaaaaaa", "#aaaaaaa", "!aaaaaaa", " aaaaaaa", "aaaaaaaa"]}, {"regex": "^([1-9]|0[1-9]|1[0-2]):([0-5][0-9])$", "exceptionStackTrace": null, "matches": ["10:00", "01:00", "1:00"], "nonMatches": ["13:00", "00:00", "1:60", "0:00"]}, {"regex": "^(?<prov>10)(?<tipo>(AV))?-(?<tomo>\\d{1,4})-(?<folio>\\d{1,5})|^(?<prov>[1-9])(?<tipo>(AV))?-(?<tomo>\\d{1,4})-(?<folio>\\d{1,5})|^(?<tipo>(E|N|PE))-(?<tomo>\\d{1,4})-(?<folio>\\d{1,5})", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<p"}, "matches": []}, {"regex": "^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$", "exceptionStackTrace": null, "matches": ["11.01.1900", "10.01.1900", "01.30.1900", "01.10.1900", "01.01/1900", "01.01-1900", "01.01 1900", "01.1.1900", "01/01.1900", "01-01.1900", "01 01.1900", "1.01.1900", "12.1.1900", "1.31.1900", "1.20.1900", "1.1.2000", "1.1.1900", "12.01.1900", "01.31.1900", "01.20.1900", "01.01.2000", "01.01.1900"], "nonMatches": ["13.01.1900", "01.32.1900", "01.00.1900", "01.001.1900", "00.01.1900", "001.01.1900"]}, {"regex": "^([a-zA-Z].*|[1-9].*)\\.(((j|J)(p|P)(g|G))|((g|G)(i|I)(f|F)))$", "exceptionStackTrace": null, "matches": ["1..jpg", "1eVil.jpg", "1EVIL.jpg", "1ev_il.jpg", "1ev il.jpg", "1ev4il.jpg", "1e.jpg", "1 .jpg", "16.jpg", "1_.jpg", "A..jpg", "AeVil.jpg", "AEVIL.jpg", "Aev_il.jpg", "Aev il.jpg", "Aev4il.jpg", "Ae.jpg", "A .jpg", "A6.jpg", "A_.jpg", "aevil.jpg", "1.jpg", "A.Gif", "A.gIf", "A.giF", "A.gif", "A.Jpg", "A.jPg", "A.jpG", "A.jpg", "1evil.jpg", "Aevil.Gif", "Aevil.gIf", "Aevil.giF", "Aevil.gif", "Aevil.Jpg", "Aevil.jPg", "Aevil.jpG", "Aevil.jpg"], "nonMatches": ["0evil.jpg"]}, {"regex": "([A-Za-z]{2}|[A-Za-z]\\d|\\d[A-Za-z])[A-Za-z]{0,1}\\d(\\d{0,3})[A-Za-z]{0,1}", "exceptionStackTrace": null, "matches": ["0Aa00a", "A0a00a", "aaa00aa", "aaa00", "aaa00A", "aaa00000a", "aaa0000a", "aaa0a", "aaA00a", "aaaa00a", "aa00a", "Aaa00a", "0a0", "a00", "aa0", "0aa00a", "a0a00a", "aaa00a"], "nonMatches": []}, {"regex": "\\A([0-9a-zA-Z_]{1,15})|(@([0-9a-zA-Z_]{1,15}))\\Z", "exceptionStackTrace": null, "matches": ["@_______________", "@a", "@A", "@0", "________________", "_______________", "a", "A", "0", "@_", "_"], "nonMatches": ["@________________", "@", ""]}, {"regex": "^[a-zA-Z][\\w\\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\\w\\.-]*[a-zA-Z0-9]\\.[a-zA-Z][a-zA-Z\\.]*[a-zA-Z]$", "exceptionStackTrace": null, "matches": ["Aevil0@0evil0.Aevila", "Aevil0@0evil0.A.A", "Aevil0@0evil0.AeVilA", "Aevil0@0evil0.AEVILA", "Aevil0@0evil0.AeA", "Aevil0@0evil0.AA", "Aevil0@0evil0.aevilA", "Aevil0@0evila.AevilA", "Aevil0@0evilA.AevilA", "Aevil0@0.0.AevilA", "Aevil0@0-0.AevilA", "Aevil0@0eVil0.AevilA", "Aevil0@0EVIL0.AevilA", "Aevil0@0ev_il0.AevilA", "Aevil0@0ev4il0.AevilA", "Aevil0@0e0.AevilA", "Aevil0@060.AevilA", "Aevil0@0_0.AevilA", "Aevil0@00.AevilA", "Aevil0@aevil0.AevilA", "Aevil0@Aevil0.AevilA", "Aevila@0evil0.AevilA", "AevilA@0evil0.AevilA", "A.0@0evil0.AevilA", "A-0@0evil0.AevilA", "AeVil0@0evil0.AevilA", "AEVIL0@0evil0.AevilA", "Aev_il0@0evil0.AevilA", "Aev4il0@0evil0.AevilA", "Ae0@0evil0.AevilA", "A60@0evil0.AevilA", "A_0@0evil0.AevilA", "A0@0evil0.AevilA", "aevil0@0evil0.AevilA", "A0@00.AA", "Aevil0@0evil0.AevilA"], "nonMatches": ["Aevil0@0evil0.A@A", "Aevil0@0evil0.A-A", "Aevil0@0evil0.Aev_ilA", "Aevil0@0evil0.Aev ilA", "Aevil0@0evil0.Aev4ilA", "Aevil0@0evil0.A A", "Aevil0@0evil0.A6A", "Aevil0@0evil0.A_A", "Aevil0@0@0.AevilA", "Aevil0@0ev il0.AevilA", "Aevil0@0 0.AevilA", "A@0@0evil0.AevilA", "Aev il0@0evil0.AevilA", "A 0@0evil0.AevilA"]}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation ", "exceptionStackTrace": null, "matches": ["AmazonPrimeCustomerServicePhoneNumber,AmazonPrimeRefund,AmazonPrimeMembershipCancellation "], "nonMatches": []}, {"regex": "GmailPasswordRecovery,GmailRecovery ", "exceptionStackTrace": null, "matches": ["GmailPasswordRecovery,GmailRecovery "], "nonMatches": []}, {"regex": "GmailPasswordRecovery,GmailRecovery ", "exceptionStackTrace": null, "matches": ["GmailPasswordRecovery,GmailRecovery "], "nonMatches": []}, {"regex": "GmailPasswordRecovery,GmailRecovery ", "exceptionStackTrace": null, "matches": ["GmailPasswordRecovery,GmailRecovery "], "nonMatches": []}, {"regex": "GmailPasswordRecovery,GmailRecovery ", "exceptionStackTrace": null, "matches": ["GmailPasswordRecovery,GmailRecovery "], "nonMatches": []}, {"regex": "GmailPasswordRecovery,GmailRecovery ", "exceptionStackTrace": null, "matches": ["GmailPasswordRecovery,GmailRecovery "], "nonMatches": []}, {"regex": "\\\\(?(\\\\d{4})\\\\)?[- ]?(\\\\d{5})[- ]?(\\\\d{6})", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character in group name '\\\\\\\\d{4}'"}, "matches": []}, {"regex": "\\b(((0[13578]|1[02])[\\/\\.-]?(0[1-9]|[12]\\d|3[01])[\\/\\.-]?(19|20)?(\\d{2}))|(0[13456789]|1[012])[\\/\\.-]?(0[1-9]|[12]\\d|30)[\\/\\.-]?(19|20)?(\\d{2}))|(02[\\/\\.-]?(0[1-9]|1\\d|2[0-8])[\\/\\.-]?(19|20)?(\\d{2}))|(02[\\/\\.-]?29[\\/\\.-]?(19|20)?((0[48]|[2468][048]|[13579][26])|(00)))\\b", "exceptionStackTrace": null, "matches": ["02-29-1992", "02-29-1976", "02-29-1956", "02-29-1936", "02-29-1916", "02-29-1984", "02-29-1980", "02-29-1968", "02-29-1948", "02-29-1928", "02-29-1904", "02-29-08", "02-291908", "02-29/1908", "02-29.1908", "0229-1908", "02/29-1908", "02.29-1908", "02-01-19000", "02-01-190", "02-01-191900", "02-01-00", "02-011900", "02-01/1900", "02-01.1900", "02--01-1900", "0201-1900", "02/01-1900", "02.01-1900", "13-01-1900", "09-10-1900", "09-01-19000", "09-01-190", "09-01-191900", "09-01-00", "09-011900", "09-01/1900", "09-01.1900", "09--01-1900", "0901-1900", "09/01-1900", "09.01-1900", "06-01-1900", "04-01-1900", "11-01-1900", "10-01-1900", "08-30-1900", "08-10-1900", "08-01-19000", "08-01-190", "08-01-191900", "08-01-00", "08-011900", "08-01/1900", "08-01.1900", "08--01-1900", "0801-1900", "08/01-1900", "08.01-1900", "07-01-1900", "05-01-1900", "03-01-1900", "01-01-1900", "00-01-1900", "022900", "022996", "022988", "022908", "022000", "021000", "020100", "093000", "092000", "090100", "120100", "083100", "082000", "080100", "02-29-2008", "02-29-1900", "02-29-1996", "02-29-1988", "02-29-1908", "02-20-1900", "02-10-1900", "02-01-2000", "02-01-1900", "09-30-1900", "09-20-1900", "09-01-2000", "09-01-1900", "12-01-1900", "08-31-1900", "08-20-1900", "08-01-2000", "08-01-1900"], "nonMatches": ["02-29-1990", "02-29-1906", "02-29-1981", "02-29-191908", "02-29--1908", "02--29-1908", "02-01--1900", "02-00-1900", "09-01--1900", "09-00-1900", "08-32-1900", "08-01--1900", "08-00-1900"]}, {"regex": "(^\\d{1,3}$)|(\\d{1,3})\\.?(\\d{0,0}[0,5])", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (pointless repeat): pointless repeat quantifier {0,0}"}, "matches": [], "nonMatches": []}, {"regex": "&quot;([^\\\\&quot;]|\\\\.)*&quot;", "exceptionStackTrace": null, "matches": ["&quot;\\\\&quot;", "&quot;\\A&quot;", "&quot;\\;&quot;", "&quot;\\0&quot;", "&quot;\\&&quot;", "&quot;\\ &quot;", "&quot;aa&quot;", "&quot;A&quot;", "&quot;0&quot;", "&quot; &quot;", "&quot;&quot;", "&quot;\\a&quot;", "&quot;a&quot;"], "nonMatches": ["&quot;u&quot;", "&quot;t&quot;", "&quot;q&quot;", "&quot;o&quot;", "&quot;\\&quot;", "&quot;;&quot;", "&quot;&&quot;"]}, {"regex": "\\w+([-+.&#39;]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*", "exceptionStackTrace": null, "matches": ["evil;evil@evil.evil.evil.eVil", "evil;evil@evil.evil.evil.EVIL", "evil;evil@evil.evil.evil.ev_il", "evil;evil@evil.evil.evil.ev il", "evil;evil@evil.evil.evil.ev4il", "evil;evil@evil.evil.evil.e", "evil;evil@evil.evil.evil. ", "evil;evil@evil.evil.evil.6", "evil;evil@evil.evil.evil._", "evil;evil@evil.evil.evil.", "evil;evil@evil.evil.evil-evil", "evil;evil@evil.evil.eVil.evil", "evil;evil@evil.evil.EVIL.evil", "evil;evil@evil.evil.ev_il.evil", "evil;evil@evil.evil.ev il.evil", "evil;evil@evil.evil.ev4il.evil", "evil;evil@evil.evil.e.evil", "evil;evil@evil.evil. .evil", "evil;evil@evil.evil.6.evil", "evil;evil@evil.evil._.evil", "evil;evil@evil.evil..evil", "evil;evil@evil.evil.evil.evil.evil", "evil;evil@evil.evil.evil", "evil;evil@evil.eVil.evil.evil", "evil;evil@evil.EVIL.evil.evil", "evil;evil@evil.ev_il.evil.evil", "evil;evil@evil.ev il.evil.evil", "evil;evil@evil.ev4il.evil.evil", "evil;evil@evil.e.evil.evil", "evil;evil@evil.6.evil.evil", "evil;evil@evil._.evil.evil", "evil;evil@evil-evil.evil.evil", "evil;evil@eVil.evil.evil.evil", "evil;evil@EVIL.evil.evil.evil", "evil;evil@ev_il.evil.evil.evil", "evil;evil@ev4il.evil.evil.evil", "evil;evil@e.evil.evil.evil", "evil;evil@6.evil.evil.evil", "evil;evil@_.evil.evil.evil", "evil;evil;evil@evil.evil.evil.evil", "evil@evil.evil.evil.evil", "evil;eVil@evil.evil.evil.evil", "evil;EVIL@evil.evil.evil.evil", "evil;ev_il@evil.evil.evil.evil", "evil;ev il@evil.evil.evil.evil", "evil;ev4il@evil.evil.evil.evil", "evil;e@evil.evil.evil.evil", "evil;6@evil.evil.evil.evil", "evil;_@evil.evil.evil.evil", "evil9evil@evil.evil.evil.evil", "evil3evil@evil.evil.evil.evil", "evil0evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil", "evil-evil@evil.evil.evil.evil", "evil+evil@evil.evil.evil.evil", "evil&evil@evil.evil.evil.evil", "evil#evil@evil.evil.evil.evil", "eVil;evil@evil.evil.evil.evil", "EVIL;evil@evil.evil.evil.evil", "ev_il;evil@evil.evil.evil.evil", "ev il;evil@evil.evil.evil.evil", "ev4il;evil@evil.evil.evil.evil", "e;evil@evil.evil.evil.evil", " ;evil@evil.evil.evil.evil", "6;evil@evil.evil.evil.evil", "_;evil@evil.evil.evil.evil", ";evil@evil.evil.evil.evil", "evil@evil.evil", "evil;evil@evil.evil.evil.evil"], "nonMatches": ["evil;evil@evil. .evil.evil", "evil;evil@evil..evil.evil", "evil;evil@ev il.evil.evil.evil", "evil;evil@ .evil.evil.evil", "evil;evil@.evil.evil.evil", "evil; @evil.evil.evil.evil", "evil;@evil.evil.evil.evil"]}, {"regex": "(.|[\\r\\n]){1,5}", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "^(.|\\r|\\n){1,10}$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\r"}, "matches": [], "nonMatches": []}, {"regex": "^\\d+(?:\\.\\d{0,2})?$", "exceptionStackTrace": null, "matches": ["0.00", "0.", "00.0", "0", "0.0"], "nonMatches": ["0.0.0", "0.000", ".0"]}, {"regex": "^(([a-zA-Z]:)|(\\\\{2}\\w+)\\$?)(\\\\(\\w[\\w].*))+(.pdf)$", "exceptionStackTrace": null, "matches": ["\\\\evil\\aaevilapdf", "\\\\eVil$\\aaevilapdf", "\\\\EVIL$\\aaevilapdf", "\\\\ev_il$\\aaevilapdf", "\\\\ev4il$\\aaevilapdf", "\\\\e$\\aaevilapdf", "\\\\6$\\aaevilapdf", "\\\\_$\\aaevilapdf", "A:\\aaevil\\pdf", "A:\\aaevilApdf", "A:\\aaevil:pdf", "A:\\aaevil0pdf", "A:\\aaevil$pdf", "A:\\aaevil pdf", "A:\\aaevil\\aaevilapdf", "A:\\aa\\apdf", "A:\\aa:apdf", "A:\\aa$apdf", "A:\\aaeVilapdf", "A:\\aaEVILapdf", "A:\\aaev_ilapdf", "A:\\aaev ilapdf", "A:\\aaev4ilapdf", "A:\\aaeapdf", "A:\\aa apdf", "A:\\aa6apdf", "A:\\aa_apdf", "A:\\a_evilapdf", "A:\\aAevilapdf", "A:\\a0evilapdf", "A:\\_aevilapdf", "A:\\Aaevilapdf", "A:\\0aevilapdf", "a:\\aaevilapdf", "\\\\evil\\aaapdf", "A:\\aaapdf", "\\\\evil$\\aaevilapdf", "A:\\aaevilapdf"], "nonMatches": ["\\\\evil$$\\aaevilapdf", "\\\\ev il$\\aaevilapdf", "\\\\ $\\aaevilapdf", "\\\\$\\aaevilapdf", "\\\\\\evil$\\aaevilapdf", "\\evil$\\aaevilapdf", "A:apdf"]}, {"regex": "^([0-9]*|\\d*\\.\\d{1}?\\d*)$", "exceptionStackTrace": null, "matches": ["0.000", "0.0", "00.00", ".00", "00", ".0", "", "0.00", "0"], "nonMatches": []}, {"regex": "[a-zA-Z]", "exceptionStackTrace": null, "matches": ["a", "A"], "nonMatches": []}, {"regex": "\\.(?i:)(?:jpg|gif)$", "exceptionStackTrace": null, "matches": [".gif", ".jpg"], "nonMatches": []}, {"regex": "[&#39;`~!@#&$%^&*()-_=+{}|?><,.:;{}\\&quot;\\\\/\\\\[\\\\]]", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: )-_"}, "matches": [], "nonMatches": []}, {"regex": "[0-9]*\\.?[0-9]*[1-9]", "exceptionStackTrace": null, "matches": ["0.001", "0.1", "0..01", "001", "00.01", ".01", "1", "0.01"], "nonMatches": ["0.00"]}, {"regex": "^\\d*[1-9]\\d*$", "exceptionStackTrace": null, "matches": ["0100", "01", "0010", "10", "1", "010"], "nonMatches": ["000"]}, {"regex": "([Cc][Hh][Aa][Nn][Dd][Aa][Nn].*?)", "exceptionStackTrace": null, "matches": ["chandaneVil", "chandanEVIL", "chandanev_il", "chandanev il", "chandanev4il", "chandane", "chandan ", "chandan6", "chandan_", "chandaNevil", "chandAnevil", "chanDanevil", "chaNdanevil", "chAndanevil", "cHandanevil", "Chandanevil", "chandan", "chandanevil"], "nonMatches": ["chandaaevil", "chandaAevil", "chandbnevil", "chandBnevil", "chanaanevil", "chanAanevil", "chaadanevil", "chaAdanevil", "chbndanevil", "chBndanevil", "caandanevil", "cAandanevil", "ahandanevil", "Ahandanevil"]}, {"regex": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b", "exceptionStackTrace": null, "matches": ["0.0.0.000", "0.0.0.0.0", "000.0.0.0", "0.0.0.0"], "nonMatches": ["0.0.0.0000", "0.0.0.", "0.0.0", "0000.0.0.0", ".0.0.0"]}, {"regex": "^(([+-]?)(?=\\d|\\.\\d)\\d*(\\.\\d*)?([Ee]([+-]?([12]?\\d\\d?|30[0-8])))?)?$", "exceptionStackTrace": null, "matches": ["-0.0", "-0.0e-20", "-0.0e-00", "-0.0e-100", "-0.0e200", "-0.0e+200", "-0.0E-200", "-0e-200", "-0.00e-200", "-0.e-200", "-00.0e-200", "-.0e-200", "0.0e-200", "+0.0e-200", "", "-0.0e-300", "-0.0e-200"], "nonMatches": ["-0.0e-309", "-0.0e-200-0.0e-200", "-0.0e-200e-200", "-0.0e-2000", "-0.0e-2200", "-0.0e-000", "-0.0e--200", "-0.0a-200", "-0.0A-200", "-0.0.0e-200", "--0.0e-200"]}, {"regex": "http://www.google.com", "exceptionStackTrace": null, "matches": ["http://wwwagoogleAcom", "http://wwwagoogle:com", "http://wwwagoogle0com", "http://wwwagoogle/com", "http://wwwagoogle com", "http://wwwAgoogleacom", "http://www:googleacom", "http://www0googleacom", "http://www/googleacom", "http://www googleacom", "http://wwwagoogleacom"], "nonMatches": []}, {"regex": "dgfs", "exceptionStackTrace": null, "matches": ["dgfs"], "nonMatches": []}, {"regex": "^(0)$|^([1-9][0-9]*)$", "exceptionStackTrace": null, "matches": ["100", "1", "10", "0"], "nonMatches": ["00"]}, {"regex": "^[-]?([1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|\\.[0-9]{1,2})$", "exceptionStackTrace": null, "matches": ["-.00", "-0", "-0.00", "-0.", "-10", "-10.00", "-10.", "-100.0", "-1.0", "-110.0", "10.0", ".0", "0", "1", "-.0", "-0.0", "-10.0"], "nonMatches": ["-.000", "-.", "-0.0.0", "-0.000", "-10.0.0", "-10.000", "-00.0", "--10.0"]}, {"regex": "^[-|\\+]?[0-9]{1,3}(\\,[0-9]{3})*$|^[-|\\+]?[0-9]+$", "exceptionStackTrace": null, "matches": ["+00", "|0", "-0", "+0,000,000", "+000,000", "0,000", "|0,000", "-0,000", "0", "+0", "+0,000"], "nonMatches": ["+", "++0", "+0,0000", "+0,00", "+0000,000", "+,000", "++0,000"]}, {"regex": "^(((\\+?64\\s*[-\\.]?[3-9]|\\(?0[3-9]\\)?)\\s*[-\\.]?\\d{3}\\s*[-\\.]?\\d{4})|((\\+?64\\s*[-\\.\\(]?2\\d{1}[-\\.\\)]?|\\(?02\\d{1}\\)?)\\s*[-\\.]?\\d{3}\\s*[-\\.]?\\d{3,5})|((\\+?64\\s*[-\\.]?[-\\.\\(]?800[-\\.\\)]?|[-\\.\\(]?0800[-\\.\\)]?)\\s*[-\\.]?\\d{3}\\s*[-\\.]?(\\d{2}|\\d{5})))$", "exceptionStackTrace": null, "matches": ["(0800 .000 .00", "(0800. .000 .00", "(0800- .000 .00", "0800) .000 .00", ".0800) .000 .00", "-0800) .000 .00", "+64 .(800) .000 00", "+64 .(800) .000 -00", "+64 .(800) .000  .00", "+64 .(800) .000.00", "+64 .(800) 000 .00", "+64 .(800) -000 .00", "+64 .(800)  .000 .00", "+64 .(800).000 .00", "+64 .(800 .000 .00", "+64 .(800. .000 .00", "+64 .(800- .000 .00", "+64 .800) .000 .00", "+64 ..800) .000 .00", "+64 .-800) .000 .00", "+64 (800) .000 .00", "+64 -(800) .000 .00", "+64  .(800) .000 .00", "+64.(800) .000 .00", "64 .(800) .000 .00", "(020 .000 .000", "020) .000 .000", "+64 (20) .000 .00000", "+64 (20) .000 000", "+64 (20) .000 -000", "+64 (20) .000  .000", "+64 (20) .000.000", "+64 (20) 000 .000", "+64 (20) -000 .000", "+64 (20)  .000 .000", "+64 (20).000 .000", "+64 (20 .000 .000", "+64 (20. .000 .000", "+64 (20- .000 .000", "+64 20) .000 .000", "+64 .20) .000 .000", "+64 -20) .000 .000", "+64  (20) .000 .000", "+64(20) .000 .000", "64 (20) .000 .000", "(03 .000 .0000", "03) .000 .0000", "+64 .3 .000 0000", "+64 .3 .000 -0000", "+64 .3 .000  .0000", "+64 .3 .000.0000", "+64 .3 000 .0000", "+64 .3 -000 .0000", "+64 .3  .000 .0000", "+64 .3.000 .0000", "+64 3 .000 .0000", "+64 -3 .000 .0000", "+64  .3 .000 .0000", "+64.3 .000 .0000", "64 .3 .000 .0000", "080000000", "6480000000000", "6480000000", "020000000", "6420000000", "030000000", "6430000000", "(0800) .000 .00", "+64 .(800) .000 .00000", "+64 .(800) .000 .00", "(020) .000 .000", "+64 (20) .000 .000", "(03) .000 .0000", "+64 .3 .000 .0000"], "nonMatches": ["(0800)) .000 .00", "((0800) .000 .00", "+64 .(800) .000 .000000", "+64 .(800) .000 .0000", "+64 .(800) .000 .000", "+64 .(800) .000 .0", "+64 .(800) .000 ..00", "+64 .(800) .0000 .00", "+64 .(800) .00 .00", "+64 .(800) ..000 .00", "+64 .(800)) .000 .00", "+64 .((800) .000 .00", "+64 ..(800) .000 .00", "++64 .(800) .000 .00", "(020)) .000 .000", "(0200) .000 .000", "(02) .000 .000", "((020) .000 .000", "+64 (20) .000 .000000", "+64 (20) .000 .00", "+64 (20) .000 ..000", "+64 (20) .0000 .000", "+64 (20) .00 .000", "+64 (20) ..000 .000", "+64 (20)) .000 .000", "+64 (200) .000 .000", "+64 (2) .000 .000", "+64 ((20) .000 .000", "++64 (20) .000 .000", "(03)) .000 .0000", "(00) .000 .0000", "((03) .000 .0000", "+64 .3 .000 .00000", "+64 .3 .000 .000", "+64 .3 .000 ..0000", "+64 .3 .0000 .0000", "+64 .3 .00 .0000", "+64 .3 ..000 .0000", "+64 .0 .000 .0000", "+64 ..3 .000 .0000", "++64 .3 .000 .0000"]}, {"regex": " Escorts in Whitefield Bangalore", "exceptionStackTrace": null, "matches": [" Escorts in Whitefield Bangalore"], "nonMatches": []}, {"regex": "Independent Call Girls In Jaya Nagar", "exceptionStackTrace": null, "matches": ["Independent Call Girls In Jaya Nagar"], "nonMatches": []}, {"regex": "^\\s*\n(?&lt;signedNumber&gt;(\\+|\\-){0,1}((\\d*(\\.\\d+))|(\\d*)){1})\n(?&lt;unit&gt;((in)|(cm)|(mm)|(pt)){0,1})\n\\s*$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "Password=(?<Password>.*);.*=(?<Info>.*);.*=(?<User>.*);.*=(?<Catalog>.*);.*=(?<Data>.*)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<P"}, "matches": []}, {"regex": "(^(p[\\s|\\.|,]*|\n^post[\\s|\\.]*)(o[\\s|\\.|,]*|\noffice[\\s|\\.]*))|\n(^box[.|\\s]*\\d+)", "exceptionStackTrace": null, "matches": ["p,\noffice..", "p,\noffice", "p,\noffice|", "p,\noffice ", "p,o,,", "p,o", "p,o|", "p,o.", "p,o ", "p,,o,", "po,", "p|o,", "p.o,", "p o,", "p\noffice", "po", "p,\noffice.", "p,o,"], "nonMatches": ["\nbox|00", "\nbox|", "\nbox||0", "\nbox.0", "\nbox 0", "\npost..o,", "\nposto,", "\npost|o,", "\npost o,", "\nbox0", "\nposto", "\nbox|0", "\npost.o,"]}, {"regex": "^[_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@(?!co.uk)[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.(([0-9]{1,3})|([a-zA-Z]{2,3})|(aero|coop|info|museum|name))$", "exceptionStackTrace": null, "matches": ["evil.evil@evil.evil.AAA", "evil.evil@evil.evil.aA", "evil.evil@evil.evil.000", "evil.evil@evil.evil.evil.0", "evil.evil@evil.0", "evil.evil@evil.-.0", "evil.evil@evil.eVil.0", "evil.evil@evil.EVIL.0", "evil.evil@evil.ev4il.0", "evil.evil@evil.e.0", "evil.evil@evil.6.0", "evil.evil@-.evil.0", "evil.evil@eVil.evil.0", "evil.evil@EVIL.evil.0", "evil.evil@ev4il.evil.0", "evil.evil@e.evil.0", "evil.evil@6.evil.0", "evil.evil.evil@evil.evil.0", "evil@evil.evil.0", "evil.-@evil.evil.0", "evil.eVil@evil.evil.0", "evil.EVIL@evil.evil.0", "evil.ev_il@evil.evil.0", "evil.ev4il@evil.evil.0", "evil.e@evil.evil.0", "evil.6@evil.evil.0", "evil._@evil.evil.0", "-.evil@evil.evil.0", "eVil.evil@evil.evil.0", "EVIL.evil@evil.evil.0", "ev_il.evil@evil.evil.0", "ev4il.evil@evil.evil.0", "e.evil@evil.evil.0", "6.evil@evil.evil.0", "_.evil@evil.evil.0", "evil@evil.name", "evil@evil.museum", "evil@evil.info", "evil@evil.coop", "evil@evil.aero", "evil@evil.AA", "evil@evil.0", "evil.evil@evil.evil.name", "evil.evil@evil.evil.museum", "evil.evil@evil.evil.info", "evil.evil@evil.evil.coop", "evil.evil@evil.evil.aero", "evil.evil@evil.evil.AA", "evil.evil@evil.evil.0"], "nonMatches": ["evil.evil@evil.evil.AAAA", "evil.evil@evil.evil.A", "evil.evil@evil.evil.0000", "evil.evil@evil.evil.", "evil.evil@evil.@.0", "evil.evil@evil...0", "evil.evil@evil.ev_il.0", "evil.evil@evil.ev il.0", "evil.evil@evil. .0", "evil.evil@evil._.0", "evil.evil@evil..0", "evil.evil@@.evil.0", "evil.evil@..evil.0", "evil.evil@ev_il.evil.0", "evil.evil@ev il.evil.0", "evil.evil@ .evil.0", "evil.evil@_.evil.0", "evil.evil@.evil.0", "evil.@@evil.evil.0", "evil..@evil.evil.0", "evil.ev il@evil.evil.0", "evil. @evil.evil.0", "evil.@evil.evil.0", "@.evil@evil.evil.0", "..evil@evil.evil.0", "ev il.evil@evil.evil.0", " .evil@evil.evil.0", ".evil@evil.evil.0"]}, {"regex": "^(?=.{3,30}$)[A-Za-z0-9]+(?:\\s[A-Za-z0-9]+)+(?:\\s[A-Za-z0-9]+)?$", "exceptionStackTrace": null, "matches": ["evil evil eVil", "evil evil EVIL", "evil evil ev il", "evil evil ev4il", "evil evil e", "evil evil 6", "evil evil evil evil", "evil eVil evil", "evil EVIL evil", "evil ev il evil", "evil ev4il evil", "evil e evil", "evil 6 evil", "eVil evil evil", "EVIL evil evil", "ev il evil evil", "ev4il evil evil", "e evil evil", "6 evil evil", "evil evil", "evil evil evil"], "nonMatches": ["evil evil ev_il", "evil evil  ", "evil evil _", "evil evil ", "evil ev_il evil", "evil   evil", "evil _ evil", "evil  evil", "ev_il evil evil", "  evil evil", "_ evil evil", " evil evil"]}, {"regex": "^(?=.{3,30}$)[A-Za-z0-9]+(?:(\\\\s|@|#|&|_|)[A-Za-z0-9]+)?$", "exceptionStackTrace": null, "matches": ["evilevil", "evil\\seVil", "evil\\sEVIL", "evil\\sev4il", "evil\\se", "evil\\s6", "eVil\\sevil", "EVIL\\sevil", "ev4il\\sevil", "e\\sevil", "6\\sevil", "evil", "evil_evil", "evil&evil", "evil#evil", "evil@evil", "evil\\sevil"], "nonMatches": ["evil__evil", "evil\\sevil\\sevil", "evil\\sev_il", "evil\\sev il", "evil\\s ", "evil\\s_", "evil\\s", "ev_il\\sevil", "ev il\\sevil", " \\sevil", "_\\sevil", "\\sevil"]}, {"regex": "^[a-zA-Z0-9_.-@$]*$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: .-@"}, "matches": [], "nonMatches": []}, {"regex": "^\\+(((i(?&#39;id&#39;.*?))|(m(?&#39;modified&#39;\\d+))|(?&#39;retr&#39;r)|(s(?&#39;size&#39;\\d+))|(?&#39;cwd&#39;\\/)|(up(?&#39;up&#39;\\d{3}))),)*\\t(?&#39;name&#39;.*?)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^(\\+27|27)?(\\()?0?[87][23467](\\))?( |-|\\.|_)?(\\d{3})( |-|\\.|_)?(\\d{4})", "exceptionStackTrace": null, "matches": ["+27(077) 000 00000", "+27(077) 0000000", "+27(077)000 0000", "+27(077 000 0000", "+27(076) 000 0000", "+27(074) 000 0000", "+27(073) 000 0000", "+27(072) 000 0000", "+27(087) 000 0000", "+27(77) 000 0000", "+27077) 000 0000", "(077) 000 0000", "770000000", "27(077) 000 0000", "+27(077)_000 0000", "+27(077).000 0000", "+27(077)-000 0000", "+27(077) 000_0000", "+27(077) 000.0000", "+27(077) 000-0000", "+27(077) 000 0000"], "nonMatches": ["+27(077) 000 000", "+27(077) 000  0000", "+27(077) 0000 0000", "+27(077) 00 0000", "+27(077)  000 0000", "+27(077)) 000 0000", "+27(070) 000 0000", "+27(007) 000 0000", "+27(0077) 000 0000", "+27((077) 000 0000", "+27+27(077) 000 0000"]}, {"regex": "^[a-z0-9][a-z0-9_\\.-]{0,}[a-z0-9]@[a-z0-9][a-z0-9_\\.-]{0,}[a-z0-9][\\.][a-z0-9]{2,4}$", "exceptionStackTrace": null, "matches": ["0evil0@0evil0.0000", "0evil0@0evil0.a0", "0evil0@0evila.00", "0evil0@0.0.00", "0evil0@0-0.00", "0evil0@0ev_il0.00", "0evil0@0ev4il0.00", "0evil0@0e0.00", "0evil0@060.00", "0evil0@0_0.00", "0evil0@00.00", "0evil0@aevil0.00", "0evila@0evil0.00", "0.0@0evil0.00", "0-0@0evil0.00", "0ev_il0@0evil0.00", "0ev4il0@0evil0.00", "0e0@0evil0.00", "060@0evil0.00", "0_0@0evil0.00", "00@0evil0.00", "aevil0@0evil0.00", "00@00.00", "0evil0@0evil0.00"], "nonMatches": ["0evil0@0evil0.00000", "0evil0@0evil0.0", "0evil0@0@0.00", "0evil0@0eVil0.00", "0evil0@0EVIL0.00", "0evil0@0ev il0.00", "0evil0@0 0.00", "0@0@0evil0.00", "0eVil0@0evil0.00", "0EVIL0@0evil0.00", "0ev il0@0evil0.00", "0 0@0evil0.00"]}, {"regex": "((mailto\\:|(news|(ht|f)tp(s?))\\://){1}\\S+)", "exceptionStackTrace": null, "matches": ["mailto::", "mailto:/", "mailto:eVil", "mailto:EVIL", "mailto:ev_il", "mailto:ev il", "mailto:ev4il", "mailto:e", "mailto:6", "mailto:_", "mailto:mailto:evil", "ftp://evil", "http://evil", "ftps://evil", "https://evil", "news://evil", "mailto:evil"], "nonMatches": ["httpss://evil", "mailto: ", "mailto:", "evil"]}, {"regex": "https://www.seremolynbuy.com/adelina-cream/", "exceptionStackTrace": null, "matches": ["https://wwwaseremolynbuyAcom/adelina-cream/", "https://wwwaseremolynbuy:com/adelina-cream/", "https://wwwaseremolynbuy0com/adelina-cream/", "https://wwwaseremolynbuy/com/adelina-cream/", "https://wwwaseremolynbuy-com/adelina-cream/", "https://wwwaseremolynbuy com/adelina-cream/", "https://wwwAseremolynbuyacom/adelina-cream/", "https://www:seremolynbuyacom/adelina-cream/", "https://www0seremolynbuyacom/adelina-cream/", "https://www/seremolynbuyacom/adelina-cream/", "https://www-seremolynbuyacom/adelina-cream/", "https://www seremolynbuyacom/adelina-cream/", "https://wwwaseremolynbuyacom/adelina-cream/"], "nonMatches": []}, {"regex": "^(\\d{4}-((0[1-9]|1[012])-(0[1-9]|1\\d|2[0-8])|(0[13456789]|1[012])-(29|30)|(0[13578]|1[02])-31)|(\\d{2}[02468][048]|[13579][26])-02-29) (0[0-9]|1[0-9]|2[0-4]):(60|[0-5][0-9]):(60|[0-5][0-9])$", "exceptionStackTrace": null, "matches": ["92-02-29 00:60:60", "76-02-29 00:60:60", "56-02-29 00:60:60", "36-02-29 00:60:60", "16-02-29 00:60:60", "0084-02-29 00:60:60", "0080-02-29 00:60:60", "0068-02-29 00:60:60", "0048-02-29 00:60:60", "0028-02-29 00:60:60", "0008-02-29 00:60:60", "0000-10-31 00:60:60", "0000-07-31 00:60:60", "0000-05-31 00:60:60", "0000-03-31 00:60:60", "0000-01-31 00:60:60", "0000-11-29 00:60:60", "0000-10-29 00:60:60", "0000-08-29 00:60:60", "0000-07-29 00:60:60", "0000-06-29 00:60:60", "0000-05-29 00:60:60", "0000-04-29 00:60:60", "0000-03-29 00:60:60", "0000-11-01 00:60:60", "0000-10-01 00:60:60", "0000-01-29 00:60:60", "96-02-29 00:60:60", "0088-02-29 00:60:60", "0000-12-31 00:60:60", "0000-08-31 00:60:60", "0000-12-29 00:60:60", "0000-09-30 00:60:60", "0000-09-29 00:60:60", "0000-12-01 00:60:60", "0000-01-20 00:60:60", "0000-01-10 00:60:60", "0000-01-01 20:60:60", "0000-01-01 10:60:60", "0000-01-01 00:00:60", "0000-01-01 00:60:00", "0000-01-01 00:60:60"], "nonMatches": ["90-02-29 00:60:60", "06-02-29 00:60:60", "0081-02-29 00:60:60", "0018-02-29 00:60:60", "00088-02-29 00:60:60", "088-02-29 00:60:60", "0000-11-31 00:60:60", "0000-00-31 00:60:60", "0000-13-29 00:60:60", "0000-00-29 00:60:60", "0000-13-01 00:60:60", "0000-01-01 25:60:60", "0000-01-00 00:60:60", "0000-00-01 00:60:60", "00000-01-01 00:60:60", "000-01-01 00:60:60"]}, {"regex": "^((100)|(\\d{0,2}))$", "exceptionStackTrace": null, "matches": ["00", "", "0", "100"], "nonMatches": ["000"]}, {"regex": "&lt;a\\s*.*?href\\s*=\\s*[&#39;&quot;](?!http:\\/\\/).*?&gt;(.*?)&lt;\\/a&gt;", "exceptionStackTrace": null, "matches": ["&lt;a evilhref = ;evil&gt;=&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;;&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;:&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;/&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;&&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;#&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;eVil&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;EVIL&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;ev_il&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;ev il&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;ev4il&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;e&lt;/a&gt;", "&lt;a evilhref = ;evil&gt; &lt;/a&gt;", "&lt;a evilhref = ;evil&gt;6&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;_&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;&lt;/a&gt;", "&lt;a evilhref = ;=&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;;&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;:&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;/&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;&&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;#&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;eVil&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;EVIL&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;ev_il&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;ev il&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;ev4il&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;e&gt;evil&lt;/a&gt;", "&lt;a evilhref = ; &gt;evil&lt;/a&gt;", "&lt;a evilhref = ;6&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;_&gt;evil&lt;/a&gt;", "&lt;a evilhref = ;&gt;evil&lt;/a&gt;", "&lt;a evilhref = uevil&gt;evil&lt;/a&gt;", "&lt;a evilhref = tevil&gt;evil&lt;/a&gt;", "&lt;a evilhref = qevil&gt;evil&lt;/a&gt;", "&lt;a evilhref = oevil&gt;evil&lt;/a&gt;", "&lt;a evilhref = 9evil&gt;evil&lt;/a&gt;", "&lt;a evilhref = 3evil&gt;evil&lt;/a&gt;", "&lt;a evilhref = &evil&gt;evil&lt;/a&gt;", "&lt;a evilhref = #evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =  ;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref =;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref  = ;evil&gt;evil&lt;/a&gt;", "&lt;a evilhref= ;evil&gt;evil&lt;/a&gt;", "&lt;a =href = ;evil&gt;evil&lt;/a&gt;", "&lt;a ;href = ;evil&gt;evil&lt;/a&gt;", "&lt;a :href = ;evil&gt;evil&lt;/a&gt;", "&lt;a /href = ;evil&gt;evil&lt;/a&gt;", "&lt;a &href = ;evil&gt;evil&lt;/a&gt;", "&lt;a #href = ;evil&gt;evil&lt;/a&gt;", "&lt;a eVilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;a EVILhref = ;evil&gt;evil&lt;/a&gt;", "&lt;a ev_ilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;a ev ilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;a ev4ilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;a ehref = ;evil&gt;evil&lt;/a&gt;", "&lt;a  href = ;evil&gt;evil&lt;/a&gt;", "&lt;a 6href = ;evil&gt;evil&lt;/a&gt;", "&lt;a _href = ;evil&gt;evil&lt;/a&gt;", "&lt;a href = ;evil&gt;evil&lt;/a&gt;", "&lt;a  evilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;aevilhref = ;evil&gt;evil&lt;/a&gt;", "&lt;ahref=;&gt;&lt;/a&gt;", "&lt;a evilhref = ;evil&gt;evil&lt;/a&gt;"], "nonMatches": ["&lt;a evilhref = aevil&gt;evil&lt;/a&gt;", "&lt;a evilhref = 0evil&gt;evil&lt;/a&gt;"]}, {"regex": "(^0?[1-9]|^1[0-2])\\/(0?[1-9]|[1-2][0-9]|3[0-1])\\/(19|20)?[0-9][0-9](\\s(((0?[0-9]|1[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?)|((0?[0-9]|1[0-2]):[0-5][0-9](:[0-5][0-9])?\\s(AM|PM))))?$", "exceptionStackTrace": null, "matches": ["01/01/1900 00:00 AM", "01/01/1900 0:00:00 AM", "01/01/1900", "01/01/1900 00:00", "01/01/1900 0:00:00", "01/01/00 00:00:00", "01/1/1900 00:00:00", "1/01/1900 00:00:00", "10/1/00", "1/30/00", "1/10/00", "1/1/00", "10/01/1900 00:00:00", "01/30/1900 00:00:00", "01/10/1900 00:00:00", "01/01/2000 00:00:00", "01/01/1900 10:00:00 AM", "01/01/1900 00:00:00 PM", "01/01/1900 00:00:00 AM", "01/01/1900 20:00:00", "01/01/1900 10:00:00", "01/01/1900 00:00:00"], "nonMatches": ["13/01/1900 00:00:00", "01/32/1900 00:00:00", "01/01/1900 13:00:00 AM", "01/01/1900 00:00:00:00 AM", "01/01/1900 00:00:60 AM", "01/01/1900 00:60:00 AM", "01/01/1900 000:00:00 AM", "01/01/1900 24:00:00", "01/01/1900 00:00:00 00:00:00", "01/01/1900 00:00:00:00", "01/01/1900 00:00:60", "01/01/1900 00:60:00", "01/01/1900 000:00:00", "01/01/191900 00:00:00", "01/00/1900 00:00:00", "01/001/1900 00:00:00", "00/01/1900 00:00:00", "001/01/1900 00:00:00"]}, {"regex": "(?:(?:(?<Feet>\\d+)[ ]*\\&#39;){0,1}[ ]*(?<WholeInches>\\d*(?![/\\w])){0,1}(?:[ ,\\-]){0,1}(?<Fraction>\\d*\\/\\d*){0,1}(?<Decimal>\\.\\d*){0,1}\\&quot;)|(?:(?<Feet>\\d+)[ ]*\\&#39;[ ]*){1}", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<F"}, "matches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number ", "exceptionStackTrace": null, "matches": ["Quicken Support Number ,Quicken Support , Quicken , Quicken Phone Number "], "nonMatches": []}, {"regex": "^\\(\\d{3}\\) ?\\d{3}( |-)?\\d{4}|^\\d{3}( |-)?\\d{3}( |-)?\\d{4}", "exceptionStackTrace": null, "matches": ["000 000 00000", "000 0000000", "000000 0000", "(000) 000 00000", "(000) 0000000", "(000)000 0000", "0000000000", "(000)0000000", "000-000 0000", "000 000-0000", "000 000 0000", "(000) 000-0000", "(000) 000 0000"], "nonMatches": ["000 000 000", "000 000  0000", "000 0000 0000", "000 00 0000", "000  000 0000", "0000 000 0000", "00 000 0000", "(000) 000 000", "(000) 000  0000", "(000) 0000 0000", "(000) 00 0000", "(000)  000 0000", "(0000) 000 0000", "(00) 000 0000"]}, {"regex": "^(?!000)([0-6]\\d{2}|7([0-6]\\d|7[012])) ([ -])? (?!00)\\d\\d([ -|])? (?!0000)\\d{4}$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range:  -|"}, "matches": [], "nonMatches": []}, {"regex": "Facebook Tech Support", "exceptionStackTrace": null, "matches": ["Facebook Tech Support"], "nonMatches": []}, {"regex": "^(((0[13578]|10|12)([-./])(0[1-9]|[12][0-9]|3[01])([-./])(\\d{4}))|((0[469]|11)([-./])([0][1-9]|[12][0-9]|30)([-./])(\\d{4}))|((02)([-./])(0[1-9]|1[0-9]|2[0-8])([-./])(\\d{4}))|((02)(\\.|-|\\/)(29)([-./])([02468][048]00))|((02)([-./])(29)([-./])([13579][26]00))|((02)([-./])(29)([-./])([0-9][0-9][0][48]))|((02)([-./])(29)([-./])([0-9][0-9][2468][048]))|((02)([-./])(29)([-./])([0-9][0-9][13579][26])))$", "exceptionStackTrace": null, "matches": ["02/29/0092", "02/29/0076", "02/29/0056", "02/29/0036", "02/29/0016", "02/29.0096", "02/29-0096", "02.29/0096", "02-29/0096", "02/29/0084", "02/29/0080", "02/29/0068", "02/29/0048", "02/29/0028", "02/29.0088", "02/29-0088", "02.29/0088", "02-29/0088", "02/29/0004", "02/29.0008", "02/29-0008", "02.29/0008", "02-29/0008", "02/29/9200", "02/29/7600", "02/29/5600", "02/29/3600", "02/29/1600", "02/29.9600", "02/29-9600", "02.29/9600", "02-29/9600", "02.29/8400", "02.29/8000", "02.29/6800", "02.29/4800", "02.29/2800", "02.29/0800", "02.29.8800", "02.29-8800", "02/29/0000", "02/01.0000", "02/01-0000", "02.01/0000", "02-01/0000", "09/10/0000", "09/01.0000", "09/01-0000", "09.01/0000", "09-01/0000", "06/01/0000", "04/01/0000", "08/30/0000", "08/10/0000", "08/01.0000", "08/01-0000", "08.01/0000", "08-01/0000", "07/01/0000", "05/01/0000", "03/01/0000", "01/01/0000", "02/29/0096", "02/29/0088", "02/29/0008", "02/29/9600", "02/29/8800", "02-29/8800", "02.29/8800", "02/20/0000", "02/10/0000", "02/01/0000", "11/01/0000", "09/30/0000", "09/20/0000", "09/01/0000", "12/01/0000", "10/01/0000", "08/31/0000", "08/20/0000", "08/01/0000"], "nonMatches": ["02/29/0090", "02/29/0006", "02/29/0081", "02/29/9000", "02/29/0600", "02.29/8100", "02.29/1800", "02/01/00000", "02/01/000", "02/00/0000", "09/01/00000", "09/01/000", "09/00/0000", "08/32/0000", "08/01/00000", "08/01/000", "08/00/0000", "00/01/0000"]}, {"regex": "grdgrt", "exceptionStackTrace": null, "matches": ["grdgrt"], "nonMatches": []}, {"regex": "([a-zA-Z0-9\\\\-\\\\$\\\\s\\\\.#@%^*(){}|:;,?+=/]*[<>&#39;\\&quot;!&\\\\[\\\\]]+((\\\\s|)CDATA(\\\\s|))*[a-zA-Z0-9<>&#39;\\&quot;!&\\\\[\\\\]\\\\-\\\\$\\\\s\\\\.#@%^*(){}|:;,?+=/]*)+", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "nothing to repeat"}, "matches": []}, {"regex": "^\\$?(\\d{1,3}(\\,\\d{3})*|(\\d+))(\\.\\d{0,2})?$", "exceptionStackTrace": null, "matches": ["$00.0", "$0,000", "$0,000.00", "$0,000.", "$0,000,000.0", "$000,000.0", "0,000.0", "0", "$0.0", "$0,000.0"], "nonMatches": ["$.0", "$0,000.0.0", "$0,000.000", "$0,0000.0", "$0,00.0", "$0000,000.0", "$,000.0", "$$0,000.0"]}, {"regex": "^\\$?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$", "exceptionStackTrace": null, "matches": ["$", "$.00", "$0", "$0.00", "$0.", "$10", "$10.00", "$10.", "$100.0", "$1.0", "$110.0", "$10,000", "$10,000.00", "$10,000.", "$10,000,000.0", "$100,000.0", "$1,000.0", "$110,000.0", "10,000.0", "", "0", "1", "$.0", "$0.0", "$10.0", "$10,000.0"], "nonMatches": ["$.0.0", "$.000", "$.", "$0.0.0", "$0.000", "$10.0.0", "$10.000", "$00.0", "$10,000.0.0", "$10,000.000", "$10,0000.0", "$10,00.0", "$1000,000.0", "$0,000.0", "$00,000.0", "$$10,000.0"]}, {"regex": "( xmlns:.*=[&quot;,&#39;].*[&quot;,&#39;])|( xmlns=[&quot;,&#39;].*[&quot;,&#39;])", "exceptionStackTrace": null, "matches": [" xmlns=;evilu", " xmlns=;evilt", " xmlns=;evilq", " xmlns=;evilo", " xmlns=;evil9", " xmlns=;evil3", " xmlns=;evil,", " xmlns=;evil&", " xmlns=;evil#", " xmlns=;=;", " xmlns=;;;", " xmlns=;:;", " xmlns=;,;", " xmlns=;&;", " xmlns=;#;", " xmlns=;eVil;", " xmlns=;EVIL;", " xmlns=;ev_il;", " xmlns=;ev il;", " xmlns=;ev4il;", " xmlns=;e;", " xmlns=; ;", " xmlns=;6;", " xmlns=;_;", " xmlns=uevil;", " xmlns=tevil;", " xmlns=qevil;", " xmlns=oevil;", " xmlns=9evil;", " xmlns=3evil;", " xmlns=,evil;", " xmlns=&evil;", " xmlns=#evil;", " xmlns:evil=;evilu", " xmlns:evil=;evilt", " xmlns:evil=;evilq", " xmlns:evil=;evilo", " xmlns:evil=;evil9", " xmlns:evil=;evil3", " xmlns:evil=;evil,", " xmlns:evil=;evil&", " xmlns:evil=;evil#", " xmlns:evil=;=;", " xmlns:evil=;;;", " xmlns:evil=;:;", " xmlns:evil=;,;", " xmlns:evil=;&;", " xmlns:evil=;#;", " xmlns:evil=;eVil;", " xmlns:evil=;EVIL;", " xmlns:evil=;ev_il;", " xmlns:evil=;ev il;", " xmlns:evil=;ev4il;", " xmlns:evil=;e;", " xmlns:evil=; ;", " xmlns:evil=;6;", " xmlns:evil=;_;", " xmlns:evil=;;", " xmlns:evil=uevil;", " xmlns:evil=tevil;", " xmlns:evil=qevil;", " xmlns:evil=oevil;", " xmlns:evil=9evil;", " xmlns:evil=3evil;", " xmlns:evil=,evil;", " xmlns:evil=&evil;", " xmlns:evil=#evil;", " xmlns:==;evil;", " xmlns:;=;evil;", " xmlns::=;evil;", " xmlns:,=;evil;", " xmlns:&=;evil;", " xmlns:#=;evil;", " xmlns:eVil=;evil;", " xmlns:EVIL=;evil;", " xmlns:ev_il=;evil;", " xmlns:ev il=;evil;", " xmlns:ev4il=;evil;", " xmlns:e=;evil;", " xmlns: =;evil;", " xmlns:6=;evil;", " xmlns:_=;evil;", " xmlns:=;evil;", " xmlns=;;", " xmlns:=;;", " xmlns=;evil;", " xmlns:evil=;evil;"], "nonMatches": [" xmlns=;evila", " xmlns=;evil0", " xmlns=aevil;", " xmlns=0evil;", " xmlns:evil=;evila", " xmlns:evil=;evil0", " xmlns:evil=aevil;", " xmlns:evil=0evil;"]}, {"regex": "(^\\d{1,5}$|^\\d{1,5}\\.\\d{1,2}$)", "exceptionStackTrace": null, "matches": ["0.00", "00000.0", "00000", "0.0", "0"], "nonMatches": ["0.000", "0.", "000000.0", ".0", "000000", ""]}, {"regex": "Fluffy yarn for sale", "exceptionStackTrace": null, "matches": ["Fluffy yarn for sale"], "nonMatches": []}, {"regex": "(?<raw_message>\\:(?<source>((?<nick>[^!]+)![~]{0,1}(?<user>[^@]+)@)?(?<host>[^\\s]+)) (?<command>[^\\s]+)( )?(?<parameters>[^:]+){0,1}(:)?(?<text>[^\\r^\\n]+)?)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<r"}, "matches": []}, {"regex": "^(010|011|012)[0-9]{7}$", "exceptionStackTrace": null, "matches": ["0120000000", "0110000000", "0100000000"], "nonMatches": ["01000000000", "010000000"]}, {"regex": "(\\(?\\+44\\)?\\s?(1|2|3|7|8)\\d{3}|\\(?(01|02|03|07|08)\\d{3}\\)?)\\s?\\d{3}\\s?\\d{3}|(\\(?\\+44\\)?\\s?(1|2|3|5|7|8)\\d{2}|\\(?(01|02|03|05|07|08)\\d{2}\\)?)\\s?\\d{3}\\s?\\d{4}|(\\(?\\+44\\)?\\s?(5|9)\\d{2}|\\(?(05|09)\\d{2}\\)?)\\s?\\d{3}\\s?\\d{3}", "exceptionStackTrace": null, "matches": ["(0500 000 000", "((0500) 000 000", "0500) 000 000", "(+44) 500 000000", "(+44) 500000 000", "(+44)500 000 000", "(+44 500 000 000", "((+44) 500 000 000", "+44) 500 000 000", "(0100 000 0000", "(01000) 000 0000", "((0100) 000 0000", "0100) 000 0000", "(+44) 100 000 00000", "(+44) 100 0000000", "(+44) 100000 0000", "(+44)100 000 0000", "(+44 100 000 0000", "((+44) 100 000 0000", "+44) 100 000 0000", "(01000 000 000", "((01000) 000 000", "01000) 000 000", "(+44) 1000 000 0000", "(+44) 1000 000000", "(+44) 1000000 000", "(+44)1000 000 000", "(+44 1000 000 000", "((+44) 1000 000 000", "+44) 1000 000 000", "0900000000", "0500000000", "+44900000000", "+44500000000", "05000000000", "+445000000000", "08000000000", "07000000000", "03000000000", "02000000000", "01000000000", "+448000000000", "+447000000000", "+443000000000", "+442000000000", "+441000000000", "(0900) 000 000", "(0500) 000 000", "(+44) 900 000 000", "(+44) 500 000 000", "(0800) 000 0000", "(0700) 000 0000", "(0500) 000 0000", "(0300) 000 0000", "(0200) 000 0000", "(0100) 000 0000", "(+44) 800 000 0000", "(+44) 700 000 0000", "(+44) 500 000 0000", "(+44) 300 000 0000", "(+44) 200 000 0000", "(+44) 100 000 0000", "(08000) 000 000", "(07000) 000 000", "(03000) 000 000", "(02000) 000 000", "(01000) 000 000", "(+44) 8000 000 000", "(+44) 7000 000 000", "(+44) 3000 000 000", "(+44) 2000 000 000", "(+44) 1000 000 000"], "nonMatches": ["(0500)) 000 000", "(05000) 000 000", "(050) 000 000", "(+44) 500 000 00", "(+44) 500 000  000", "(+44) 500 0000 000", "(+44) 500 00 000", "(+44) 500  000 000", "(+44) 5000 000 000", "(+44) 50 000 000", "(+44)  500 000 000", "(+44)) 500 000 000", "(0100)) 000 0000", "(010) 000 0000", "(+44) 100 000  0000", "(+44) 100 0000 0000", "(+44) 100 00 0000", "(+44) 100  000 0000", "(+44) 10 000 0000", "(+44)  100 000 0000", "(+44)) 100 000 0000", "(01000)) 000 000", "(010000) 000 000", "(0100) 000 000", "(+44) 1000 000 00", "(+44) 1000 000  000", "(+44) 1000 0000 000", "(+44) 1000 00 000", "(+44) 1000  000 000", "(+44) 10000 000 000", "(+44) 100 000 000", "(+44)  1000 000 000", "(+44)) 1000 000 000"]}, {"regex": "\\\\\\\\\\w+?(?:\\\\[\\w\\s$]+)+", "exceptionStackTrace": null, "matches": ["\\\\evil\\evil\\evil", "\\\\evil\\$", "\\\\evil\\eVil", "\\\\evil\\EVIL", "\\\\evil\\ev_il", "\\\\evil\\ev il", "\\\\evil\\ev4il", "\\\\evil\\e", "\\\\evil\\ ", "\\\\evil\\6", "\\\\evil\\_", "\\\\eVil\\evil", "\\\\EVIL\\evil", "\\\\ev_il\\evil", "\\\\ev4il\\evil", "\\\\e\\evil", "\\\\6\\evil", "\\\\_\\evil", "\\\\evil\\evil"], "nonMatches": ["\\\\evil", "\\\\evil\\\\", "\\\\evil\\", "\\\\ev il\\evil", "\\\\ \\evil", "\\\\\\evil"]}, {"regex": "((\\(\\d{3,4}\\)|\\d{3,4}-)\\d{4,9}(-\\d{1,5}|\\d{0}))|(\\d{4,12})", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (pointless repeat): pointless repeat quantifier {0}"}, "matches": [], "nonMatches": []}, {"regex": "^\\d+((\\.|\\,)\\d+)?$", "exceptionStackTrace": null, "matches": ["0.00", "00.0", "0", "0,0", "0.0"], "nonMatches": ["0.0.0", "0.", ".0"]}, {"regex": "<font[a-zA-Z0-9_\\^\\$\\.\\|\\{\\[\\}\\]\\(\\)\\*\\+\\?\\\\~`!@#%&-=;:&#39;&quot;,/\\n\\s]*>", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^((?:[A-HJ-PR-Y][A-HJ-PR-Y]\\s?(?:0[2-9]|[1-9][0-9])\\s?[A-HJ-PR-Z]{3})|(?:[A-Z](?:[IZ][A-Z]|[A-Z][IZ])\\s?\\d{1,4})|(?:[A-HJ-NP-TV-Y]\\s?\\d{1,3}\\s?[A-Z]{3})|(?:[A-Z]{3}\\s?\\d{1,3}\\s?[A-HJ-NPR-TV-Y])|(?:\\d{1,3}\\s?[A-HJ-Y]{1,3}|[A-HJ-Y]{1,3}\\s?\\d{1,3})|(?:\\d{1,4}\\s?(?:[IZ][A-Z]|[A-Z][IZ]))|(?:[A-Z]{1,2}\\s?\\d{1,4}))$", "exceptionStackTrace": null, "matches": ["A 0000", "AA 0", "0 AI", "0 IA", "0 AA", "0000 ZA", "J 0000", "J 000", "JJJ 0", "I 0", "0 JJJ", "0 A", "000 J", "AAA 0 V", "AAA 0 R", "AAA 0 J", "AAA 0 A", "AAA 0P", "AAA 000 P", "AAA0 P", "V 0AAA", "V 000 AAA", "V0 AAA", "P 0 AAA", "J 0 AAA", "A 0 AAA", "AAI 0", "AZA 0000", "AIA 0", "AAA 0", "RR 02 JRR", "RR 02 ARR", "RR 02RRR", "RR02 RRR", "RJ 02 RRR", "RA 02 RRR", "JR 02 RRR", "AR 02 RRR", "A0", "0AZ", "0ZA", "J0", "0J", "AAA0P", "V0AAA", "AAZ0", "AZA0", "RR10RRR", "RR02RRR", "A 0", "0 AZ", "0 ZA", "J 0", "0 J", "AAA 0 P", "V 0 AAA", "AAZ 0", "AZA 0", "RR 10 RRR", "RR 02 RRR"], "nonMatches": ["A 00000", "A ", "A  0", "0  ZA", "00000 ZA", " ZA", "J ", "J  0", "JJJJ 0", " 0", "0 JJJJ", "0 ", "0 I", "0  J", "0000 J", " J", "AAA 0 I", "AAA 0  P", "AAA 0000 P", "AAA  P", "AAA  0 P", "AAAA 0 P", "AA 0 P", "V 0 AAAA", "V 0 AA", "V 0  AAA", "V 0000 AAA", "V  AAA", "V  0 AAA", "I 0 AAA", "AZA 00000", "AZA ", "AZA  0", "RR 02 RRRR", "RR 02 RR", "RR 02 IRR", "RR 02  RRR", "RR 00 RRR", "RR  02 RRR", "RI 02 RRR", "IR 02 RRR"]}, {"regex": "^(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?$", "exceptionStackTrace": null, "matches": ["00:00", "00:00:0", "00:0:00", "0:00:00", "20:0", "0:0", "20:00:00", "00:00:00"], "nonMatches": ["24:00:00", "00:00:00:00", "00:00:000", "00:00:60", "00:000:00", "00:60:00", "000:00:00"]}, {"regex": "(^[A-Z&#192;-&#220;]{1}[a-z&#224;-&#252;&#39;]+\\s[a-zA-Z&#224;-&#252;&#192;-&#220;]+((([\\s\\.&#39;])|([a-z&#224;-&#252;&#39;]+))|[a-z&#224;-&#252;&#39;]+[a-zA-Z&#224;-&#252;&#192;-&#220;&#39;]+))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character range ;-&"}, "matches": []}, {"regex": "(^((((0[1-9])|([1-2][0-9])|(3[0-1]))|([1-9]))\\x2F(((0[1-9])|(1[0-2]))|([1-9]))\\x2F(([0-9]{2})|(((19)|([2]([0]{1})))([0-9]{2}))))$)", "exceptionStackTrace": null, "matches": ["1/01/00", "30/01/00", "10/01/00", "01/1/00", "01/10/00", "01/01/2000", "01/01/1900", "01/01/00"], "nonMatches": ["0/01/00", "32/01/00", "01/0/00", "01/13/00", "01/01/20000", "01/01/200", "01/01/19000", "01/01/190", "01/01/000", "01/01/0", "01/00/00", "00/01/00"]}, {"regex": "(^\\d{3}\\x2E\\d{3}\\x2E\\d{3}\\x2D\\d{2}$)", "exceptionStackTrace": null, "matches": ["000.000.000-00"], "nonMatches": ["000.000.000-000", "000.000.000-0", "000.000.0000-00", "000.000.00-00", "000.0000.000-00", "000.00.000-00", "0000.000.000-00", "00.000.000-00"]}, {"regex": "(^\\d{5}\\x2D\\d{3}$)", "exceptionStackTrace": null, "matches": ["00000-000"], "nonMatches": ["00000-0000", "00000-00", "000000-000", "0000-000"]}, {"regex": "(^[0-9]{2,3}\\.[0-9]{3}\\.[0-9]{3}\\/[0-9]{4}-[0-9]{2}$)", "exceptionStackTrace": null, "matches": ["000.000.000/0000-00", "00.000.000/0000-00"], "nonMatches": ["00.000.000/0000-000", "00.000.000/0000-0", "00.000.000/00000-00", "00.000.000/000-00", "00.000.0000/0000-00", "00.000.00/0000-00", "00.0000.000/0000-00", "00.00.000/0000-00", "0000.000.000/0000-00", "0.000.000/0000-00"]}, {"regex": "(?!\\.)[a-z]{1,4}$", "exceptionStackTrace": null, "matches": ["aaaaa", "aaaa", "a"], "nonMatches": [""]}, {"regex": "((?:Microsoft)?.?(?:(?:Windows.NT.(?:[1-4].[0-9]))|(?:Win(?:dows)?.?NT).?[1-4](?:.?[0-9])?|NT[1-4]))", "exceptionStackTrace": null, "matches": ["MicrosoftaWindowsaNTa1a0a0", "MicrosoftaWindowsaNTa1", "MicrosoftaWindowsaNTa1aa0", "MicrosoftaWindowsaNTa10", "MicrosoftaWindowsaNT1a0", "MicrosoftaWindowsNTa1a0", "MicrosoftaWinaNTa1a0", "MicrosoftaWindowsaNTa1_0", "MicrosoftaWindowsaNTa1A0", "MicrosoftaWindowsaNTa100", "MicrosoftaWindowsaNTa1 0", "MicrosoftaWindowsaNT_1a0", "MicrosoftaWindowsaNTA1a0", "MicrosoftaWindowsaNT01a0", "MicrosoftaWindowsaNT 1a0", "MicrosoftaWindows_NTa1a0", "MicrosoftaWindowsANTa1a0", "MicrosoftaWindows0NTa1a0", "MicrosoftaWindows NTa1a0", "MicrosoftaaWindowsaNTa1a0", "MicrosoftWindowsaNTa1a0", "Microsoft_WindowsaNTa1a0", "MicrosoftAWindowsaNTa1a0", "Microsoft0WindowsaNTa1a0", "Microsoft WindowsaNTa1a0", "MicrosoftMicrosoftaWindowsaNTa1a0", "aWindowsaNTa1a0", "NT1", "WinNT1", "WindowsaNTa1a0", "MicrosoftaNT1", "MicrosoftaWindowsaNTa1a0"], "nonMatches": ["MicrosoftaNT0", "MicrosoftaWindowsaNTaa1a0", "MicrosoftaWindowsaaNTa1a0", "MicrosoftaWindowsdowsaNTa1a0", "MicrosoftaWindowsaNTa0a0"]}, {"regex": "^[0-9,]+[&#39;][-](\\d|1[01])&quot;$", "exceptionStackTrace": null, "matches": [",;-10&quot;", ",9-0&quot;", ",3-0&quot;", ",&-0&quot;", ",#-0&quot;", ",,;-0&quot;", "0;-0&quot;", ",;-11&quot;", ",;-0&quot;"], "nonMatches": [",;-12&quot;", ",0-0&quot;", ";-0&quot;"]}, {"regex": "^([A-Z]+\\s*[A-Z]+)$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["evil eVil", "evil EVIL", "evil ev_il", "evil ev il", "evil ev4il", "evil e", "evil  ", "evil 6", "evil _", "evil ", "evil  evil", "eVil evil", "EVIL evil", "ev_il evil", "ev il evil", "ev4il evil", "e evil", "  evil", "6 evil", "_ evil", " evil", "evilevil", "evil evil"]}, {"regex": "^[1-9]+[0-9]*$", "exceptionStackTrace": null, "matches": ["100", "110", "1", "10"], "nonMatches": ["0", "00"]}, {"regex": "^0?.[0]{1,2}[1-9]{1}$|^0?.[1-9]{1}?\\d{0,2}$|^(1|1.{1}[0]{1,3})$|^0?.[0]{1}[1-9]{1}\\d{1}$", "exceptionStackTrace": null, "matches": ["0_010", "0A010", "00010", "0 010", "1a000", "1_0", "1A0", "100", "1 0", "0a100", "0a110", "0_10", "0A10", "0010", "0 10", "a10", "0a011", "0a001", "0a1", "0_01", "0A01", "0001", "0 01", "a010", "a1", "a01", "0a010", "1a0", "1", "0a10", "0a01"], "nonMatches": ["0a0100", "0a0110", "0a000", "0a0010", "00a010", "1a0000", "1a", "1aa0", "10", "0a1000", "00a10", "0a0", "0a00", "0a0001", "00a01"]}, {"regex": "^.*?(\\K\\/\\*.*?\\*\\/)|^.*?(\\K\\/\\*.*?^.*\\*\\/)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad escape \\K"}, "matches": []}, {"regex": "^(([0]([2|3|4|5|6|8|9|7])))\\d{7,8}$", "exceptionStackTrace": null, "matches": ["0700000000", "0|0000000", "090000000", "080000000", "060000000", "050000000", "040000000", "030000000", "020000000", "070000000"], "nonMatches": ["07000000000", "07000000", "000000000"]}, {"regex": "(\\+)?(\\()?(\\d+){1,4}(\\))?(\\s)?(-)?(\\d+){1,3}(\\s)?(-)?(\\d+){1,4}(\\s)?(-)?(\\d+){1,4}(\\s)?(-)?(\\d+){1,4}", "exceptionStackTrace": null, "matches": ["+(0) -0 -0 -0 -00000", "+(0) -0 -0 -0 -0000", "+(0) -0 -0 -0 -00", "+(0) -0 -0 -0 0", "+(0) -0 -0 -0-0", "+(0) -0 -0 -00000 -0", "+(0) -0 -0 -0000 -0", "+(0) -0 -0 -00 -0", "+(0) -0 -0 0 -0", "+(0) -0 -0-0 -0", "+(0) -0 -00000 -0 -0", "+(0) -0 -0000 -0 -0", "+(0) -0 -00 -0 -0", "+(0) -0 0 -0 -0", "+(0) -0-0 -0 -0", "+(0) -0000 -0 -0 -0", "+(0) -000 -0 -0 -0", "+(0) -00 -0 -0 -0", "+(0) 0 -0 -0 -0", "+(0)-0 -0 -0 -0", "+(0 -0 -0 -0 -0", "+(00000) -0 -0 -0 -0", "+(0000) -0 -0 -0 -0", "+(00) -0 -0 -0 -0", "+((0) -0 -0 -0 -0", "+0) -0 -0 -0 -0", "++(0) -0 -0 -0 -0", "(0) -0 -0 -0 -0", "00000", "+(0) -0 -0 -0 -0"], "nonMatches": ["+(0) -0 -0 -0 -", "+(0) -0 -0 -0 --0", "+(0) -0 -0 -0  -0", "+(0) -0 -0 - -0", "+(0) -0 -0 --0 -0", "+(0) -0 -0  -0 -0", "+(0) -0 - -0 -0", "+(0) -0 --0 -0 -0", "+(0) -0  -0 -0 -0", "+(0) - -0 -0 -0", "+(0) --0 -0 -0 -0", "+(0)  -0 -0 -0 -0", "+(0)) -0 -0 -0 -0", "+() -0 -0 -0 -0"]}, {"regex": "^\\{[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f0\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}\\}$", "exceptionStackTrace": null, "matches": ["{00000000-0000-0000-0000-a00000000000}", "{00000000-0000-0000-0000-A00000000000}", "{00000000-0000-0000-a000-000000000000}", "{00000000-0000-0000-A000-000000000000}", "{00000000-0000-a000-0000-000000000000}", "{00000000-0000-A000-0000-000000000000}", "{00000000-0000-1000-0000-000000000000}", "{00000000-a000-0000-0000-000000000000}", "{00000000-A000-0000-0000-000000000000}", "{a0000000-0000-0000-0000-000000000000}", "{A0000000-0000-0000-0000-000000000000}", "{00000000-0000-0000-0000-000000000000}"], "nonMatches": ["{00000000-0000-0000-0000-0000000000000}", "{00000000-0000-0000-0000-00000000000}", "{00000000-0000-0000-0000-g00000000000}", "{00000000-0000-0000-0000-G00000000000}", "{00000000-0000-0000-00000-000000000000}", "{00000000-0000-0000-000-000000000000}", "{00000000-0000-0000-g000-000000000000}", "{00000000-0000-0000-G000-000000000000}", "{00000000-0000-00000-0000-000000000000}", "{00000000-0000-000-0000-000000000000}", "{00000000-0000-g000-0000-000000000000}", "{00000000-0000-G000-0000-000000000000}", "{00000000-00000-0000-0000-000000000000}", "{00000000-000-0000-0000-000000000000}", "{00000000-g000-0000-0000-000000000000}", "{00000000-G000-0000-0000-000000000000}", "{000000000-0000-0000-0000-000000000000}", "{0000000-0000-0000-0000-000000000000}", "{g0000000-0000-0000-0000-000000000000}", "{G0000000-0000-0000-0000-000000000000}"]}, {"regex": "^([A-Z]{0,3}?[0-9]{9}($[0-9]{0}|[A-Z]{1}))", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (pointless repeat): pointless repeat quantifier {0}"}, "matches": [], "nonMatches": []}, {"regex": "(http(s?)://|[a-zA-Z0-9\\-]+\\.)[a-zA-Z0-9/~\\-]+\\.[a-zA-Z0-9/~\\-_,&\\?\\.;]+[^\\.,\\s<]", "exceptionStackTrace": null, "matches": ["-.evil.evila", "eVil.evil.evila", "EVIL.evil.evila", "ev_il.evil.evila", "ev il.evil.evila", "ev4il.evil.evila", "e.evil.evila", "6.evil.evila", "https://evil.evil~", "https://evil.evil_", "https://evil.evilA", "https://evil.evil?", "https://evil.evil<", "https://evil.evil;", "https://evil.evil:", "https://evil.evil0", "https://evil.evil/", "https://evil.evil.", "https://evil.evil-", "https://evil.evil,", "https://evil.evil&", "https://evil.evil ", "https://evil.~a", "https://evil.?a", "https://evil.;a", "https://evil./a", "https://evil..a", "https://evil.-a", "https://evil.,a", "https://evil.&a", "https://evil.eVila", "https://evil.EVILa", "https://evil.ev_ila", "https://evil.ev ila", "https://evil.ev4ila", "https://evil.ea", "https://evil.6a", "https://evil._a", "https://~.evila", "https:///.evila", "https://-.evila", "https://eVil.evila", "https://EVIL.evila", "https://ev4il.evila", "https://e.evila", "https://6.evila", "http://evil.evila", "evil.evil.evila", "https://evil.evila"], "nonMatches": ["~.evil.evila", "?.evil.evila", "<.evil.evila", ";.evil.evila", ":.evil.evila", "/.evil.evila", "..evil.evila", ",.evil.evila", "&.evil.evila", " .evil.evila", "_.evil.evila", ".evil.evila", "https://evil.<a", "https://evil.:a", "https://evil. a", "https://evil.a", "https://?.evila", "https://<.evila", "https://;.evila", "https://:.evila", "https://..evila", "https://,.evila", "https://&.evila", "https://ev_il.evila", "https://ev il.evila", "https:// .evila", "https://_.evila", "https://.evila", "httpss://evil.evila"]}, {"regex": "https?://[^<>() ]+([ ](((?!https?://)[^<>() ])+)(?=[^<>() ]*[?!=%&-+/])[^<>() ]*)*", "exceptionStackTrace": null, "matches": ["https://evil aevil aevil", "https://evil", "https://evil a?", "https://evil a>", "https://evil a=", "https://evil a<", "https://evil a:", "https://evil a/", "https://evil a)", "https://evil a(", "https://evil a%", "https://evil a!", "https://evil aeVil", "https://evil aEVIL", "https://evil aev_il", "https://evil aev il", "https://evil aev4il", "https://evil ae", "https://evil a ", "https://evil a6", "https://evil a_", "https://evil a", "https://evil aaevil", "https://evil evil", "https://evil Aevil", "https://evil ?evil", "https://evil >evil", "https://evil =evil", "https://evil <evil", "https://evil :evil", "https://evil 0evil", "https://evil /evil", "https://evil )evil", "https://evil (evil", "https://evil %evil", "https://evil !evil", "https://evil  evil", "https://? aevil", "https://= aevil", "https://: aevil", "https:/// aevil", "https://% aevil", "https://! aevil", "https://eVil aevil", "https://EVIL aevil", "https://ev_il aevil", "https://ev il aevil", "https://ev4il aevil", "https://e aevil", "https://6 aevil", "https://_ aevil", "http://evil aevil", "http://evil", "https://evil aevil"], "nonMatches": ["https://> aevil", "https://< aevil", "https://) aevil", "https://( aevil", "https://  aevil", "https:// aevil", "httpss://evil aevil"]}, {"regex": "^[ABCEGHJKLMNPRSTVXY]{1}\\d{1}[A-Z]{1} *\\d{1}[A-Z]{1}\\d{1}$", "exceptionStackTrace": null, "matches": ["Y0A  0A0", "X0A 0A0", "V0A 0A0", "T0A 0A0", "S0A 0A0", "R0A 0A0", "P0A 0A0", "N0A 0A0", "M0A 0A0", "L0A 0A0", "K0A 0A0", "J0A 0A0", "H0A 0A0", "G0A 0A0", "E0A 0A0", "C0A 0A0", "B0A 0A0", "A0A 0A0", "Y0A0A0", "Y0A 0A0"], "nonMatches": ["Y0A 0A00", "Y0A 0A", "Y0A 0AA0", "Y0A 00", "Y0A 00A0", "Y0A A0", "Y0AA 0A0", "Y0 0A0", "Y00A 0A0", "YA 0A0", "YY0A 0A0", "0A 0A0", "D0A 0A0"]}, {"regex": "^(([a-zA-Z]+\\d+)|(\\d+[a-zA-Z]+))[a-zA-Z0-9]*$", "exceptionStackTrace": null, "matches": ["0eVilevil", "0EVILevil", "0ev4ilevil", "0eevil", "06evil", "00evilevil", "evil0eVil", "evil0EVIL", "evil0ev4il", "evil0e", "evil06", "evil00evil", "eVil0evil", "EVIL0evil", "ev4il0evil", "e0evil", "60evil", "0evil", "evil0", "0evilevil", "evil0evil"], "nonMatches": ["0ev_ilevil", "0ev ilevil", "0 evil", "0_evil", "evil0ev_il", "evil0ev il", "evil0 ", "evil0_", "evilevil", "ev_il0evil", "ev il0evil", " 0evil", "_0evil"]}, {"regex": "^\\s*[a-zA-Z0-9,&\\s]+\\s*$", "exceptionStackTrace": null, "matches": [" evil  ", " evil", " , ", " & ", " eVil ", " EVIL ", " ev il ", " ev4il ", " e ", "   ", " 6 ", "  ", "  evil ", "evil ", "evil", " evil "], "nonMatches": [" ev_il ", " _ "]}, {"regex": "http://www.9lessons.info/2008/08/most-popular-articles.html", "exceptionStackTrace": null, "matches": ["http://wwwa9lessonsainfo/2008/08/most-popular-articlesAhtml", "http://wwwa9lessonsainfo/2008/08/most-popular-articles:html", "http://wwwa9lessonsainfo/2008/08/most-popular-articles0html", "http://wwwa9lessonsainfo/2008/08/most-popular-articles/html", "http://wwwa9lessonsainfo/2008/08/most-popular-articles-html", "http://wwwa9lessonsainfo/2008/08/most-popular-articles html", "http://wwwa9lessonsAinfo/2008/08/most-popular-articlesahtml", "http://wwwa9lessons:info/2008/08/most-popular-articlesahtml", "http://wwwa9lessons0info/2008/08/most-popular-articlesahtml", "http://wwwa9lessons/info/2008/08/most-popular-articlesahtml", "http://wwwa9lessons-info/2008/08/most-popular-articlesahtml", "http://wwwa9lessons info/2008/08/most-popular-articlesahtml", "http://wwwA9lessonsainfo/2008/08/most-popular-articlesahtml", "http://www:9lessonsainfo/2008/08/most-popular-articlesahtml", "http://www09lessonsainfo/2008/08/most-popular-articlesahtml", "http://www/9lessonsainfo/2008/08/most-popular-articlesahtml", "http://www-9lessonsainfo/2008/08/most-popular-articlesahtml", "http://www 9lessonsainfo/2008/08/most-popular-articlesahtml", "http://wwwa9lessonsainfo/2008/08/most-popular-articlesahtml"], "nonMatches": []}, {"regex": "http://www.scribd.com/doc/2569355/Geo-Distance-Search-with-MySQL", "exceptionStackTrace": null, "matches": ["http://wwwascribdAcom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribd:com/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribd0com/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribd/com/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribd-com/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribd com/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwAscribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://www:scribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://www0scribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://www/scribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://www-scribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://www scribdacom/doc/2569355/Geo-Distance-Search-with-MySQL", "http://wwwascribdacom/doc/2569355/Geo-Distance-Search-with-MySQL"], "nonMatches": []}, {"regex": "(<(?:.*?)\\s)href\\s*=([\\s&quot;&#39;])*/?([^\\2:#]+?)\\2((?:.*?)>)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (parse error): expected character type but received BACKREFERENCE"}, "matches": [], "nonMatches": []}, {"regex": "^([0-9]|[1-9]\\d|[1-7]\\d{2}|800)$", "exceptionStackTrace": null, "matches": ["800", "100", "10", "0"], "nonMatches": ["1000", "000", "00"]}, {"regex": "((https?|ftp|gopher|telnet|file|notes|ms-help):((//)|(\\\\\\\\))+[\\w\\d:#@%/;$()~_\\+-=\\\\\\.&]*)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: +-="}, "matches": [], "nonMatches": []}, {"regex": "(\\bR(\\.|)R(\\.|)|RURAL\\s{0,}(ROUTE|RT(\\.|)))\\s{0,}\\d{1,}(,|)\\s{1,}\\bBOX\\s{0,}\\d", "exceptionStackTrace": null, "matches": ["RURAL RT 0, BOX 0", "RURAL  ROUTE 0, BOX 0", "RURALROUTE 0, BOX 0", "R.R. 0, BOX  0", "R.R. 0, BOX0", "R.R. 0,  BOX 0", "R.R. 0 BOX 0", "R.R. 00, BOX 0", "R.R.  0, BOX 0", "R.R.0, BOX 0", "R.R 0, BOX 0", "RR. 0, BOX 0", "RURALRT0 BOX0", "RURALROUTE0 BOX0", "RR0 BOX0", "RURAL RT. 0, BOX 0", "RURAL ROUTE 0, BOX 0", "R.R. 0, BOX 0"], "nonMatches": ["RURAL RT.. 0, BOX 0", "R.R. 0,BOX 0", "R.R. 0,, BOX 0", "R.R. , BOX 0", "R.R.. 0, BOX 0", "R..R. 0, BOX 0"]}, {"regex": "(((0[13578]|10|12)([/])(0[1-9]|[12][0-9]|3[01])([/])([1-2][0,9][0-9][0-9]))|((0[469]|11)([/])([0][1-9]|[12][0-9]|30)([/])([1-2][0,9][0-9][0-9]))|((02)([/])(0[1-9]|1[0-9]|2[0-8])([/])([1-2][0,9][0-9][0-9]))|((02)([/])(29)(\\.|-|\\/)([02468][048]00))|((02)([/])(29)([/])([13579][26]00))|((02)([/])(29)([/])([0-9][0-9][0][48]))|((02)([/])(29)([/])([0-9][0-9][2468][048]))|((02)([/])(29)([/])([0-9][0-9][13579][26])))", "exceptionStackTrace": null, "matches": ["02/29/0092", "02/29/0076", "02/29/0056", "02/29/0036", "02/29/0016", "02/29/0084", "02/29/0080", "02/29/0068", "02/29/0048", "02/29/0028", "02/29/0004", "02/29/0000", "02/29/9200", "02/29/7600", "02/29/5600", "02/29/3600", "02/29/1600", "02/29.8400", "02/29.8000", "02/29.6800", "02/29.4800", "02/29.2800", "02/29.0800", "02/01/1000", "02/01/1,00", "09/10/1900", "09/01/1000", "09/01/1,00", "06/01/1900", "04/01/1900", "08/30/1900", "08/10/1900", "08/01/1000", "08/01/1,00", "07/01/1900", "05/01/1900", "03/01/1900", "01/01/1900", "02/29/0096", "02/29/0088", "02/29/0008", "02/29/9600", "02/29/8800", "02/29-8800", "02/29.8800", "02/20/1900", "02/10/1900", "02/01/1900", "11/01/1900", "09/30/1900", "09/20/1900", "09/01/1900", "12/01/1900", "10/01/1900", "08/31/1900", "08/20/1900", "08/01/1900"], "nonMatches": ["02/29/0090", "02/29/0006", "02/29/0081", "02/29/9000", "02/29/0600", "02/29.8100", "02/29.1800", "02/29/1900", "02/01/1100", "02/01/0900", "02/00/1900", "09/01/1100", "09/01/0900", "09/00/1900", "08/32/1900", "08/01/1100", "08/01/0900", "08/00/1900", "00/01/1900"]}, {"regex": "(\\d{2}|\\d{4})(?:\\-)?([0]{1}\\d{1}|[1]{1}[0-2]{1})(?:\\-)?([0-2]{1}\\d{1}|[3]{1}[0-1]{1})(?:\\s)?([0-1]{1}\\d{1}|[2]{1}[0-3]{1})(?::)?([0-5]{1}\\d{1})(?::)?([0-5]{1}\\d{1})", "exceptionStackTrace": null, "matches": ["00000-00-00 00:00:00", "00-00-00 00:00:000", "00-00-00 00:0000", "00-00-00 0000:00", "00-00-0000:00:00", "00-0000 00:00:00", "0000-00 00:00:00", "000-00-00 00:00:00", "00000000000000", "001000000000", "000030000000", "000000200000", "000000000000", "0000-00-00 00:00:00", "00-10-00 00:00:00", "00-00-30 00:00:00", "00-00-00 20:00:00", "00-00-00 00:00:00"], "nonMatches": ["00-100-00 00:00:00", "00-1-00 00:00:00", "00-13-00 00:00:00", "00-110-00 00:00:00", "00-00-300 00:00:00", "00-00-3 00:00:00", "00-00-32 00:00:00", "00-00-330 00:00:00", "00-00-00 200:00:00", "00-00-00 2:00:00", "00-00-00 24:00:00", "00-00-00 220:00:00", "00-00-00 00:00:0", "00-00-00 00:00:60", "00-00-00 00:00::00", "00-00-00 00:000:00", "00-00-00 00:0:00", "00-00-00 00:60:00", "00-00-00 00::00:00", "00-00-00 000:00:00", "00-00-00 0:00:00", "00-00-00  00:00:00", "00-00-000 00:00:00", "00-00-0 00:00:00", "00-00--00 00:00:00", "00-000-00 00:00:00", "00-0-00 00:00:00", "00--00-00 00:00:00", "0-00-00 00:00:00"]}, {"regex": "^(0|[-]{1}([1-9]{1}[0-9]{0,1}|[1]{1}([0-1]{1}[0-9]{1}|[2]{1}[0-8]{1}))|(\\+)?([1-9]{1}[0-9]{0,1}|[1]{1}([0-1]{1}[0-9]{1}|[2]{1}[0-7]{1})))$", "exceptionStackTrace": null, "matches": ["+12", "+1", "+110", "-12", "-110", "10", "120", "100", "1", "-1", "+120", "+100", "+10", "-120", "-100", "-10", "0"], "nonMatches": ["+1200", "+128", "+1220", "+1000", "+1100", "+0", "+00", "++10", "-1200", "-129", "-1220", "-1000", "-1100", "-0", "-00", "--10"]}, {"regex": "(0|(\\+)?([1-9]{1}[0-9]{0,1}|[1]{1}[0-9]{0,2}|[2]{1}([0-4]{1}[0-9]{1}|[5]{1}[0-5]{1})))", "exceptionStackTrace": null, "matches": ["+2500", "+25", "+256", "+2550", "+2000", "+20", "+2200", "+1000", "+100", "+1", "+110", "+0", "+00", "++10", "10", "250", "200", "1", "+250", "+200", "+10", "0"], "nonMatches": []}, {"regex": "^(0|[-]{1}([1-9]{1}[0-9]{0,3}|[1-2]{1}[0-9]{1,4}|[3]{1}([0-1]{1}[0-9]{3}|[2]{1}([0-6]{1}[0-9]{2}|[7]{1}([0-5]{1}[0-9]{1}|([6]{1}[0-8]{1})))))|(\\+)?([1-9]{1}[0-9]{0,3}|[1-2]{1}[0-9]{1,4}|[3]{1}([0-1]{1}[0-9]{3}|[2]{1}([0-6]{1}[0-9]{2}|[7]{1}([0-5]{1}[0-9]{1}|([6]{1}[0-7]{1}))))))$", "exceptionStackTrace": null, "matches": ["+3276", "+3270", "+3200", "+3000", "+10000", "+1000", "+1", "+110", "-3276", "-3270", "-3200", "-3000", "-10000", "-1000", "-110", "32760", "32700", "32000", "30000", "10", "1", "-1", "+32760", "+32700", "+32000", "+30000", "+10", "-32760", "-32700", "-32000", "-30000", "-10", "0"], "nonMatches": ["+327600", "+32768", "+327660", "+327000", "+327700", "+320000", "+322000", "+300000", "+330000", "+0000", "+100000", "+0", "+00", "++10", "-327600", "-32769", "-327660", "-327000", "-327700", "-320000", "-322000", "-300000", "-330000", "-0000", "-100000", "-0", "-00", "--10"]}, {"regex": "^(0|(\\+)?([1-9]{1}[0-9]{0,3})|([1-5]{1}[0-9]{1,4}|[6]{1}([0-4]{1}[0-9]{3}|[5]{1}([0-4]{1}[0-9]{2}|[5]{1}([0-2]{1}[0-9]{1}|[3]{1}[0-5]{1})))))$", "exceptionStackTrace": null, "matches": ["6553", "6550", "6500", "6000", "10000", "110", "+1000", "+1", "+110", "1", "65530", "65500", "65000", "60000", "10", "+10", "0"], "nonMatches": ["655300", "65536", "655330", "655500", "650000", "655000", "600000", "660000", "0000", "100000", "00", "+10000", "+0", "+00", "++10"]}, {"regex": "(0|[1-9]{1}[0-9]{0,8}|[1]{1}[0-9]{1,9}|[-]{1}[2]{1}([0]{1}[0-9]{8}|[1]{1}([0-3]{1}[0-9]{7}|[4]{1}([0-6]{1}[0-9]{6}|[7]{1}([0-3]{1}[0-9]{5}|[4]{1}([0-7]{1}[0-9]{4}|[8]{1}([0-2]{1}[0-9]{3}|[3]{1}([0-5]{1}[0-9]{2}|[6]{1}([0-3]{1}[0-9]{1}|[4]{1}[0-8]{1}))))))))|(\\+)?[2]{1}([0]{1}[0-9]{8}|[1]{1}([0-3]{1}[0-9]{7}|[4]{1}([0-6]{1}[0-9]{6}|[7]{1}([0-3]{1}[0-9]{5}|[4]{1}([0-7]{1}[0-9]{4}|[8]{1}([0-2]{1}[0-9]{3}|[3]{1}([0-5]{1}[0-9]{2}|[6]{1}([0-3]{1}[0-9]{1}|[4]{1}[0-7]{1})))))))))", "exceptionStackTrace": null, "matches": ["+21474836400", "+214748364", "+2147483648", "+21474836440", "+21474836000", "+214748360", "+21474836600", "+21474830000", "+214748300", "+21474833000", "+21474800000", "+214748000", "+21474880000", "+21474000000", "+214740000", "+21474400000", "+21470000000", "+214700000", "+21477000000", "+21400000000", "+214000000", "+21440000000", "+21000000000", "+210000000", "+21100000000", "+20000000000", "+200000000", "+22000000000", "+000000000", "++2000000000", "-21474836400", "-214748364", "-2147483649", "-21474836440", "-21474836000", "-214748360", "-21474836600", "-21474830000", "-214748300", "-21474833000", "-21474800000", "-214748000", "-21474880000", "-21474000000", "-214740000", "-21474400000", "-21470000000", "-214700000", "-21477000000", "-21400000000", "-214000000", "-21440000000", "-21000000000", "-210000000", "-21100000000", "-20000000000", "-200000000", "-22000000000", "-000000000", "--2000000000", "10000000000", "1000000000", "100000000", "110", "00", "2147483640", "2147483600", "2147483000", "2147480000", "2147400000", "2147000000", "2140000000", "2100000000", "2000000000", "1", "+2147483640", "+2147483600", "+2147483000", "+2147480000", "+2147400000", "+2147000000", "+2140000000", "+2100000000", "+2000000000", "-2147483640", "-2147483600", "-2147483000", "-2147480000", "-2147400000", "-2147000000", "-2140000000", "-2100000000", "-2000000000", "10", "0"], "nonMatches": []}, {"regex": "^(0|(\\+)?[1-9]{1}[0-9]{0,8}|(\\+)?[1-3]{1}[0-9]{1,9}|(\\+)?[4]{1}([0-1]{1}[0-9]{8}|[2]{1}([0-8]{1}[0-9]{7}|[9]{1}([0-3]{1}[0-9]{6}|[4]{1}([0-8]{1}[0-9]{5}|[9]{1}([0-5]{1}[0-9]{4}|[6]{1}([0-6]{1}[0-9]{3}|[7]{1}([0-1]{1}[0-9]{2}|[2]{1}([0-8]{1}[0-9]{1}|[9]{1}[0-5]{1})))))))))$", "exceptionStackTrace": null, "matches": ["+429496729", "+429496720", "+429496700", "+429496000", "+429490000", "+429400000", "+429000000", "+420000000", "+400000000", "+1000000000", "+100000000", "+1", "+110", "4294967290", "4294967200", "4294967000", "4294960000", "4294900000", "4294000000", "4290000000", "4200000000", "4000000000", "10", "1", "+4294967290", "+4294967200", "+4294967000", "+4294960000", "+4294900000", "+4294000000", "+4290000000", "+4200000000", "+4000000000", "+10", "0"], "nonMatches": ["+42949672900", "+4294967296", "+42949672990", "+42949672000", "+42949672200", "+42949670000", "+42949677000", "+42949600000", "+42949660000", "+42949000000", "+42949900000", "+42940000000", "+42944000000", "+42900000000", "+42990000000", "+42000000000", "+42200000000", "+40000000000", "+44000000000", "+000000000", "++4000000000", "+10000000000", "+0", "+00", "++10"]}, {"regex": "^\\\\\\\\[\\w-]+\\\\(([\\w()-][\\w\\s()-]*[\\w()-]+)|([\\w()-]+))\\$?(\\\\(([\\w()-][\\w\\s()-]*[\\w()-]+)|([\\w()-]+)))*\\\\?$", "exceptionStackTrace": null, "matches": ["\\\\evil\\-$\\-evilevil\\", "\\\\evil\\)$\\-evilevil\\", "\\\\evil\\($\\-evilevil\\", "\\\\evil\\eVil$\\-evilevil\\", "\\\\evil\\EVIL$\\-evilevil\\", "\\\\evil\\ev_il$\\-evilevil\\", "\\\\evil\\ev il$\\-evilevil\\", "\\\\evil\\ev4il$\\-evilevil\\", "\\\\evil\\e$\\-evilevil\\", "\\\\evil\\6$\\-evilevil\\", "\\\\evil\\_$\\-evilevil\\", "\\\\evil\\-evilevil$\\-\\", "\\\\evil\\-evilevil$\\)\\", "\\\\evil\\-evilevil$\\(\\", "\\\\evil\\-evilevil$\\eVil\\", "\\\\evil\\-evilevil$\\EVIL\\", "\\\\evil\\-evilevil$\\ev_il\\", "\\\\evil\\-evilevil$\\ev il\\", "\\\\evil\\-evilevil$\\ev4il\\", "\\\\evil\\-evilevil$\\e\\", "\\\\evil\\-evilevil$\\6\\", "\\\\evil\\-evilevil$\\_\\", "\\\\evil\\-evilevil$\\-evilevil", "\\\\evil\\-evilevil$\\-evilevil\\-evilevil\\", "\\\\evil\\-evilevil$\\", "\\\\evil\\-evilevil$\\-evil-\\", "\\\\evil\\-evilevil$\\-evil)\\", "\\\\evil\\-evilevil$\\-evil(\\", "\\\\evil\\-evilevil$\\-evileVil\\", "\\\\evil\\-evilevil$\\-evilEVIL\\", "\\\\evil\\-evilevil$\\-evilev_il\\", "\\\\evil\\-evilevil$\\-evilev il\\", "\\\\evil\\-evilevil$\\-evilev4il\\", "\\\\evil\\-evilevil$\\-evile\\", "\\\\evil\\-evilevil$\\-evil6\\", "\\\\evil\\-evilevil$\\-evil_\\", "\\\\evil\\-evilevil$\\-\\evil\\", "\\\\evil\\-evilevil$\\--evil\\", "\\\\evil\\-evilevil$\\-)evil\\", "\\\\evil\\-evilevil$\\-(evil\\", "\\\\evil\\-evilevil$\\-eVilevil\\", "\\\\evil\\-evilevil$\\-EVILevil\\", "\\\\evil\\-evilevil$\\-ev_ilevil\\", "\\\\evil\\-evilevil$\\-ev ilevil\\", "\\\\evil\\-evilevil$\\-ev4ilevil\\", "\\\\evil\\-evilevil$\\-eevil\\", "\\\\evil\\-evilevil$\\- evil\\", "\\\\evil\\-evilevil$\\-6evil\\", "\\\\evil\\-evilevil$\\-_evil\\", "\\\\evil\\-evilevil$\\-evil\\", "\\\\evil\\-evilevil$\\aevilevil\\", "\\\\evil\\-evilevil$\\_evilevil\\", "\\\\evil\\-evilevil$\\Aevilevil\\", "\\\\evil\\-evilevil$\\0evilevil\\", "\\\\evil\\-evilevil$\\)evilevil\\", "\\\\evil\\-evilevil$\\(evilevil\\", "\\\\evil\\-evilevil\\-evilevil\\", "\\\\evil\\-evil-$\\-evilevil\\", "\\\\evil\\-evil)$\\-evilevil\\", "\\\\evil\\-evil($\\-evilevil\\", "\\\\evil\\-evileVil$\\-evilevil\\", "\\\\evil\\-evilEVIL$\\-evilevil\\", "\\\\evil\\-evilev_il$\\-evilevil\\", "\\\\evil\\-evilev il$\\-evilevil\\", "\\\\evil\\-evilev4il$\\-evilevil\\", "\\\\evil\\-evile$\\-evilevil\\", "\\\\evil\\-evil6$\\-evilevil\\", "\\\\evil\\-evil_$\\-evilevil\\", "\\\\evil\\--evil$\\-evilevil\\", "\\\\evil\\-)evil$\\-evilevil\\", "\\\\evil\\-(evil$\\-evilevil\\", "\\\\evil\\-eVilevil$\\-evilevil\\", "\\\\evil\\-EVILevil$\\-evilevil\\", "\\\\evil\\-ev_ilevil$\\-evilevil\\", "\\\\evil\\-ev ilevil$\\-evilevil\\", "\\\\evil\\-ev4ilevil$\\-evilevil\\", "\\\\evil\\-eevil$\\-evilevil\\", "\\\\evil\\- evil$\\-evilevil\\", "\\\\evil\\-6evil$\\-evilevil\\", "\\\\evil\\-_evil$\\-evilevil\\", "\\\\evil\\-evil$\\-evilevil\\", "\\\\evil\\aevilevil$\\-evilevil\\", "\\\\evil\\_evilevil$\\-evilevil\\", "\\\\evil\\Aevilevil$\\-evilevil\\", "\\\\evil\\0evilevil$\\-evilevil\\", "\\\\evil\\)evilevil$\\-evilevil\\", "\\\\evil\\(evilevil$\\-evilevil\\", "\\\\-\\-evilevil$\\-evilevil\\", "\\\\eVil\\-evilevil$\\-evilevil\\", "\\\\EVIL\\-evilevil$\\-evilevil\\", "\\\\ev_il\\-evilevil$\\-evilevil\\", "\\\\ev4il\\-evilevil$\\-evilevil\\", "\\\\e\\-evilevil$\\-evilevil\\", "\\\\6\\-evilevil$\\-evilevil\\", "\\\\_\\-evilevil$\\-evilevil\\", "\\\\evil\\evil", "\\\\evil\\-evil", "\\\\evil\\evil$\\-evilevil\\", "\\\\evil\\-evilevil$\\evil\\", "\\\\evil\\-evilevil$\\-evilevil\\"], "nonMatches": ["\\\\evil\\\\$\\-evilevil\\", "\\\\evil\\$$\\-evilevil\\", "\\\\evil\\ $\\-evilevil\\", "\\\\evil\\$\\-evilevil\\", "\\\\evil\\-evilevil$\\\\\\", "\\\\evil\\-evilevil$\\$\\", "\\\\evil\\-evilevil$\\ \\", "\\\\evil\\-evilevil$\\\\", "\\\\evil\\-evilevil$\\-evilevil\\\\", "\\\\evil\\-evilevil$\\-evil\\\\", "\\\\evil\\-evilevil$\\-evil$\\", "\\\\evil\\-evilevil$\\-evil \\", "\\\\evil\\-evilevil$\\-$evil\\", "\\\\evil\\-evilevil$$\\-evilevil\\", "\\\\evil\\-evil\\$\\-evilevil\\", "\\\\evil\\-evil$$\\-evilevil\\", "\\\\evil\\-evil $\\-evilevil\\", "\\\\evil\\-\\evil$\\-evilevil\\", "\\\\evil\\-$evil$\\-evilevil\\", "\\\\\\\\-evilevil$\\-evilevil\\", "\\\\)\\-evilevil$\\-evilevil\\", "\\\\(\\-evilevil$\\-evilevil\\", "\\\\$\\-evilevil$\\-evilevil\\", "\\\\ev il\\-evilevil$\\-evilevil\\", "\\\\ \\-evilevil$\\-evilevil\\", "\\\\\\-evilevil$\\-evilevil\\"]}, {"regex": "^[^_][a-zA-Z0-9_]+[^_]@{1}[a-z]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$", "exceptionStackTrace": null, "matches": ["aevila@evil.aa.aaa", "aevila@evil.aaa.aa", "aevila@evil.aaa", "aevila@e.aa", "aevila@@evil.aa", "aevilA@evil.aa", "aevil@@evil.aa", "aevil0@evil.aa", "aevil.@evil.aa", "aevil @evil.aa", "aeVila@evil.aa", "aEVILa@evil.aa", "aev_ila@evil.aa", "aev4ila@evil.aa", "aea@evil.aa", "a6a@evil.aa", "a_a@evil.aa", "Aevila@evil.aa", "@evila@evil.aa", "0evila@evil.aa", ".evila@evil.aa", " evila@evil.aa", "aevila@evil.aa.aa", "aevila@evil.aa"], "nonMatches": ["aevila@evil.aa.aaaa", "aevila@evil.aa.a", "aevila@evil.aa..aa", "aevila@evil.aaaa.aa", "aevila@evil.a.aa", "aevila@evil.aaaa", "aevila@evil.a", "aevila@evil..aa", "aevila@evilaa", "aevila@eVil.aa", "aevila@EVIL.aa", "aevila@ev_il.aa", "aevila@ev il.aa", "aevila@ev4il.aa", "aevila@ .aa", "aevila@6.aa", "aevila@_.aa", "aevila@.aa", "aevilaevil.aa", "aevil_@evil.aa", "a@a@evil.aa", "a.a@evil.aa", "aev ila@evil.aa", "a a@evil.aa", "aa@evil.aa", "_evila@evil.aa"]}, {"regex": "^[^_.]([a-zA-Z0-9_]*[.]?[a-zA-Z0-9_]+[^_]){2}@{1}[a-z0-9]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$", "exceptionStackTrace": null, "matches": ["aevil.evilaevil.evila@evil.aa.aaa", "aevil.evilaevil.evila@evil.aaa.aa", "aevil.evilaevil.evila@evil.aaa", "aevil.evilaevil.evila@ev4il.aa", "aevil.evilaevil.evila@e.aa", "aevil.evilaevil.evila@6.aa", "aevil.evilaevil.evila@@evil.aa", "aevil.evilaevil.evilaevil.evila@evil.aa", "aevil.evila@evil.aa", "aevil.evil_evil.evila@evil.aa", "aevil.evilAevil.evila@evil.aa", "aevil.evil@evil.evila@evil.aa", "aevil.evil0evil.evila@evil.aa", "aevil.evil.evil.evila@evil.aa", "aevil.evil evil.evila@evil.aa", "aevil.eVilaevil.evila@evil.aa", "aevil.EVILaevil.evila@evil.aa", "aevil.ev_ilaevil.evila@evil.aa", "aevil.ev ilaevil.evila@evil.aa", "aevil.ev4ilaevil.evila@evil.aa", "aevil.eaevil.evila@evil.aa", "aevil.6aevil.evila@evil.aa", "aevil._aevil.evila@evil.aa", "aevil.aevil.evila@evil.aa", "aevilevilaevil.evila@evil.aa", "aeVil.evilaevil.evila@evil.aa", "aEVIL.evilaevil.evila@evil.aa", "aev_il.evilaevil.evila@evil.aa", "aev4il.evilaevil.evila@evil.aa", "ae.evilaevil.evila@evil.aa", "a6.evilaevil.evila@evil.aa", "a_.evilaevil.evila@evil.aa", "a.evilaevil.evila@evil.aa", "Aevil.evilaevil.evila@evil.aa", "@evil.evilaevil.evila@evil.aa", "0evil.evilaevil.evila@evil.aa", " evil.evilaevil.evila@evil.aa", "aevilaevil.evila@evil.aa.aa", "aevilaevil.evila@evil.aa", "aevil.evilaevil.evila@evil.aa.aa", "aevil.evilaevil.evila@evil.aa"], "nonMatches": ["aevil.evilaevil.evila@evil.aa.aaaa", "aevil.evilaevil.evila@evil.aa.a", "aevil.evilaevil.evila@evil.aa..aa", "aevil.evilaevil.evila@evil.aaaa.aa", "aevil.evilaevil.evila@evil.a.aa", "aevil.evilaevil.evila@evil.aaaa", "aevil.evilaevil.evila@evil.a", "aevil.evilaevil.evila@evil..aa", "aevil.evilaevil.evila@evilaa", "aevil.evilaevil.evila@eVil.aa", "aevil.evilaevil.evila@EVIL.aa", "aevil.evilaevil.evila@ev_il.aa", "aevil.evilaevil.evila@ev il.aa", "aevil.evilaevil.evila@ .aa", "aevil.evilaevil.evila@_.aa", "aevil.evilaevil.evila@.aa", "aevil.evilaevil.evilaevil.aa", "aevil.@aevil.evila@evil.aa", "aevil..aevil.evila@evil.aa", "aevil. aevil.evila@evil.aa", "aevil..evilaevil.evila@evil.aa", "a@.evilaevil.evila@evil.aa", "a..evilaevil.evila@evil.aa", "aev il.evilaevil.evila@evil.aa", "a .evilaevil.evila@evil.aa", "_evil.evilaevil.evila@evil.aa", ".evil.evilaevil.evila@evil.aa"]}, {"regex": "^([A-Z]+[a-zA-Z]*)(\\s|\\-)?([A-Z]+[a-zA-Z]*)?(\\s|\\-)?([A-Z]+[a-zA-Z]*)?$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["evilevil evilevil evilevilevilevil", "evilevil evilevil ", "evilevil evilevil evileVil", "evilevil evilevil evilEVIL", "evilevil evilevil evilev_il", "evilevil evilevil evilev il", "evilevil evilevil evilev4il", "evilevil evilevil evile", "evilevil evilevil evil ", "evilevil evilevil evil6", "evilevil evilevil evil_", "evilevil evilevil eVilevil", "evilevil evilevil EVILevil", "evilevil evilevil ev_ilevil", "evilevil evilevil ev ilevil", "evilevil evilevil ev4ilevil", "evilevil evilevil eevil", "evilevil evilevil  evil", "evilevil evilevil 6evil", "evilevil evilevil _evil", "evilevil evilevil evil", "evilevil evilevil  evilevil", "evilevil evilevilevilevil", "evilevil evilevilevilevil evilevil", "evilevil  evilevil", "evilevil evileVil evilevil", "evilevil evilEVIL evilevil", "evilevil evilev_il evilevil", "evilevil evilev il evilevil", "evilevil evilev4il evilevil", "evilevil evile evilevil", "evilevil evil  evilevil", "evilevil evil6 evilevil", "evilevil evil_ evilevil", "evilevil eVilevil evilevil", "evilevil EVILevil evilevil", "evilevil ev_ilevil evilevil", "evilevil ev ilevil evilevil", "evilevil ev4ilevil evilevil", "evilevil eevil evilevil", "evilevil  evil evilevil", "evilevil 6evil evilevil", "evilevil _evil evilevil", "evilevil evil evilevil", "evilevil  evilevil evilevil", "evilevilevilevil evilevil", "evileVil evilevil evilevil", "evilEVIL evilevil evilevil", "evilev_il evilevil evilevil", "evilev il evilevil evilevil", "evilev4il evilevil evilevil", "evile evilevil evilevil", "evil  evilevil evilevil", "evil6 evilevil evilevil", "evil_ evilevil evilevil", "eVilevil evilevil evilevil", "EVILevil evilevil evilevil", "ev_ilevil evilevil evilevil", "ev ilevil evilevil evilevil", "ev4ilevil evilevil evilevil", "eevil evilevil evilevil", " evil evilevil evilevil", "6evil evilevil evilevil", "_evil evilevil evilevil", "evil evilevil evilevil", "evil", "evilevil-evilevil evilevil", "evilevil evilevil-evilevil", "evilevil evilevil evilevil"]}, {"regex": "Dell Inspiron 1545 Battery", "exceptionStackTrace": null, "matches": ["Dell Inspiron 1545 Battery"], "nonMatches": []}, {"regex": " Dell Studio 1555 Battery", "exceptionStackTrace": null, "matches": [" Dell Studio 1555 Battery"], "nonMatches": []}, {"regex": "Dell XPS M1330 Battery", "exceptionStackTrace": null, "matches": ["Dell XPS M1330 Battery"], "nonMatches": []}, {"regex": "Dell Inspiron N4010 battery", "exceptionStackTrace": null, "matches": ["Dell Inspiron N4010 battery"], "nonMatches": []}, {"regex": "Dell J1KND battery ", "exceptionStackTrace": null, "matches": ["Dell J1KND battery "], "nonMatches": []}, {"regex": "Dell Vostro 1710 battery", "exceptionStackTrace": null, "matches": ["Dell Vostro 1710 battery"], "nonMatches": []}, {"regex": "Dell Latitude E5400 battery", "exceptionStackTrace": null, "matches": ["Dell Latitude E5400 battery"], "nonMatches": []}, {"regex": "Dell Vostro 1400 battery", "exceptionStackTrace": null, "matches": ["Dell Vostro 1400 battery"], "nonMatches": []}, {"regex": "HP Compaq 6720s Battery", "exceptionStackTrace": null, "matches": ["HP Compaq 6720s Battery"], "nonMatches": []}, {"regex": "Dell Inspiron 1545 Laptop Adapter", "exceptionStackTrace": null, "matches": ["Dell Inspiron 1545 Laptop Adapter"], "nonMatches": []}, {"regex": "\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*([,;]\\s*\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*)*", "exceptionStackTrace": null, "matches": ["evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.eVil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.EVIL", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.ev_il", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.ev il", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.ev4il", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.e", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil. ", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.6", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil._", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil-evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.eVil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.EVIL.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.ev_il.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.ev il.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.ev4il.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.e.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil. .evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.6.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil._.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil..evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.eVil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.EVIL.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.ev_il.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.ev il.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.ev4il.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.e.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil. .evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.6.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil._.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil..evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil-evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@eVil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@EVIL.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@ev_il.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@ev il.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@ev4il.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@e.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@ .evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@6.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@_.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.eVil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.EVIL@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.ev_il@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.ev il@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.ev4il@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.e@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil. @evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.6@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil._@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil.@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil-evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; evil+evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; eVil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; EVIL.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; ev_il.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; ev il.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; ev4il.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; e.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil;  .evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; 6.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; _.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil; .evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil;  evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil;evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil, evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.eVil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.EVIL; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.ev_il; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.ev il; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.ev4il; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.e; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil. ; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.6; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil._; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil-evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.eVil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.EVIL.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.ev_il.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.ev il.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.ev4il.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.e.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil. .evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.6.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil._.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil..evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.eVil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.EVIL.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.ev_il.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.ev il.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.ev4il.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.e.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil. .evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil.6.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil._.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil..evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@evil-evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@eVil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@EVIL.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@ev_il.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@ev il.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@ev4il.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@e.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@ .evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@6.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@_.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil@.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.eVil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.EVIL@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.ev_il@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.ev il@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.ev4il@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.e@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil. @evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.6@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil._@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil.@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil-evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil+evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "eVil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "EVIL.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "ev_il.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "ev il.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "ev4il.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "e.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", " .evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "6.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "_.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", ".evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil", "evil@evil.evil", "evil.evil@evil.evil.evil.evil; evil.evil@evil.evil.evil.evil"], "nonMatches": []}, {"regex": "^[-\\w`~!@#$%^&amp;*\\(\\)+={}|\\[\\]\\\\:&quot;;&#39;&lt;&gt;?,.\\/ ]*$", "exceptionStackTrace": null, "matches": ["~", "}", "|", "{", "`", "^", "]", "\\", "[", "@", "?", "=", ";", ":", "/", ".", "-", ",", "+", "*", ")", "(", "&", "%", "$", "#", "!", "eVil", "EVIL", "ev_il", "ev il", "ev4il", "e", " ", "6", "_", "", "evil"], "nonMatches": []}, {"regex": "^[A-Z].*$", "exceptionStackTrace": null, "matches": ["AeVil", "AEVIL", "Aev_il", "Aev il", "Aev4il", "Ae", "A ", "A6", "A_", "A", "Aevil"], "nonMatches": []}, {"regex": "&lt;!--[\\s\\S]*?--&gt;", "exceptionStackTrace": null, "matches": ["&lt;!--;--&gt;", "&lt;!-----&gt;", "&lt;!--&--&gt;", "&lt;!--!--&gt;", "&lt;!--eVil--&gt;", "&lt;!--EVIL--&gt;", "&lt;!--ev_il--&gt;", "&lt;!--ev il--&gt;", "&lt;!--ev4il--&gt;", "&lt;!--e--&gt;", "&lt;!-- --&gt;", "&lt;!--6--&gt;", "&lt;!--_--&gt;", "&lt;!----&gt;", "&lt;!--evil--&gt;"], "nonMatches": []}, {"regex": "&lt;/?(\\w+)(\\s+\\w+=(\\w+|&quot;[^&quot;]*&quot;|&#39;[^&#39;]*&#39;))*&gt;", "exceptionStackTrace": null, "matches": ["&lt;/evil evil=&#39;=&#39;&gt;", "&lt;/evil evil=&#39;/&#39;&gt;", "&lt;/evil evil=&#39;eVil&#39;&gt;", "&lt;/evil evil=&#39;EVIL&#39;&gt;", "&lt;/evil evil=&#39;ev_il&#39;&gt;", "&lt;/evil evil=&#39;ev il&#39;&gt;", "&lt;/evil evil=&#39;ev4il&#39;&gt;", "&lt;/evil evil=&#39;e&#39;&gt;", "&lt;/evil evil=&#39; &#39;&gt;", "&lt;/evil evil=&#39;6&#39;&gt;", "&lt;/evil evil=&#39;_&#39;&gt;", "&lt;/evil evil=&#39;&#39;&gt;", "&lt;/evil evil=&quot;=&quot;&gt;", "&lt;/evil evil=&quot;/&quot;&gt;", "&lt;/evil evil=&quot;#&quot;&gt;", "&lt;/evil evil=&quot;eVil&quot;&gt;", "&lt;/evil evil=&quot;EVIL&quot;&gt;", "&lt;/evil evil=&quot;ev_il&quot;&gt;", "&lt;/evil evil=&quot;ev il&quot;&gt;", "&lt;/evil evil=&quot;ev4il&quot;&gt;", "&lt;/evil evil=&quot;e&quot;&gt;", "&lt;/evil evil=&quot; &quot;&gt;", "&lt;/evil evil=&quot;6&quot;&gt;", "&lt;/evil evil=&quot;_&quot;&gt;", "&lt;/evil evil=&quot;&quot;&gt;", "&lt;/evil evil=evil evil=evil&gt;", "&lt;/evil&gt;", "&lt;/evil evil=eVil&gt;", "&lt;/evil evil=EVIL&gt;", "&lt;/evil evil=ev_il&gt;", "&lt;/evil evil=ev4il&gt;", "&lt;/evil evil=e&gt;", "&lt;/evil evil=6&gt;", "&lt;/evil evil=_&gt;", "&lt;/evil eVil=evil&gt;", "&lt;/evil EVIL=evil&gt;", "&lt;/evil ev_il=evil&gt;", "&lt;/evil ev4il=evil&gt;", "&lt;/evil e=evil&gt;", "&lt;/evil 6=evil&gt;", "&lt;/evil _=evil&gt;", "&lt;/evil  evil=evil&gt;", "&lt;/eVil evil=evil&gt;", "&lt;/EVIL evil=evil&gt;", "&lt;/ev_il evil=evil&gt;", "&lt;/ev4il evil=evil&gt;", "&lt;/e evil=evil&gt;", "&lt;/6 evil=evil&gt;", "&lt;/_ evil=evil&gt;", "&lt;evil evil=evil&gt;", "&lt;evil&gt;", "&lt;/evil evil=&#39;evil&#39;&gt;", "&lt;/evil evil=&quot;evil&quot;&gt;", "&lt;/evil evil=evil&gt;"], "nonMatches": ["&lt;/evil evil=&#39;;&#39;&gt;", "&lt;/evil evil=&#39;&&#39;&gt;", "&lt;/evil evil=&#39;#&#39;&gt;", "&lt;/evil evil=&quot;;&quot;&gt;", "&lt;/evil evil=&quot;&&quot;&gt;", "&lt;/evil evil=ev il&gt;", "&lt;/evil evil= &gt;", "&lt;/evil evil=&gt;", "&lt;/evil ev il=evil&gt;", "&lt;/evil  =evil&gt;", "&lt;/evil =evil&gt;", "&lt;/evilevil=evil&gt;", "&lt;/ev il evil=evil&gt;", "&lt;/  evil=evil&gt;", "&lt;/ evil=evil&gt;", "&lt;//evil evil=evil&gt;"]}, {"regex": "^\\{?[a-fA-F\\d]{8}-([a-fA-F\\d]{4}-){3}[a-fA-F\\d]{12}\\}?$", "exceptionStackTrace": null, "matches": ["{00000000-0000-0000-0000-000000000000", "{00000000-0000-0000-0000-a00000000000}", "{00000000-0000-0000-0000-A00000000000}", "{00000000-a000-0000-0000-000000000000}", "{00000000-A000-0000-0000-000000000000}", "{a0000000-0000-0000-0000-000000000000}", "{A0000000-0000-0000-0000-000000000000}", "00000000-0000-0000-0000-000000000000}", "00000000-0000-0000-0000-000000000000", "{00000000-0000-0000-0000-000000000000}"], "nonMatches": ["{00000000-0000-0000-0000-000000000000}}", "{00000000-0000-0000-0000-0000000000000}", "{00000000-0000-0000-0000-00000000000}", "{00000000-0000-0000-0000-g00000000000}", "{00000000-0000-0000-0000-G00000000000}", "{00000000-0000-0000-0000-0000-000000000000}", "{00000000-0000-0000-000000000000}", "{00000000-00000-0000-0000-000000000000}", "{00000000-000-0000-0000-000000000000}", "{00000000-g000-0000-0000-000000000000}", "{00000000-G000-0000-0000-000000000000}", "{000000000-0000-0000-0000-000000000000}", "{0000000-0000-0000-0000-000000000000}", "{g0000000-0000-0000-0000-000000000000}", "{G0000000-0000-0000-0000-000000000000}", "{{00000000-0000-0000-0000-000000000000}"]}, {"regex": "&amp;lt;/?([a-zA-Z][-A-Za-z\\d\\.]{0,71})(\\s+(\\S+)(\\s*=\\s*([-\\w\\.]{1,1024}|&amp;quot;[^&amp;quot;]{0,1024}&amp;quot;|&#39;[^&#39;]{0,1024}&#39;))?)*\\s*&amp;gt;", "exceptionStackTrace": null, "matches": ["&amp;lt;/A. evil = &#39;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;A&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;=&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;;&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;9&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;3&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;0&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;/&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;.&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;-&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;&&#39; &amp;gt;", "&amp;lt;/A. evil = &#39;#&#39; &amp;gt;", "&amp;lt;/A. evil = &#39; &#39; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;u&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;t&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;q&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;p&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;o&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;m&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;a&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;A&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;=&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;;&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;0&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;/&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;.&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;-&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;&&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;#&amp;quot; &amp;gt;", "&amp;lt;/A. evil = &amp;quot; &amp;quot; &amp;gt;", "&amp;lt;/A. evil = .  &amp;gt;", "&amp;lt;/A. evil = .&amp;gt;", "&amp;lt;/A. evil = . evil = . &amp;gt;", "&amp;lt;/A. &amp;gt;", "&amp;lt;/A. evil = . = . &amp;gt;", "&amp;lt;/A. evil &amp;gt;", "&amp;lt;/A. evilamp;gt;", "&amp;lt;/A. evilamp;gt;", "&amp;lt;/A. evil =  &amp;gt;", "&amp;lt;/A. evil = a &amp;gt;", "&amp;lt;/A. evil = _ &amp;gt;", "&amp;lt;/A. evil = A &amp;gt;", "&amp;lt;/A. evil = 0 &amp;gt;", "&amp;lt;/A. evil = - &amp;gt;", "&amp;lt;/A. evil =  . &amp;gt;", "&amp;lt;/A. evil =. &amp;gt;", "&amp;lt;/A. evil  = . &amp;gt;", "&amp;lt;/A. evil= . &amp;gt;", "&amp;lt;/A. = = . &amp;gt;", "&amp;lt;/A. ; = . &amp;gt;", "&amp;lt;/A. / = . &amp;gt;", "&amp;lt;/A. . = . &amp;gt;", "&amp;lt;/A. - = . &amp;gt;", "&amp;lt;/A. & = . &amp;gt;", "&amp;lt;/A. # = . &amp;gt;", "&amp;lt;/A. eVil = . &amp;gt;", "&amp;lt;/A. EVIL = . &amp;gt;", "&amp;lt;/A. ev_il = . &amp;gt;", "&amp;lt;/A. ev il = . &amp;gt;", "&amp;lt;/A. ev4il = . &amp;gt;", "&amp;lt;/A. e = . &amp;gt;", "&amp;lt;/A.   = . &amp;gt;", "&amp;lt;/A. 6 = . &amp;gt;", "&amp;lt;/A. _ = . &amp;gt;", "&amp;lt;/A.  = . &amp;gt;", "&amp;lt;/A.  evil = . &amp;gt;", "&amp;lt;/A.evil = . &amp;gt;", "&amp;lt;/A....................................................................... evil = . &amp;gt;", "&amp;lt;/A evil = . &amp;gt;", "&amp;lt;/Aa evil = . &amp;gt;", "&amp;lt;/AA evil = . &amp;gt;", "&amp;lt;/A0 evil = . &amp;gt;", "&amp;lt;/A- evil = . &amp;gt;", "&amp;lt;/a. evil = . &amp;gt;", "&amp;lt;A. evil = . &amp;gt;", "&amp;lt;A&amp;gt;", "&amp;lt;/A. evil = &#39;a&#39; &amp;gt;", "&amp;lt;/A. evil = &amp;quot;b&amp;quot; &amp;gt;", "&amp;lt;/A. evil = . &amp;gt;"], "nonMatches": ["&amp;lt;/A........................................................................ evil = . &amp;gt;", "&amp;lt;//A. evil = . &amp;gt;"]}, {"regex": "<[a-zA-Z][^>]*\\son\\w+=(\\w+|&#39;[^&#39;]*&#39;|&quot;[^&quot;]*&quot;)[^>]*>", "exceptionStackTrace": null, "matches": ["<Aevil onevil=&quot;>&quot;evil>", "<Aevil onevil=&quot;=&quot;evil>", "<Aevil onevil=&quot;<&quot;evil>", "<Aevil onevil=&quot;#&quot;evil>", "<Aevil onevil=&quot;eVil&quot;evil>", "<Aevil onevil=&quot;EVIL&quot;evil>", "<Aevil onevil=&quot;ev_il&quot;evil>", "<Aevil onevil=&quot;ev il&quot;evil>", "<Aevil onevil=&quot;ev4il&quot;evil>", "<Aevil onevil=&quot;e&quot;evil>", "<Aevil onevil=&quot; &quot;evil>", "<Aevil onevil=&quot;6&quot;evil>", "<Aevil onevil=&quot;_&quot;evil>", "<Aevil onevil=&quot;&quot;evil>", "<Aevil onevil=&#39;>&#39;evil>", "<Aevil onevil=&#39;=&#39;evil>", "<Aevil onevil=&#39;<&#39;evil>", "<Aevil onevil=&#39;eVil&#39;evil>", "<Aevil onevil=&#39;EVIL&#39;evil>", "<Aevil onevil=&#39;ev_il&#39;evil>", "<Aevil onevil=&#39;ev il&#39;evil>", "<Aevil onevil=&#39;ev4il&#39;evil>", "<Aevil onevil=&#39;e&#39;evil>", "<Aevil onevil=&#39; &#39;evil>", "<Aevil onevil=&#39;6&#39;evil>", "<Aevil onevil=&#39;_&#39;evil>", "<Aevil onevil=&#39;&#39;evil>", "<Aevil onevil=evil>>", "<Aevil onevil=evil=>", "<Aevil onevil=evil<>", "<Aevil onevil=evil;>", "<Aevil onevil=evil&>", "<Aevil onevil=evil#>", "<Aevil onevil=evileVil>", "<Aevil onevil=evilEVIL>", "<Aevil onevil=evilev_il>", "<Aevil onevil=evilev il>", "<Aevil onevil=evilev4il>", "<Aevil onevil=evile>", "<Aevil onevil=evil >", "<Aevil onevil=evil6>", "<Aevil onevil=evil_>", "<Aevil onevil=eVilevil>", "<Aevil onevil=EVILevil>", "<Aevil onevil=ev_ilevil>", "<Aevil onevil=ev ilevil>", "<Aevil onevil=ev4ilevil>", "<Aevil onevil=eevil>", "<Aevil onevil=6evil>", "<Aevil onevil=_evil>", "<Aevil onevil=evil>", "<Aevil oneVil=evilevil>", "<Aevil onEVIL=evilevil>", "<Aevil onev_il=evilevil>", "<Aevil onev4il=evilevil>", "<Aevil one=evilevil>", "<Aevil on6=evilevil>", "<Aevil on_=evilevil>", "<A= onevil=evilevil>", "<A< onevil=evilevil>", "<A; onevil=evilevil>", "<A& onevil=evilevil>", "<A# onevil=evilevil>", "<AeVil onevil=evilevil>", "<AEVIL onevil=evilevil>", "<Aev_il onevil=evilevil>", "<Aev il onevil=evilevil>", "<Aev4il onevil=evilevil>", "<Ae onevil=evilevil>", "<A  onevil=evilevil>", "<A6 onevil=evilevil>", "<A_ onevil=evilevil>", "<A onevil=evilevil>", "<aevil onevil=evilevil>", "<A onevil=&quot;&quot;>", "<A onevil=&#39;&#39;>", "<A onevil=evil>", "<Aevil onevil=&quot;evil&quot;evil>", "<Aevil onevil=&#39;evil&#39;evil>", "<Aevil onevil=evilevil>"], "nonMatches": ["<Aevil onevil=&quot;;&quot;evil>", "<Aevil onevil=&quot;&&quot;evil>", "<Aevil onevil=&#39;;&#39;evil>", "<Aevil onevil=&#39;&&#39;evil>", "<Aevil onevil=&#39;#&#39;evil>", "<Aevil onevil= evil>", "<Aevil onev il=evilevil>", "<Aevil on =evilevil>", "<Aevil on=evilevil>", "<A> onevil=evilevil>"]}, {"regex": "[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+", "exceptionStackTrace": null, "matches": ["0evil0.0evil0.0evil0", "0evil0.0evila", "0evil0.0-0", "0evil0.0eVil0", "0evil0.0ev_il0", "0evil0.0ev il0", "0evil0.0ev4il0", "0evil0.0e0", "0evil0.060", "0evil0.00", "0evil0.aevil0", "0evila.0evil0", "0-0.0evil0", "0eVil0.0evil0", "0ev_il0.0evil0", "0ev il0.0evil0", "0ev4il0.0evil0", "0e0.0evil0", "060.0evil0", "00.0evil0", "aevil0.0evil0", "00.00", "0evil0.0evil0"], "nonMatches": ["0evil0", "0evil0.0.0", "0evil0.0EVIL0", "0evil0.0 0", "0evil0.0_0", "0.0.0evil0", "0EVIL0.0evil0", "0 0.0evil0", "0_0.0evil0"]}, {"regex": "@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+(?:,@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+)*", "exceptionStackTrace": null, "matches": ["@0evil0.0evil0,@0evil0.0evil0,@0evil0.0evil0", "@0evil0.0evil0", "@0evil0.0evil0,@0evil0.0evil0.0evil0", "@0evil0.0evil0,@0evil0", "@0evil0.0evil0,@0evil0.0evila", "@0evil0.0evil0,@0evil0.0@0", "@0evil0.0evil0,@0evil0.0.0", "@0evil0.0evil0,@0evil0.0-0", "@0evil0.0evil0,@0evil0.0,0", "@0evil0.0evil0,@0evil0.0eVil0", "@0evil0.0evil0,@0evil0.0EVIL0", "@0evil0.0evil0,@0evil0.0ev_il0", "@0evil0.0evil0,@0evil0.0ev il0", "@0evil0.0evil0,@0evil0.0ev4il0", "@0evil0.0evil0,@0evil0.0e0", "@0evil0.0evil0,@0evil0.0 0", "@0evil0.0evil0,@0evil0.060", "@0evil0.0evil0,@0evil0.0_0", "@0evil0.0evil0,@0evil0.00", "@0evil0.0evil0,@0evil0.aevil0", "@0evil0.0evil0,@0evila.0evil0", "@0evil0.0evil0,@0@0.0evil0", "@0evil0.0evil0,@0.0.0evil0", "@0evil0.0evil0,@0-0.0evil0", "@0evil0.0evil0,@0,0.0evil0", "@0evil0.0evil0,@0eVil0.0evil0", "@0evil0.0evil0,@0EVIL0.0evil0", "@0evil0.0evil0,@0ev_il0.0evil0", "@0evil0.0evil0,@0ev il0.0evil0", "@0evil0.0evil0,@0ev4il0.0evil0", "@0evil0.0evil0,@0e0.0evil0", "@0evil0.0evil0,@0 0.0evil0", "@0evil0.0evil0,@060.0evil0", "@0evil0.0evil0,@0_0.0evil0", "@0evil0.0evil0,@00.0evil0", "@0evil0.0evil0,@aevil0.0evil0", "@0evil0.0evil0.0evil0,@0evil0.0evil0", "@0evil0,@0evil0.0evil0", "@0evil0.0evila,@0evil0.0evil0", "@0evil0.0@0,@0evil0.0evil0", "@0evil0.0.0,@0evil0.0evil0", "@0evil0.0-0,@0evil0.0evil0", "@0evil0.0,0,@0evil0.0evil0", "@0evil0.0eVil0,@0evil0.0evil0", "@0evil0.0EVIL0,@0evil0.0evil0", "@0evil0.0ev_il0,@0evil0.0evil0", "@0evil0.0ev il0,@0evil0.0evil0", "@0evil0.0ev4il0,@0evil0.0evil0", "@0evil0.0e0,@0evil0.0evil0", "@0evil0.0 0,@0evil0.0evil0", "@0evil0.060,@0evil0.0evil0", "@0evil0.0_0,@0evil0.0evil0", "@0evil0.00,@0evil0.0evil0", "@0evil0.aevil0,@0evil0.0evil0", "@0evila.0evil0,@0evil0.0evil0", "@0@0.0evil0,@0evil0.0evil0", "@0.0.0evil0,@0evil0.0evil0", "@0-0.0evil0,@0evil0.0evil0", "@0,0.0evil0,@0evil0.0evil0", "@0eVil0.0evil0,@0evil0.0evil0", "@0EVIL0.0evil0,@0evil0.0evil0", "@0ev_il0.0evil0,@0evil0.0evil0", "@0ev il0.0evil0,@0evil0.0evil0", "@0ev4il0.0evil0,@0evil0.0evil0", "@0e0.0evil0,@0evil0.0evil0", "@0 0.0evil0,@0evil0.0evil0", "@060.0evil0,@0evil0.0evil0", "@0_0.0evil0,@0evil0.0evil0", "@00.0evil0,@0evil0.0evil0", "@aevil0.0evil0,@0evil0.0evil0", "@00.00", "@0evil0.0evil0,@0evil0.0evil0"], "nonMatches": []}, {"regex": "[a-zA-Z0-9!#\\$%&&#39;\\*\\+\\-\\/=\\?\\^_`{\\|}~]", "exceptionStackTrace": null, "matches": ["}", "|", "{", "a", "`", "_", "^", "A", "?", "=", ";", "9", "3", "0", "/", "-", "+", "*", "&", "%", "$", "#", "!", "~"], "nonMatches": []}, {"regex": "[a-zA-Z0-9!#\\$%&&#39;\\*\\+\\-\\/=\\?\\^_`{\\|}~]+(?:\\.[a-zA-Z0-9!#\\$%&&#39;\\*\\+\\-\\/=\\?\\^_`{\\|}~]+)*@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+", "exceptionStackTrace": null, "matches": ["evil.evil@0evil0.0evil0.0evil0", "evil.evil@0evil0.0evila", "evil.evil@0evil0.0-0", "evil.evil@0evil0.0eVil0", "evil.evil@0evil0.0ev_il0", "evil.evil@0evil0.0ev il0", "evil.evil@0evil0.0ev4il0", "evil.evil@0evil0.0e0", "evil.evil@0evil0.060", "evil.evil@0evil0.00", "evil.evil@0evil0.aevil0", "evil.evil@0evila.0evil0", "evil.evil@0-0.0evil0", "evil.evil@0ev4il0.0evil0", "evil.evil@0e0.0evil0", "evil.evil@060.0evil0", "evil.evil@00.0evil0", "evil.evil@aevil0.0evil0", "evil.evil.evil@0evil0.0evil0", "evil@0evil0.0evil0", "evil.~@0evil0.0evil0", "evil.}@0evil0.0evil0", "evil.|@0evil0.0evil0", "evil.{@0evil0.0evil0", "evil.`@0evil0.0evil0", "evil.^@0evil0.0evil0", "evil.?@0evil0.0evil0", "evil.=@0evil0.0evil0", "evil.;@0evil0.0evil0", "evil./@0evil0.0evil0", "evil.-@0evil0.0evil0", "evil.+@0evil0.0evil0", "evil.*@0evil0.0evil0", "evil.&@0evil0.0evil0", "evil.%@0evil0.0evil0", "evil.$@0evil0.0evil0", "evil.#@0evil0.0evil0", "evil.!@0evil0.0evil0", "evil.eVil@0evil0.0evil0", "evil.EVIL@0evil0.0evil0", "evil.ev_il@0evil0.0evil0", "evil.ev il@0evil0.0evil0", "evil.ev4il@0evil0.0evil0", "evil.e@0evil0.0evil0", "evil.6@0evil0.0evil0", "evil._@0evil0.0evil0", "~.evil@0evil0.0evil0", "}.evil@0evil0.0evil0", "|.evil@0evil0.0evil0", "{.evil@0evil0.0evil0", "`.evil@0evil0.0evil0", "^.evil@0evil0.0evil0", "@.evil@0evil0.0evil0", "?.evil@0evil0.0evil0", "=.evil@0evil0.0evil0", ";.evil@0evil0.0evil0", "/.evil@0evil0.0evil0", "..evil@0evil0.0evil0", "-.evil@0evil0.0evil0", "+.evil@0evil0.0evil0", "*.evil@0evil0.0evil0", "&.evil@0evil0.0evil0", "%.evil@0evil0.0evil0", "$.evil@0evil0.0evil0", "#.evil@0evil0.0evil0", "!.evil@0evil0.0evil0", "eVil.evil@0evil0.0evil0", "EVIL.evil@0evil0.0evil0", "ev_il.evil@0evil0.0evil0", "ev il.evil@0evil0.0evil0", "ev4il.evil@0evil0.0evil0", "e.evil@0evil0.0evil0", " .evil@0evil0.0evil0", "6.evil@0evil0.0evil0", "_.evil@0evil0.0evil0", ".evil@0evil0.0evil0", "evil@00.00", "evil.evil@0evil0.0evil0"], "nonMatches": ["evil.evil@0evil0", "evil.evil@0evil0.0~0", "evil.evil@0evil0.0}0", "evil.evil@0evil0.0|0", "evil.evil@0evil0.0{0", "evil.evil@0evil0.0`0", "evil.evil@0evil0.0^0", "evil.evil@0evil0.0@0", "evil.evil@0evil0.0?0", "evil.evil@0evil0.0=0", "evil.evil@0evil0.0;0", "evil.evil@0evil0.0/0", "evil.evil@0evil0.0.0", "evil.evil@0evil0.0+0", "evil.evil@0evil0.0*0", "evil.evil@0evil0.0&0", "evil.evil@0evil0.0%0", "evil.evil@0evil0.0$0", "evil.evil@0evil0.0#0", "evil.evil@0evil0.0!0", "evil.evil@0evil0.0EVIL0", "evil.evil@0evil0.0 0", "evil.evil@0evil0.0_0", "evil.evil@0~0.0evil0", "evil.evil@0}0.0evil0", "evil.evil@0|0.0evil0", "evil.evil@0{0.0evil0", "evil.evil@0`0.0evil0", "evil.evil@0^0.0evil0", "evil.evil@0@0.0evil0", "evil.evil@0?0.0evil0", "evil.evil@0=0.0evil0", "evil.evil@0;0.0evil0", "evil.evil@0/0.0evil0", "evil.evil@0.0.0evil0", "evil.evil@0+0.0evil0", "evil.evil@0*0.0evil0", "evil.evil@0&0.0evil0", "evil.evil@0%0.0evil0", "evil.evil@0$0.0evil0", "evil.evil@0#0.0evil0", "evil.evil@0!0.0evil0", "evil.evil@0eVil0.0evil0", "evil.evil@0EVIL0.0evil0", "evil.evil@0ev_il0.0evil0", "evil.evil@0ev il0.0evil0", "evil.evil@0 0.0evil0", "evil.evil@0_0.0evil0", "evil.@@0evil0.0evil0", "evil..@0evil0.0evil0", "evil. @0evil0.0evil0", "evil.@0evil0.0evil0"]}, {"regex": "^<(?:@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+(?:,@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+)*:)?([a-zA-Z0-9!#\\$%&&#39;\\*\\+\\-\\/=\\?\\^_`{\\|}~]+(?:\\.[a-zA-Z0-9!#\\$%&&#39;\\*\\+\\-\\/=\\?\\^_`{\\|}~]+)*@[a-z0-9][a-z0-9-]*[a-z0-9](?:\\.[a-z0-9][a-z0-9-]*[a-z0-9])+)>$", "exceptionStackTrace": null, "matches": ["<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evila>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0-0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0ev4il0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0e0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.060>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.00>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.aevil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evila.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0-0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0ev4il0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0e0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@060.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@00.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@aevil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.~@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.}@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.|@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.{@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.`@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.^@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.?@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.=@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.;@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil./@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.-@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.+@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.*@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.&@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.%@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.$@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.#@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.!@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.eVil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.EVIL@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.ev_il@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.ev4il@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.e@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.6@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil._@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:~.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:}.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:|.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:{.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:`.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:^.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:?.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:=.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:;.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:/.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:-.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:+.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:*.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:&.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:%.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:$.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:#.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:!.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:eVil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:EVIL.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:ev_il.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:ev4il.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:e.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:6.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:_.evil@0evil0.0evil0>", "<evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evila:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0-0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0ev4il0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0e0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.060:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.00:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.aevil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evila.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0-0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0ev4il0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0e0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@060.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@00.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@aevil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evila,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0-0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0ev4il0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0e0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.060,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.00,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.aevil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evila.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0-0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0ev4il0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0e0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@060.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@00.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@aevil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<evil@00.00>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>"], "nonMatches": ["<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0~0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0}0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0|0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0{0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0`0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0^0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0@0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0?0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0>0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0=0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0<0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0;0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0:0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0/0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0.0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0,0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0+0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0*0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0&0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0%0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0$0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0#0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0!0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0eVil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0EVIL0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0ev_il0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0ev il0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0 0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0_0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0~0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0}0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0|0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0{0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0`0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0^0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0@0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0?0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0>0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0=0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0<0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0;0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0:0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0/0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0.0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0,0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0+0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0*0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0&0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0%0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0$0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0#0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0!0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0eVil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0EVIL0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0ev_il0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0ev il0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0 0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.evil@0_0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.@@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.>@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.<@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.:@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil..@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.,@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.ev il@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil. @0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:evil.@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:@.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:>.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:<.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0::.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:..evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:,.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:ev il.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0: .evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0evil0:@0evil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0~0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0}0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0|0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0{0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0`0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0^0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0@0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0?0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0>0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0=0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0<0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0;0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0:0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0/0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0.0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0,0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0+0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0*0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0&0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0%0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0$0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0#0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0!0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0eVil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0EVIL0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0ev_il0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0ev il0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0 0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0evil0.0_0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0~0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0}0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0|0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0{0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0`0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0^0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0@0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0?0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0>0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0=0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0<0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0;0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0:0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0/0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0.0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0,0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0+0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0*0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0&0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0%0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0$0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0#0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0!0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0eVil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0EVIL0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0ev_il0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0ev il0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0 0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0evil0,@0_0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0~0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0}0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0|0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0{0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0`0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0^0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0@0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0?0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0>0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0=0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0<0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0;0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0:0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0/0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0.0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0,0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0+0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0*0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0&0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0%0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0$0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0#0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0!0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0eVil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0EVIL0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0ev_il0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0ev il0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0 0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0evil0.0_0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0~0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0}0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0|0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0{0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0`0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0^0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0@0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0?0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0>0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0=0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0<0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0;0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0:0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0/0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0.0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0,0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0+0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0*0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0&0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0%0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0$0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0#0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0!0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0eVil0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0EVIL0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0ev_il0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0ev il0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0 0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>", "<@0_0.0evil0,@0evil0.0evil0:evil.evil@0evil0.0evil0>"]}, {"regex": "[a-zA-Z]+\\-?[a-zA-Z]+", "exceptionStackTrace": null, "matches": ["evil-eVil", "evil-EVIL", "evil-ev_il", "evil-ev il", "evil-ev4il", "evil-e", "evil- ", "evil-6", "evil-_", "evil-", "evil--evil", "eVil-evil", "EVIL-evil", "ev_il-evil", "ev il-evil", "ev4il-evil", "e-evil", " -evil", "6-evil", "_-evil", "-evil", "evilevil", "evil-evil"], "nonMatches": []}, {"regex": "apple service center", "exceptionStackTrace": null, "matches": ["apple service center"], "nonMatches": []}, {"regex": "^\\$[+-]?([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(\\.[0-9]{1,2})?$", "exceptionStackTrace": null, "matches": ["$-0,000,000.0", "$-000,000.0", "$-0", "$-0.00", "$-00.0", "$0.0", "$+0.0", "$0", "$-0,000.0", "$-0.0"], "nonMatches": ["$-0,0000.0", "$-0,00.0", "$-0000,000.0", "$-,000.0", "$-0.0.0", "$-0.000", "$-0.", "$-.0", "$--0.0"]}, {"regex": "^http[s]?://([a-zA-Z0-9\\-]+\\.)*([a-zA-Z]{3,61}|[a-zA-Z]{1,}\\.[a-zA-Z]{2})/.*$", "exceptionStackTrace": null, "matches": ["https://evil.evil.aA/evil", "https://evil.eVil.AA/evil", "https://evil.EVIL.AA/evil", "https://evil.e.AA/evil", "https://evil.AAA/:", "https://evil.AAA//", "https://evil.AAA/.", "https://evil.AAA/-", "https://evil.AAA/eVil", "https://evil.AAA/EVIL", "https://evil.AAA/ev_il", "https://evil.AAA/ev il", "https://evil.AAA/ev4il", "https://evil.AAA/e", "https://evil.AAA/ ", "https://evil.AAA/6", "https://evil.AAA/_", "https://evil.AAA/", "https://evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/evil", "https://evil.AA/evil", "https://evil.aAA/evil", "https://evil.evil.AAA/evil", "https://AAA/evil", "https://-.AAA/evil", "https://eVil.AAA/evil", "https://EVIL.AAA/evil", "https://ev4il.AAA/evil", "https://e.AAA/evil", "https://6.AAA/evil", "http://evil.AAA/evil", "http://evil.AA/", "http://AAA/", "https://evil.evil.AA/evil", "https://evil.AAA/evil"], "nonMatches": ["https://evil.evil.A/evil", "https://evil.ev_il.AA/evil", "https://evil.ev il.AA/evil", "https://evil.ev4il.AA/evil", "https://evil. .AA/evil", "https://evil.6.AA/evil", "https://evil._.AA/evil", "https://evil..AA/evil", "https://evil.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/evil", "https://:.AAA/evil", "https:///.AAA/evil", "https://..AAA/evil", "https://ev_il.AAA/evil", "https://ev il.AAA/evil", "https:// .AAA/evil", "https://_.AAA/evil", "https://.AAA/evil", "httpss://evil.AAA/evil"]}, {"regex": "[0-9]{4}[0-3]{1}[0-9}{1}[0-9]{5}", "exceptionStackTrace": null, "matches": ["00000[[[[[[", "00000}[[[[", "00000{[[[[", "000001[[[[", "000000[[[[", "000000[[[[[", "00000[[[[["], "nonMatches": ["00000[[[[", "00004[[[[[", "0000[[[[["]}, {"regex": "^(http(s?)\\:\\/\\/)?(www.)?(([A-Za-z]+)([0-9]+)?([A-Za-z0-9\\.\\_\\-]+)?)(\\.)(([a-zA-Z]{2,})([0-9a-zA-Z]+)?)(\\:\\d{0,5})?(\\/|(\\/[A-Za-z]+([a-zA-Z0-9]+)?)+)?(\\?[a-zA-Z0-9\\\\\\&\\%\\_\\.\\/\\-\\=\\~\\*]+)?$", "exceptionStackTrace": null, "matches": ["https://wwwaevil0evil.AAevil:0/evilevil/evilevil?evil", "https://wwwaevil0evil.AAevil:0/evilevilevil?evil", "https://wwwaevil0evil.AAevil:0/evileVil?evil", "https://wwwaevil0evil.AAevil:0/evilEVIL?evil", "https://wwwaevil0evil.AAevil:0/evilev4il?evil", "https://wwwaevil0evil.AAevil:0/evile?evil", "https://wwwaevil0evil.AAevil:0/evil6?evil", "https://wwwaevil0evil.AAevil:0/eVilevil?evil", "https://wwwaevil0evil.AAevil:0/EVILevil?evil", "https://wwwaevil0evil.AAevil:0/ev4ilevil?evil", "https://wwwaevil0evil.AAevil:0/eevil?evil", "https://wwwaevil0evil.AAevil:0/evil?evil", "https://wwwaevil0evil.AAevil:0/", "https://wwwaevil0evil.AAevil:0/?~", "https://wwwaevil0evil.AAevil:0/?\\", "https://wwwaevil0evil.AAevil:0/?=", "https://wwwaevil0evil.AAevil:0/?/", "https://wwwaevil0evil.AAevil:0/?.", "https://wwwaevil0evil.AAevil:0/?-", "https://wwwaevil0evil.AAevil:0/?*", "https://wwwaevil0evil.AAevil:0/?&", "https://wwwaevil0evil.AAevil:0/?%", "https://wwwaevil0evil.AAevil:0/?eVil", "https://wwwaevil0evil.AAevil:0/?EVIL", "https://wwwaevil0evil.AAevil:0/?ev_il", "https://wwwaevil0evil.AAevil:0/?ev4il", "https://wwwaevil0evil.AAevil:0/?e", "https://wwwaevil0evil.AAevil:0/?6", "https://wwwaevil0evil.AAevil:0/?_", "https://wwwaevil0evil.AAevil:0?evil", "https://wwwaevil0evil.AAevil/?evil", "https://wwwaevil0evil.AAevil:00000/?evil", "https://wwwaevil0evil.AAevil:/?evil", "https://wwwaevil0evil.AAevilevil:0/?evil", "https://wwwaevil0evil.AAeVil:0/?evil", "https://wwwaevil0evil.AAEVIL:0/?evil", "https://wwwaevil0evil.AAev4il:0/?evil", "https://wwwaevil0evil.AAe:0/?evil", "https://wwwaevil0evil.AA6:0/?evil", "https://wwwaevil0evil.AA:0/?evil", "https://wwwaevil0evil.Aevil:0/?evil", "https://wwwaevil0evil.aAevil:0/?evil", "https://wwwaevil0evilevil.AAevil:0/?evil", "https://wwwaevil0..AAevil:0/?evil", "https://wwwaevil0-.AAevil:0/?evil", "https://wwwaevil0eVil.AAevil:0/?evil", "https://wwwaevil0EVIL.AAevil:0/?evil", "https://wwwaevil0ev_il.AAevil:0/?evil", "https://wwwaevil0ev4il.AAevil:0/?evil", "https://wwwaevil0e.AAevil:0/?evil", "https://wwwaevil06.AAevil:0/?evil", "https://wwwaevil0_.AAevil:0/?evil", "https://wwwaevil0.AAevil:0/?evil", "https://wwwaevil00evil.AAevil:0/?evil", "https://wwwaevilevil.AAevil:0/?evil", "https://wwwaeVil0evil.AAevil:0/?evil", "https://wwwaEVIL0evil.AAevil:0/?evil", "https://wwwaev_il0evil.AAevil:0/?evil", "https://wwwaev4il0evil.AAevil:0/?evil", "https://wwwae0evil.AAevil:0/?evil", "https://wwwa60evil.AAevil:0/?evil", "https://wwwa_0evil.AAevil:0/?evil", "https://wwwa0evil.AAevil:0/?evil", "https://wwwawwwaevil0evil.AAevil:0/?evil", "https://evil0evil.AAevil:0/?evil", "https://www~evil0evil.AAevil:0/?evil", "https://www_evil0evil.AAevil:0/?evil", "https://www\\evil0evil.AAevil:0/?evil", "https://wwwAevil0evil.AAevil:0/?evil", "https://www?evil0evil.AAevil:0/?evil", "https://www=evil0evil.AAevil:0/?evil", "https://www:evil0evil.AAevil:0/?evil", "https://www0evil0evil.AAevil:0/?evil", "https://www/evil0evil.AAevil:0/?evil", "https://www.evil0evil.AAevil:0/?evil", "https://www-evil0evil.AAevil:0/?evil", "https://www*evil0evil.AAevil:0/?evil", "https://www&evil0evil.AAevil:0/?evil", "https://www%evil0evil.AAevil:0/?evil", "https://www evil0evil.AAevil:0/?evil", "wwwaevil0evil.AAevil:0/?evil", "http://wwwaevil0evil.AAevil:0/?evil", "evil.AA", "https://wwwaevil0evil.AAevil:0/evilevil?evil", "https://wwwaevil0evil.AAevil:0/?evil"], "nonMatches": ["https://wwwaevil0evil.AAevil:0/evilev_il?evil", "https://wwwaevil0evil.AAevil:0/evilev il?evil", "https://wwwaevil0evil.AAevil:0/evil ?evil", "https://wwwaevil0evil.AAevil:0/evil_?evil", "https://wwwaevil0evil.AAevil:0/ev_ilevil?evil", "https://wwwaevil0evil.AAevil:0/ev ilevil?evil", "https://wwwaevil0evil.AAevil:0/ evil?evil", "https://wwwaevil0evil.AAevil:0/6evil?evil", "https://wwwaevil0evil.AAevil:0/_evil?evil", "https://wwwaevil0evil.AAevil:0/?evil?evil", "https://wwwaevil0evil.AAevil:0/??", "https://wwwaevil0evil.AAevil:0/?:", "https://wwwaevil0evil.AAevil:0/?ev il", "https://wwwaevil0evil.AAevil:0/? ", "https://wwwaevil0evil.AAevil:0/?", "https://wwwaevil0evil.AAevil:0//?evil", "https://wwwaevil0evil.AAevil:0:0/?evil", "https://wwwaevil0evil.AAevil:000000/?evil", "https://wwwaevil0evil.AAev_il:0/?evil", "https://wwwaevil0evil.AAev il:0/?evil", "https://wwwaevil0evil.AA :0/?evil", "https://wwwaevil0evil.AA_:0/?evil", "https://wwwaevil0~.AAevil:0/?evil", "https://wwwaevil0\\.AAevil:0/?evil", "https://wwwaevil0?.AAevil:0/?evil", "https://wwwaevil0=.AAevil:0/?evil", "https://wwwaevil0:.AAevil:0/?evil", "https://wwwaevil0/.AAevil:0/?evil", "https://wwwaevil0*.AAevil:0/?evil", "https://wwwaevil0&.AAevil:0/?evil", "https://wwwaevil0%.AAevil:0/?evil", "https://wwwaevil0ev il.AAevil:0/?evil", "https://wwwaevil0 .AAevil:0/?evil", "https://wwwaev il0evil.AAevil:0/?evil", "https://wwwa 0evil.AAevil:0/?evil", "https://https://wwwaevil0evil.AAevil:0/?evil", "httpss://wwwaevil0evil.AAevil:0/?evil"]}, {"regex": "^(\\d{5})([\\-\\ ]\\d{4})?$", "exceptionStackTrace": null, "matches": ["00000-0000", "00000", "00000 0000"], "nonMatches": ["00000 0000 0000", "00000 00000", "00000 000", "000000 0000", "0000 0000"]}, {"regex": "^([+0]\\d{1,3}[\\ \\-]?)?(\\()?([0-9]{3})(?(2)\\)|(\\))?)([\\-\\.\\ ])?([0-9]{3})(?(5)\\5|\\5?)([0-9]{4})$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (internal): Unexpected extension ?("}, "matches": [], "nonMatches": []}, {"regex": "^([A-Za-z]+)([0-9]+)?([A-Za-z0-9\\.\\_]+)?\\@(([A-Za-z]+)([0-9]+)?([A-Za-z0-9\\.\\_]+)?)((\\.)([a-zA-Z]+))$", "exceptionStackTrace": null, "matches": ["evil0evil@evil0evil.eVil", "evil0evil@evil0evil.EVIL", "evil0evil@evil0evil.e", "evil0evil@evil0evilevil.evil", "evil0evil@evil0..evil", "evil0evil@evil0eVil.evil", "evil0evil@evil0EVIL.evil", "evil0evil@evil0ev_il.evil", "evil0evil@evil0ev4il.evil", "evil0evil@evil0e.evil", "evil0evil@evil06.evil", "evil0evil@evil0_.evil", "evil0evil@evil0.evil", "evil0evil@evil00evil.evil", "evil0evil@evilevil.evil", "evil0evil@eVil0evil.evil", "evil0evil@EVIL0evil.evil", "evil0evil@ev_il0evil.evil", "evil0evil@ev4il0evil.evil", "evil0evil@e0evil.evil", "evil0evilevil@evil0evil.evil", "evil0.@evil0evil.evil", "evil0eVil@evil0evil.evil", "evil0EVIL@evil0evil.evil", "evil0ev_il@evil0evil.evil", "evil0ev4il@evil0evil.evil", "evil0e@evil0evil.evil", "evil06@evil0evil.evil", "evil0_@evil0evil.evil", "evil0@evil0evil.evil", "evil00evil@evil0evil.evil", "evilevil@evil0evil.evil", "eVil0evil@evil0evil.evil", "EVIL0evil@evil0evil.evil", "ev_il0evil@evil0evil.evil", "ev4il0evil@evil0evil.evil", "e0evil@evil0evil.evil", "evil@evil.evil", "evil0evil@evil0evil.evil"], "nonMatches": ["evil0evil@evil0evil.ev_il", "evil0evil@evil0evil.ev il", "evil0evil@evil0evil.ev4il", "evil0evil@evil0evil. ", "evil0evil@evil0evil.6", "evil0evil@evil0evil._", "evil0evil@evil0evil.", "evil0evil@evil0@.evil", "evil0evil@evil0ev il.evil", "evil0evil@evil0 .evil", "evil0evil@ev il0evil.evil", "evil0evil@ 0evil.evil", "evil0evil@60evil.evil", "evil0evil@_0evil.evil", "evil0evil@0evil.evil", "evil0@@evil0evil.evil", "evil0ev il@evil0evil.evil", "evil0 @evil0evil.evil", "ev il0evil@evil0evil.evil", " 0evil@evil0evil.evil", "60evil@evil0evil.evil", "_0evil@evil0evil.evil", "0evil@evil0evil.evil"]}, {"regex": "(15(8[48]|9[26]))|((1[6-9]|[2-9]\\d)(0[48]|[13579][26]|[2468][048]))|(([2468][048]|16|3579[26])00)", "exceptionStackTrace": null, "matches": ["3579200", "8400", "8000", "6800", "4800", "2800", "1684", "1680", "1668", "1648", "1628", "1692", "1676", "1656", "1636", "1616", "1604", "1592", "1584", "3579600", "1600", "8800", "2008", "1688", "1696", "1608", "1596", "1588"], "nonMatches": ["3579000", "8100", "0800", "0008", "1681", "1690", "1606", "1008", "1590", "1580"]}, {"regex": "^[a-z0-9_]{1}[a-z0-9\\-_]*(\\.[a-z0-9\\-_]+)*@[a-z0-9]{1}[a-z0-9\\-_]*(\\.[a-z0-9\\-_]+)*\\.[a-z]{2,4}$", "exceptionStackTrace": null, "matches": ["_evil.evil@0evil.evil.aaaa", "_evil.evil@0evil.evil.evil.aa", "_evil.evil@0evil.aa", "_evil.evil@0evil.-.aa", "_evil.evil@0evil.ev_il.aa", "_evil.evil@0evil.ev4il.aa", "_evil.evil@0evil.e.aa", "_evil.evil@0evil.6.aa", "_evil.evil@0evil._.aa", "_evil.evil@0-.evil.aa", "_evil.evil@0ev_il.evil.aa", "_evil.evil@0ev4il.evil.aa", "_evil.evil@0e.evil.aa", "_evil.evil@06.evil.aa", "_evil.evil@0_.evil.aa", "_evil.evil@0.evil.aa", "_evil.evil@00evil.evil.aa", "_evil.evil@evil.evil.aa", "_evil.evil@aevil.evil.aa", "_evil.evil.evil@0evil.evil.aa", "_evil@0evil.evil.aa", "_evil.-@0evil.evil.aa", "_evil.ev_il@0evil.evil.aa", "_evil.ev4il@0evil.evil.aa", "_evil.e@0evil.evil.aa", "_evil.6@0evil.evil.aa", "_evil._@0evil.evil.aa", "_-.evil@0evil.evil.aa", "_ev_il.evil@0evil.evil.aa", "_ev4il.evil@0evil.evil.aa", "_e.evil@0evil.evil.aa", "_6.evil@0evil.evil.aa", "__.evil@0evil.evil.aa", "_.evil@0evil.evil.aa", "__evil.evil@0evil.evil.aa", "evil.evil@0evil.evil.aa", "aevil.evil@0evil.evil.aa", "0evil.evil@0evil.evil.aa", "_@0.aa", "_evil.evil@0evil.evil.aa"], "nonMatches": ["_evil.evil@0evil.evil.aaaaa", "_evil.evil@0evil.evil.a", "_evil.evil@0evil.@.aa", "_evil.evil@0evil...aa", "_evil.evil@0evil.eVil.aa", "_evil.evil@0evil.EVIL.aa", "_evil.evil@0evil.ev il.aa", "_evil.evil@0evil. .aa", "_evil.evil@0evil..aa", "_evil.evil@0@.evil.aa", "_evil.evil@0..evil.aa", "_evil.evil@0eVil.evil.aa", "_evil.evil@0EVIL.evil.aa", "_evil.evil@0ev il.evil.aa", "_evil.evil@0 .evil.aa", "_evil.@@0evil.evil.aa", "_evil..@0evil.evil.aa", "_evil.eVil@0evil.evil.aa", "_evil.EVIL@0evil.evil.aa", "_evil.ev il@0evil.evil.aa", "_evil. @0evil.evil.aa", "_evil.@0evil.evil.aa", "_@.evil@0evil.evil.aa", "_..evil@0evil.evil.aa", "_eVil.evil@0evil.evil.aa", "_EVIL.evil@0evil.evil.aa", "_ev il.evil@0evil.evil.aa", "_ .evil@0evil.evil.aa"]}, {"regex": "[a-zA-Z]*( [a-zA-Z]*)?", "exceptionStackTrace": null, "matches": ["evil evil evil", "evil", "evil eVil", "evil EVIL", "evil ev_il", "evil ev il", "evil ev4il", "evil e", "evil  ", "evil 6", "evil _", "evil ", "eVil evil", "EVIL evil", "ev_il evil", "ev il evil", "ev4il evil", "e evil", "  evil", "6 evil", "_ evil", " evil", "", "evil evil"], "nonMatches": []}, {"regex": "(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})|(\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})", "exceptionStackTrace": null, "matches": ["000.000.000-000", "0000.000.000-00", "00.000.000/0000-000", "000.000.000/0000-00", "000.000.000-00", "00.000.000/0000-00"], "nonMatches": ["000.000.000-0", "000.000.0000-00", "000.000.00-00", "000.0000.000-00", "000.00.000-00", "00.000.000-00", "00.000.000/0000-0", "00.000.000/00000-00", "00.000.000/000-00", "00.000.0000/0000-00", "00.000.00/0000-00", "00.0000.000/0000-00", "00.00.000/0000-00", "0.000.000/0000-00"]}, {"regex": "^\\d*[0-9](\\.\\d?[0-9])?$", "exceptionStackTrace": null, "matches": ["00", "00.0", "000.00", "0.00", "0", "00.00"], "nonMatches": ["00.00.00", "00.000"]}, {"regex": "^((\\d{0,1}[0-9](\\.\\d{0,1}[0-9])?)|(100))$", "exceptionStackTrace": null, "matches": ["00", "00.0", "0.00", "0", "100", "00.00"], "nonMatches": ["00.00.00", "00.000", "000.00"]}, {"regex": "+919433736446", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "nothing to repeat"}, "matches": []}, {"regex": "&lt;[^&gt;]*\\n?.*=(&quot;|&#39;)?(.*\\.jpg)(&quot;|&#39;)?.*\\n?[^&lt;]*&gt;", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "([A-Z]:\\\\[^/:\\*;\\/\\:\\?<>\\|]+)|(\\\\{2}[^/:\\*;\\/\\:\\?<>\\|]+)", "exceptionStackTrace": null, "matches": ["\\\\\\", "\\\\eVil", "\\\\EVIL", "\\\\ev_il", "\\\\ev il", "\\\\ev4il", "\\\\e", "\\\\ ", "\\\\6", "\\\\_", "\\\\\\evil", "A:\\\\", "A:\\eVil", "A:\\EVIL", "A:\\ev_il", "A:\\ev il", "A:\\ev4il", "A:\\e", "A:\\ ", "A:\\6", "A:\\_", "\\\\evil", "A:\\evil"], "nonMatches": ["\\\\|", "\\\\?", "\\\\>", "\\\\<", "\\\\;", "\\\\:", "\\\\/", "\\\\*", "\\\\", "\\evil", "A:\\|", "A:\\?", "A:\\>", "A:\\<", "A:\\;", "A:\\:", "A:\\/", "A:\\*", "A:\\"]}, {"regex": "(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}\\.?\\t*\\s*){2}\\(\\r*\\n*([0-9]{1,})", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\t"}, "matches": [], "nonMatches": []}, {"regex": "1234", "exceptionStackTrace": null, "matches": ["1234"], "nonMatches": []}, {"regex": "^([a-zA-Z.\\s&#39;]{1,50})$", "exceptionStackTrace": null, "matches": [";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "a", "A", "9", "3", ".", "&", "#", " ", ";"], "nonMatches": [";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "", "0"]}, {"regex": "TIS-12-123", "exceptionStackTrace": null, "matches": ["TIS-12-123"], "nonMatches": []}, {"regex": "([a-zA-Z]{1}[a-zA-Z]*[\\s]{0,1}[a-zA-Z])+([\\s]{0,1}[a-zA-Z]+)", "exceptionStackTrace": null, "matches": ["Aevil A eVil", "Aevil A EVIL", "Aevil A ev_il", "Aevil A ev il", "Aevil A ev4il", "Aevil A e", "Aevil A  ", "Aevil A 6", "Aevil A _", "Aevil A ", "Aevil A  evil", "Aevil Aevil", "Aevil AAevil A evil", " evil", "Aevil a evil", "Aevil  A evil", "AevilA evil", "AeVil A evil", "AEVIL A evil", "Aev_il A evil", "Aev il A evil", "Aev4il A evil", "Ae A evil", "A  A evil", "A6 A evil", "A_ A evil", "A A evil", "AAevil A evil", "evil A evil", "aevil A evil", "AAevil", "Aevil A evil"], "nonMatches": []}, {"regex": "^[A-Z]{5}[0-9]{4}[A-Z]{1}$", "exceptionStackTrace": null, "matches": ["AAAAA0000A"], "nonMatches": ["AAAAA0000AA", "AAAAA0000", "AAAAA00000A", "AAAAA000A", "AAAAAA0000A", "AAAA0000A"]}, {"regex": "((^[0-9]*).?((BIS)|(TER)|(QUATER))?)?((\\W+)|(^))(([a-z]+.)*)([0-9]{5})?.(([a-z\\&#39;&#39;]+.)*)$", "exceptionStackTrace": null, "matches": ["0aBIS;evila00000aevilaevila", "0aBIS;evila00000a", "0aBIS;evila00000aevilA", "0aBIS;evila00000aevil;", "0aBIS;evila00000aevil0", "0aBIS;evila00000aevil&", "0aBIS;evila00000aevil#", "0aBIS;evila00000aevil ", "0aBIS;evila00000a;a", "0aBIS;evila00000a&a", "0aBIS;evila00000a#a", "0aBIS;evila00000aeVila", "0aBIS;evila00000aev_ila", "0aBIS;evila00000aev ila", "0aBIS;evila00000aev4ila", "0aBIS;evila00000aea", "0aBIS;evila00000a a", "0aBIS;evila00000Aevila", "0aBIS;evila00000;evila", "0aBIS;evila000000evila", "0aBIS;evila00000&evila", "0aBIS;evila00000#evila", "0aBIS;evila00000 evila", "0aBIS;evilaaevila", "0aBIS;evila000000aevila", "0aBIS;evilaevila00000aevila", "0aBIS;00000aevila", "0aBIS;evilA00000aevila", "0aBIS;evil;00000aevila", "0aBIS;evil000000aevila", "0aBIS;evil&00000aevila", "0aBIS;evil#00000aevila", "0aBIS;evil 00000aevila", "0aBIS;eVila00000aevila", "0aBIS;ev_ila00000aevila", "0aBIS;ev ila00000aevila", "0aBIS;ev4ila00000aevila", "0aBIS;ea00000aevila", "0aBIS;;evila00000aevila", "0aBIS&evila00000aevila", "0aBIS#evila00000aevila", "0aBIS evila00000aevila", "0aBIS0aBIS;evila00000aevila", ";evila00000aevila", "0aBISBIS;evila00000aevila", "0a;evila00000aevila", "0aaBIS;evila00000aevila", "0BIS;evila00000aevila", "0ABIS;evila00000aevila", "0;BIS;evila00000aevila", "00BIS;evila00000aevila", "0&BIS;evila00000aevila", "0#BIS;evila00000aevila", "0 BIS;evila00000aevila", "00aBIS;evila00000aevila", "aBIS;evila00000aevila", "a", ";a", "0aQUATER;evila00000aevila", "0aTER;evila00000aevila", "0aBIS;evila00000aevila"], "nonMatches": ["0aBIS;evila00000aEVILa", "0aBIS;evila00000a6a", "0aBIS;evila00000a_a", "0aBIS;evila00000aa", "0aBIS;evila0000000000aevila", "0aBIS;evila0000aevila", "0aBIS;EVILa00000aevila", "0aBIS; a00000aevila", "0aBIS;6a00000aevila", "0aBIS;_a00000aevila", "0aBIS;a00000aevila", "0aBISaevila00000aevila", "0aBIS_evila00000aevila", "0aBISAevila00000aevila", "0aBIS0evila00000aevila", "0aBISevila00000aevila"]}, {"regex": "A + B", "exceptionStackTrace": null, "matches": ["A   B", "A  B"], "nonMatches": ["A B"]}, {"regex": "grdfgr", "exceptionStackTrace": null, "matches": ["grdfgr"], "nonMatches": []}, {"regex": "username=(.*)&password=(.*)", "exceptionStackTrace": null, "matches": ["username=evil&password==", "username=evil&password=&", "username=evil&password=eVil", "username=evil&password=EVIL", "username=evil&password=ev_il", "username=evil&password=ev il", "username=evil&password=ev4il", "username=evil&password=e", "username=evil&password= ", "username=evil&password=6", "username=evil&password=_", "username=evil&password=", "username==&password=evil", "username=&&password=evil", "username=eVil&password=evil", "username=EVIL&password=evil", "username=ev_il&password=evil", "username=ev il&password=evil", "username=ev4il&password=evil", "username=e&password=evil", "username= &password=evil", "username=6&password=evil", "username=_&password=evil", "username=&password=evil", "username=&password=", "username=evil&password=evil"], "nonMatches": []}, {"regex": "\\b[A-z0-9._%-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (bad range): Invalid range: A-z"}, "matches": [], "nonMatches": []}, {"regex": "^((8|\\+38)-?)?(\\(?044\\)?)?-?\\d{3}-?\\d{2}-?\\d{2}$", "exceptionStackTrace": null, "matches": ["8-(044)-000-0000", "8-(044)-00000-00", "8-(044)000-00-00", "8--000-00-00", "8-(044-000-00-00", "8-044)-000-00-00", "(044)-000-00-00", "8(044)-000-00-00", "0000000", "+38-(044)-000-00-00", "8-(044)-000-00-00"], "nonMatches": ["8-(044)-000-00-000", "8-(044)-000-00-0", "8-(044)-000-00--00", "8-(044)-000-000-00", "8-(044)-000-0-00", "8-(044)-000--00-00", "8-(044)-0000-00-00", "8-(044)-00-00-00", "8-(044)--000-00-00", "8-(044)(044)-000-00-00", "8-(044))-000-00-00", "8-((044)-000-00-00", "8-8-(044)-000-00-00", "8--(044)-000-00-00"]}, {"regex": "^(([0-9]{1})|([0-9]{1}[0-9]{1})|([1-3]{1}[0-6]{1}[0-5]{1}))d(([0-9]{1})|(1[0-9]{1})|([1-2]{1}[0-3]{1}))h(([0-9]{1})|([1-5]{1}[0-9]{1}))m$", "exceptionStackTrace": null, "matches": ["10d0h0m", "0d14h0m", "0d1h0m", "0d0h1m", "100d0h0m", "00d0h0m", "0d10h0m", "0d0h10m", "0d0h0m"], "nonMatches": ["106d0h0m", "1000d0h0m", "170d0h0m", "1100d0h0m", "000d0h0m", "0d110h0m", "0d100h0m", "0d0h100m", "0d0h110m", "0d0h00m", "0d0hm", "0d00h0m", "0dh0m", "d0h0m"]}, {"regex": "^[a-zA-Z]+(([\\&#39;\\,\\.\\- ][a-zA-Z ])?[a-zA-Z]*)*\\s+&lt;(\\w[-._\\w]*\\w@\\w[-._\\w]*\\w\\.\\w{2,3})&gt;$|^(\\w[-._\\w]*\\w@\\w[-._\\w]*\\w\\.\\w{2,3})$", "exceptionStackTrace": null, "matches": ["aevila@aevila.aaa", "aevila@aevila._a", "aevila@aevila.Aa", "aevila@aevila.0a", "aevila@aevil_.aa", "aevila@aevilA.aa", "aevila@aevil0.aa", "aevila@a.a.aa", "aevila@a-a.aa", "aevila@aeVila.aa", "aevila@aEVILa.aa", "aevila@aev_ila.aa", "aevila@aev4ila.aa", "aevila@aea.aa", "aevila@a6a.aa", "aevila@a_a.aa", "aevila@aa.aa", "aevila@_evila.aa", "aevila@Aevila.aa", "aevila@0evila.aa", "aevil_@aevila.aa", "aevilA@aevila.aa", "aevil0@aevila.aa", "a.a@aevila.aa", "a-a@aevila.aa", "aeVila@aevila.aa", "aEVILa@aevila.aa", "aev_ila@aevila.aa", "aev4ila@aevila.aa", "aea@aevila.aa", "a6a@aevila.aa", "a_a@aevila.aa", "aa@aevila.aa", "_evila@aevila.aa", "Aevila@aevila.aa", "0evila@aevila.aa", "evil  evil &lt;aevila@aevila.aaa&gt;", "evil  evil &lt;aevila@aevila._a&gt;", "evil  evil &lt;aevila@aevila.Aa&gt;", "evil  evil &lt;aevila@aevila.0a&gt;", "evil  evil &lt;aevila@aevil_.aa&gt;", "evil  evil &lt;aevila@aevilA.aa&gt;", "evil  evil &lt;aevila@aevil0.aa&gt;", "evil  evil &lt;aevila@a.a.aa&gt;", "evil  evil &lt;aevila@a-a.aa&gt;", "evil  evil &lt;aevila@aeVila.aa&gt;", "evil  evil &lt;aevila@aEVILa.aa&gt;", "evil  evil &lt;aevila@aev_ila.aa&gt;", "evil  evil &lt;aevila@aev4ila.aa&gt;", "evil  evil &lt;aevila@aea.aa&gt;", "evil  evil &lt;aevila@a6a.aa&gt;", "evil  evil &lt;aevila@a_a.aa&gt;", "evil  evil &lt;aevila@aa.aa&gt;", "evil  evil &lt;aevila@_evila.aa&gt;", "evil  evil &lt;aevila@Aevila.aa&gt;", "evil  evil &lt;aevila@0evila.aa&gt;", "evil  evil &lt;aevil_@aevila.aa&gt;", "evil  evil &lt;aevilA@aevila.aa&gt;", "evil  evil &lt;aevil0@aevila.aa&gt;", "evil  evil &lt;a.a@aevila.aa&gt;", "evil  evil &lt;a-a@aevila.aa&gt;", "evil  evil &lt;aeVila@aevila.aa&gt;", "evil  evil &lt;aEVILa@aevila.aa&gt;", "evil  evil &lt;aev_ila@aevila.aa&gt;", "evil  evil &lt;aev4ila@aevila.aa&gt;", "evil  evil &lt;aea@aevila.aa&gt;", "evil  evil &lt;a6a@aevila.aa&gt;", "evil  evil &lt;a_a@aevila.aa&gt;", "evil  evil &lt;aa@aevila.aa&gt;", "evil  evil &lt;_evila@aevila.aa&gt;", "evil  evil &lt;Aevila@aevila.aa&gt;", "evil  evil &lt;0evila@aevila.aa&gt;", "evil  evil  &lt;aevila@aevila.aa&gt;", "evil  evil  evil &lt;aevila@aevila.aa&gt;", "evil &lt;aevila@aevila.aa&gt;", "evil  eVil &lt;aevila@aevila.aa&gt;", "evil  EVIL &lt;aevila@aevila.aa&gt;", "evil  ev il &lt;aevila@aevila.aa&gt;", "evil  e &lt;aevila@aevila.aa&gt;", "evil    &lt;aevila@aevila.aa&gt;", "evil   &lt;aevila@aevila.aa&gt;", "evil    evil &lt;aevila@aevila.aa&gt;", "evilevil &lt;aevila@aevila.aa&gt;", "evil aevil &lt;aevila@aevila.aa&gt;", "evil Aevil &lt;aevila@aevila.aa&gt;", "evil; evil &lt;aevila@aevila.aa&gt;", "evil9 evil &lt;aevila@aevila.aa&gt;", "evil3 evil &lt;aevila@aevila.aa&gt;", "evil. evil &lt;aevila@aevila.aa&gt;", "evil- evil &lt;aevila@aevila.aa&gt;", "evil, evil &lt;aevila@aevila.aa&gt;", "evil& evil &lt;aevila@aevila.aa&gt;", "evil# evil &lt;aevila@aevila.aa&gt;", "eVil  evil &lt;aevila@aevila.aa&gt;", "EVIL  evil &lt;aevila@aevila.aa&gt;", "ev il  evil &lt;aevila@aevila.aa&gt;", "e  evil &lt;aevila@aevila.aa&gt;", "aa@aa.aa", "evil &lt;aa@aa.aa&gt;", "aevila@aevila.aa", "evil  evil &lt;aevila@aevila.aa&gt;"], "nonMatches": ["aevila@aevila.aaaa", "aevila@aevila.a", "aevila@a@a.aa", "aevila@a;a.aa", "aevila@a,a.aa", "aevila@a&a.aa", "aevila@a#a.aa", "aevila@aev ila.aa", "aevila@a a.aa", "a@a@aevila.aa", "a;a@aevila.aa", "a,a@aevila.aa", "a&a@aevila.aa", "a#a@aevila.aa", "aev ila@aevila.aa", "a a@aevila.aa", "evil  evil &lt;aevila@aevila.aaaa&gt;", "evil  evil &lt;aevila@aevila.a&gt;", "evil  evil &lt;aevila@a@a.aa&gt;", "evil  evil &lt;aevila@a;a.aa&gt;", "evil  evil &lt;aevila@a,a.aa&gt;", "evil  evil &lt;aevila@a&a.aa&gt;", "evil  evil &lt;aevila@a#a.aa&gt;", "evil  evil &lt;aevila@aev ila.aa&gt;", "evil  evil &lt;aevila@a a.aa&gt;", "evil  evil &lt;a@a@aevila.aa&gt;", "evil  evil &lt;a;a@aevila.aa&gt;", "evil  evil &lt;a,a@aevila.aa&gt;", "evil  evil &lt;a&a@aevila.aa&gt;", "evil  evil &lt;a#a@aevila.aa&gt;", "evil  evil &lt;aev ila@aevila.aa&gt;", "evil  evil &lt;a a@aevila.aa&gt;", "evil  evil&lt;aevila@aevila.aa&gt;", "evil  ev_il &lt;aevila@aevila.aa&gt;", "evil  ev4il &lt;aevila@aevila.aa&gt;", "evil  6 &lt;aevila@aevila.aa&gt;", "evil  _ &lt;aevila@aevila.aa&gt;", "evil0 evil &lt;aevila@aevila.aa&gt;", "ev_il  evil &lt;aevila@aevila.aa&gt;", "ev4il  evil &lt;aevila@aevila.aa&gt;", "   evil &lt;aevila@aevila.aa&gt;", "6  evil &lt;aevila@aevila.aa&gt;", "_  evil &lt;aevila@aevila.aa&gt;", "  evil &lt;aevila@aevila.aa&gt;"]}, {"regex": "Kamagra f&#252;r h&#228;ufigste sexuelle Problem bei M&#228;nnern", "exceptionStackTrace": null, "matches": ["Kamagra f&#252;r h&#228;ufigste sexuelle Problem bei M&#228;nnern"], "nonMatches": []}, {"regex": "^[^\\s]+@[^\\.][^\\s]{1,}\\.[A-Za-z]{2,10}$", "exceptionStackTrace": null, "matches": ["evil@aevil.aaaaaaaaaa", "evil@aevil.Aa", "evil@a@.aa", "evil@a..aa", "evil@aeVil.aa", "evil@aEVIL.aa", "evil@aev_il.aa", "evil@aev4il.aa", "evil@ae.aa", "evil@a6.aa", "evil@a_.aa", "evil@Aevil.aa", "evil@@evil.aa", "evil@0evil.aa", "evil@ evil.aa", "@@aevil.aa", ".@aevil.aa", "eVil@aevil.aa", "EVIL@aevil.aa", "ev_il@aevil.aa", "ev4il@aevil.aa", "e@aevil.aa", "6@aevil.aa", "_@aevil.aa", "evil@aevil.aa"], "nonMatches": ["evil@aevil.aaaaaaaaaaa", "evil@aevil.a", "evil@aev il.aa", "evil@a .aa", "evil@a.aa", "evil@.evil.aa", "ev il@aevil.aa", " @aevil.aa", "@aevil.aa"]}, {"regex": "^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$", "exceptionStackTrace": null, "matches": ["evil.evil@0.0.0.000:0000", "evil.evil@000.0.0.0:0000", "evil.evil@evil.evil.aa", "evil.evil@evil.evil.aaaaaa:0000", "evil.evil@evil.evil.evil.aa:0000", "evil.evil@evil.aa:0000", "evil.evil@evil.-.aa:0000", "evil.evil@evil.ev4il.aa:0000", "evil.evil@evil.e.aa:0000", "evil.evil@evil.6.aa:0000", "evil.evil@-.evil.aa:0000", "evil.evil@ev4il.evil.aa:0000", "evil.evil@e.evil.aa:0000", "evil.evil@6.evil.aa:0000", "evil.evil.evil@evil.evil.aa:0000", "evil@evil.evil.aa:0000", "evil.-@evil.evil.aa:0000", "evil.eVil@evil.evil.aa:0000", "evil.EVIL@evil.evil.aa:0000", "evil.ev_il@evil.evil.aa:0000", "evil.ev4il@evil.evil.aa:0000", "evil.e@evil.evil.aa:0000", "evil.6@evil.evil.aa:0000", "evil._@evil.evil.aa:0000", "-.evil@evil.evil.aa:0000", "eVil.evil@evil.evil.aa:0000", "EVIL.evil@evil.evil.aa:0000", "ev_il.evil@evil.evil.aa:0000", "ev4il.evil@evil.evil.aa:0000", "e.evil@evil.evil.aa:0000", "6.evil@evil.evil.aa:0000", "_.evil@evil.evil.aa:0000", "evil@0.0.0.0", "evil@evil.aa", "evil.evil@0.0.0.0:0000", "evil.evil@evil.evil.aa:0000"], "nonMatches": ["evil.evil@0.0.0.0000:0000", "evil.evil@0.0.0.:0000", "evil.evil@0.0.0.0.0:0000", "evil.evil@0.0.0:0000", "evil.evil@0000.0.0.0:0000", "evil.evil@.0.0.0:0000", "evil.evil@evil.evil.aa:0000:0000", "evil.evil@evil.evil.aa:00000", "evil.evil@evil.evil.aa:000", "evil.evil@evil.evil.aaaaaaa:0000", "evil.evil@evil.evil.a:0000", "evil.evil@evil.@.aa:0000", "evil.evil@evil.:.aa:0000", "evil.evil@evil...aa:0000", "evil.evil@evil.eVil.aa:0000", "evil.evil@evil.EVIL.aa:0000", "evil.evil@evil.ev_il.aa:0000", "evil.evil@evil.ev il.aa:0000", "evil.evil@evil. .aa:0000", "evil.evil@evil._.aa:0000", "evil.evil@evil..aa:0000", "evil.evil@@.evil.aa:0000", "evil.evil@:.evil.aa:0000", "evil.evil@..evil.aa:0000", "evil.evil@eVil.evil.aa:0000", "evil.evil@EVIL.evil.aa:0000", "evil.evil@ev_il.evil.aa:0000", "evil.evil@ev il.evil.aa:0000", "evil.evil@ .evil.aa:0000", "evil.evil@_.evil.aa:0000", "evil.evil@.evil.aa:0000", "evil.@@evil.evil.aa:0000", "evil.:@evil.evil.aa:0000", "evil..@evil.evil.aa:0000", "evil.ev il@evil.evil.aa:0000", "evil. @evil.evil.aa:0000", "evil.@evil.evil.aa:0000", "@.evil@evil.evil.aa:0000", ":.evil@evil.evil.aa:0000", "..evil@evil.evil.aa:0000", "ev il.evil@evil.evil.aa:0000", " .evil@evil.evil.aa:0000", ".evil@evil.evil.aa:0000"]}, {"regex": "^[-]?([1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|\\.[0-9]{1,2})$", "exceptionStackTrace": null, "matches": ["-.00", "-0", "-0.00", "-0.", "-10", "-10.00", "-10.", "-100.0", "-1.0", "-110.0", "10.0", ".0", "0", "1", "-.0", "-0.0", "-10.0"], "nonMatches": ["-.000", "-.", "-0.0.0", "-0.000", "-10.0.0", "-10.000", "-00.0", "--10.0"]}, {"regex": "(\\+)?([-\\._\\(\\) ]?[\\d]{3,20}[-\\._\\(\\) ]?){2,10}", "exceptionStackTrace": null, "matches": ["+ 000  000  000  000  000  000  000  000  000  000  000 ", "+ 000  000  000  000  000  000  000  000  000  000 ", "+ 000 000 ", "+ 000_ 000 ", "+ 000. 000 ", "+ 000- 000 ", "+ 000) 000 ", "+ 000( 000 ", "+ 000000000000000000000  000 ", "+ 00000000000000000000  000 ", "+  000  000 ", "+000  000 ", "+_000  000 ", "+.000  000 ", "+-000  000 ", "+)000  000 ", "+(000  000 ", "++ 000  000 ", " 000  000 ", "000 000 ", "+ 000  000 "], "nonMatches": ["+ 000 ", "+ 000   000 ", "+ 00  000 "]}, {"regex": "(?n:^(?=\\d)((?<day>31(?!(.0?[2469]|11))|30(?!.0?2)|29(?(.0?2)(?=.{3,4}(1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(16|[2468][048]|[3579][26])00))|0?[1-9]|1\\d|2[0-8])(?<sep>[/.-])(?<month>0?[1-9]|1[012])\\2(?<year>(1[6-9]|[2-9]\\d)\\d{2})(?:(?=\\x20\\d)\\x20|$))?(?<time>((0?[1-9]|1[012])(:[0-5]\\d){0,2}(?i:\\ [AP]M))|([01]\\d|2[0-3])(:[0-5]\\d){1,2})?$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?n"}, "matches": []}, {"regex": "^([0-9a-fA-F]{4}|0)(\\:([0-9a-fA-F]{4}|0)){7}$", "exceptionStackTrace": null, "matches": ["AAAA:aAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:0AAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "aAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "0AAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:0:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "0:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:0:0:0:0:0:0:0", "AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA"], "nonMatches": ["AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:AAAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:AAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:gAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAA:GAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "AAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "gAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA", "GAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA:AAAA"]}, {"regex": "^(102[0-3]|10[0-1]\\d|[1-9][0-9]{0,2}|0)$", "exceptionStackTrace": null, "matches": ["100", "1", "0", "10", "1000", "1020"], "nonMatches": ["00", "1024"]}, {"regex": "^(4915[0-1]|491[0-4]\\d|490\\d\\d|4[0-8]\\d{3}|[1-3]\\d{4}|[2-9]\\d{3}|1[1-9]\\d{2}|10[3-9]\\d|102[4-9])$", "exceptionStackTrace": null, "matches": ["11000", "20000", "4000", "1024", "1030", "1100", "2000", "10000", "40000", "49000", "49100", "49150"], "nonMatches": ["1020", "110", "200", "0000", "100000", "1000", "00000", "400000", "49152"]}, {"regex": "^(6553[0-5]|655[0-2]\\d|65[0-4]\\d\\d|6[0-4]\\d{3}|5\\d{4}|49[2-9]\\d\\d|491[6-9]\\d|4915[2-9])$", "exceptionStackTrace": null, "matches": ["49152", "49160", "49200", "50000", "60000", "65000", "65500", "65530"], "nonMatches": ["49150", "49100", "49000", "500000", "5000", "600000", "6000", "65536"]}, {"regex": "^(4915[0-1]|491[0-4]\\d|490\\d\\d|4[0-8]\\d{3}|[1-3]\\d{4}|[1-9]\\d{0,3}|0)$", "exceptionStackTrace": null, "matches": ["1000", "4000", "1", "0", "10", "10000", "40000", "49000", "49100", "49150"], "nonMatches": ["00", "100000", "00000", "400000", "49152"]}, {"regex": "^(6553[0-5]|655[0-2]\\d|65[0-4]\\d\\d|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3}|0)$", "exceptionStackTrace": null, "matches": ["1000", "6000", "1", "0", "10", "10000", "60000", "65000", "65500", "65530"], "nonMatches": ["00", "100000", "00000", "600000", "65536"]}, {"regex": "^((([hH][tT][tT][pP][sS]?|[fF][tT][pP])\\:\\/\\/)?([\\w\\.\\-]+(\\:[\\w\\.\\&%\\$\\-]+)*@)?((([^\\s\\(\\)\\<\\>\\\\\\&quot;\\.\\[\\]\\,@;:]+)(\\.[^\\s\\(\\)\\<\\>\\\\\\&quot;\\.\\[\\]\\,@;:]+)*(\\.[a-zA-Z]{2,4}))|((([01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d{1,2}|2[0-4]\\d|25[0-5])))(\\b\\:(6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3}|0)\\b)?((\\/[^\\/][\\w\\.\\,\\?\\&#39;\\\\\\/\\+&%\\$#\\=~_\\-@]*)*[^\\.\\,\\?\\&quot;\\&#39;\\(\\)\\[\\]!;<>{}\\s\\x7F-\\xFF])?)$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 127"}, "matches": [], "nonMatches": []}, {"regex": "^((0?[1-9]|1[012])(\\s*:\\s*([0-5]\\d))?(\\s*:\\s*([0-5]\\d))?(\\s*([AaPp])[Mm]?)$|(2[0-3]|[1]\\d|0?\\d)(\\s*:\\s*([0-5]\\d))(\\s*:\\s*([0-5]\\d))?)$", "exceptionStackTrace": null, "matches": ["0 : 00 : 00", "20 : 00", "20 : 00 :  00", "20 : 00 :00", "20 : 00  : 00", "20 : 00: 00", "20 :  00 : 00", "20 :00 : 00", "20  : 00 : 00", "20: 00 : 00", "11 : 00 : 00 pm", "10 : 00 : 00 pm", "01 : 00 : 00 p", "01 : 00 : 00 pM", "01 : 00 : 00 am", "01 : 00 : 00 Pm", "01 : 00 : 00 Am", "01 : 00 : 00  pm", "01 : 00 : 00pm", "01 : 00 :  00 pm", "01 : 00 :00 pm", "01 : 00  : 00 pm", "01 : 00: 00 pm", "01 : 00 pm", "01 :  00 : 00 pm", "01 :00 : 00 pm", "01  : 00 : 00 pm", "01: 00 : 00 pm", "1 : 00 : 00 pm", "0:00", "10:00", "20:00", "12p", "1p", "00 : 00 : 00", "10 : 00 : 00", "20 : 00 : 00", "12 : 00 : 00 pm", "01 : 00 : 00 pm"], "nonMatches": ["000 : 00 : 00", "20 : 00 : 00 : 00", "20 : 00 : 60", "20 : 60 : 00", "24 : 00 : 00", "13 : 00 : 00 pm", "01 : 00 : 00 pmm", "01 : 00 : 00 pa", "01 : 00 : 00 pA", "01 : 00 : 00 bm", "01 : 00 : 00 Bm", "01 : 00 : 60 pm", "01 : 00 : 00 : 00 pm", "01 : 60 : 00 pm", "00 : 00 : 00 pm", "001 : 00 : 00 pm"]}, {"regex": "^(1\\s*[-\\/\\.]?)?(\\((\\d{3})\\)|(\\d{3}))\\s*[-\\/\\.]?\\s*(\\d{3})\\s*[-\\/\\.]?\\s*(\\d{4})\\s*(([xX]|[eE][xX][tT])\\.?\\s*(\\d+))*$", "exceptionStackTrace": null, "matches": ["1 .(000) . 000 . 0000 EXt. 0", "1 .(000) . 000 . 0000 ExT. 0", "1 .(000) . 000 . 0000 eXT. 0", "1 .(000) . 000 . 0000 X. 0X. 0", "1 .(000) . 000 . 0000 ", "1 .(000) . 000 . 0000 X. 00", "1 .(000) . 000 . 0000 X.  0", "1 .(000) . 000 . 0000 X.0", "1 .(000) . 000 . 0000 X 0", "1 .(000) . 000 . 0000 x. 0", "1 .(000) . 000 . 0000  X. 0", "1 .(000) . 000 . 0000X. 0", "1 .(000) . 000 .  0000 X. 0", "1 .(000) . 000 .0000 X. 0", "1 .(000) . 000  0000 X. 0", "1 .(000) . 000 / 0000 X. 0", "1 .(000) . 000 - 0000 X. 0", "1 .(000) . 000  . 0000 X. 0", "1 .(000) . 000. 0000 X. 0", "1 .(000) .  000 . 0000 X. 0", "1 .(000) .000 . 0000 X. 0", "1 .(000)  000 . 0000 X. 0", "1 .(000) / 000 . 0000 X. 0", "1 .(000) - 000 . 0000 X. 0", "1 .(000)  . 000 . 0000 X. 0", "1 .(000). 000 . 0000 X. 0", "(000) . 000 . 0000 X. 0", "1 (000) . 000 . 0000 X. 0", "1 /(000) . 000 . 0000 X. 0", "1 -(000) . 000 . 0000 X. 0", "1  .(000) . 000 . 0000 X. 0", "1.(000) . 000 . 0000 X. 0", "0000000000", "(000)0000000", "1 .000 . 000 . 0000 X. 0", "1 .(000) . 000 . 0000 EXT. 0", "1 .(000) . 000 . 0000 X. 0"], "nonMatches": ["1 .0000 . 000 . 0000 X. 0", "1 .00 . 000 . 0000 X. 0", "1 .(000) . 000 . 0000 EXa. 0", "1 .(000) . 000 . 0000 EXA. 0", "1 .(000) . 000 . 0000 EaT. 0", "1 .(000) . 000 . 0000 EAT. 0", "1 .(000) . 000 . 0000 aXT. 0", "1 .(000) . 000 . 0000 AXT. 0", "1 .(000) . 000 . 0000 X. ", "1 .(000) . 000 . 0000 X.. 0", "1 .(000) . 000 . 0000 a. 0", "1 .(000) . 000 . 0000 A. 0", "1 .(000) . 000 . 00000 X. 0", "1 .(000) . 000 . 000 X. 0", "1 .(000) . 000 .. 0000 X. 0", "1 .(000) . 0000 . 0000 X. 0", "1 .(000) . 00 . 0000 X. 0", "1 .(000) .. 000 . 0000 X. 0", "1 .(0000) . 000 . 0000 X. 0", "1 .(00) . 000 . 0000 X. 0", "1 .1 .(000) . 000 . 0000 X. 0", "1 ..(000) . 000 . 0000 X. 0"]}, {"regex": "^((([sS][r-tR-Tx-zX-Z])\\s*([sx-zSX-Z])?\\s*([a-zA-Z]{2,3}))?\\s*(\\d\\d)\\s*-?\\s*(\\d{6,7}))$", "exceptionStackTrace": null, "matches": ["SX S AA 00 - 0000000", "SX S AA 00 -  000000", "SX S AA 00 -000000", "SX S AA 00  000000", "SX S AA 00  - 000000", "SX S AA 00- 000000", "SX S AA  00 - 000000", "SX S AA00 - 000000", " 00 - 000000", "SX S AAA 00 - 000000", "SX S aA 00 - 000000", "SX S  AA 00 - 000000", "SX SAA 00 - 000000", "SX  AA 00 - 000000", "SX x AA 00 - 000000", "SX s AA 00 - 000000", "SX X AA 00 - 000000", "SX  S AA 00 - 000000", "SXS AA 00 - 000000", "Sx S AA 00 - 000000", "Sr S AA 00 - 000000", "SR S AA 00 - 000000", "sX S AA 00 - 000000", "00000000", "SX S AA 00 - 000000"], "nonMatches": ["SX S AA 00 - 00000000", "SX S AA 00 - 00000", "SX S AA 00 -- 000000", "SX S AASX S AA 00 - 000000", "SX S AAAA 00 - 000000", "SX S A 00 - 000000", "SX SS AA 00 - 000000", "SX a AA 00 - 000000", "SX A AA 00 - 000000", "Sa S AA 00 - 000000", "SA S AA 00 - 000000", "aX S AA 00 - 000000", "AX S AA 00 - 000000"]}, {"regex": "^#?(([fFcC0369])\\2){3}$", "exceptionStackTrace": null, "matches": ["999999", "#999999"], "nonMatches": ["#99999999", "#9999", "#f99999", "#c99999", "#a99999", "#F99999", "#C99999", "#A99999", "#699999", "#399999", "#199999", "#099999", "##999999"]}, {"regex": "\\<\\!doctype\\s+(([^\\s\\>]+)\\s+)?(([^\\s\\>]+)\\s*)?(\\&quot;([^\\/]+)\\/\\/([^\\/]+)\\/\\/([^\\s]+)\\s([^\\/]+)\\/\\/([^\\&quot;]+)\\&quot;)?(\\s*\\&quot;([^\\&quot;]+)\\&quot;)?\\>", "exceptionStackTrace": null, "matches": ["<!doctype evil evil &quot;evil//evil//evil evil//evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;>&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;<&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;/&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;!&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;eVil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;EVIL&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;ev_il&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;ev il&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;ev4il&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;e&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot; &quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;6&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;_&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot;  &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot;&quot;evil&quot;>", "<!doctype evil evil  &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//>&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//<&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil///&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//!&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//eVil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//EVIL&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//ev_il&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//ev il&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//ev4il&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//e&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil// &quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//6&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//_&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil >//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil <//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil ;//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil &//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil !//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil eVil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil EVIL//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil ev_il//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil ev il//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil ev4il//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil e//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil  //evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil 6//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil _//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//> evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//< evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//; evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil/// evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//& evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//! evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//eVil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//EVIL evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//ev_il evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//ev il evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//ev4il evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//e evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//6 evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//_ evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//>//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//<//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//;//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//&//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//!//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//eVil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//EVIL//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//ev_il//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//ev il//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//ev4il//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//e//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil// //evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//6//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//_//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;>//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;<//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;;//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;&//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;!//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;eVil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;EVIL//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;ev_il//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;ev il//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;ev4il//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;e//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot; //evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;6//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;_//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil  &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil&quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil > &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil < &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil ; &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil / &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil & &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil ! &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil eVil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil EVIL &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil ev_il &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil ev4il &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil e &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil   &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil 6 &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil _ &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil  &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil  evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evilevil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype > evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype < evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype ; evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype / evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype & evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype ! evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype eVil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype EVIL evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype ev_il evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype ev4il evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype e evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype   evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype 6 evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype _ evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype  evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype  evil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype >", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>"], "nonMatches": ["<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;;&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;&&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot; &quot;&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//evil&quot;&quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//;&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//&&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil evil//&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil ///evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//evil //evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil//  evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil//evil// evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil/////evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;evil////evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;///evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil &quot;//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil ev il &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype evil evil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctype ev il evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>", "<!doctypeevil evil &quot;evil//evil//evil evil//evil&quot; &quot;evil&quot;>"]}, {"regex": "^#(\\d{6})|^#([A-F]{6})|^#([A-F]|[0-9]){6}", "exceptionStackTrace": null, "matches": ["#AAAAAAA", "#0000000", "#A00000", "#AAAAAA", "#000000"], "nonMatches": ["#AAAAA", "#GAAAAA", "#00000"]}, {"regex": "dgbdfh", "exceptionStackTrace": null, "matches": ["dgbdfh"], "nonMatches": []}, {"regex": "^\\s*([\\(]?)\\[?\\s*\\d{3}\\s*\\]?[\\)]?\\s*[\\-]?[\\.]?\\s*\\d{3}\\s*[\\-]?[\\.]?\\s*\\d{4}$", "exceptionStackTrace": null, "matches": [" ([ 000 ]) -. 000 -.  0000", " ([ 000 ]) -. 000 -.0000", " ([ 000 ]) -. 000 - 0000", " ([ 000 ]) -. 000 . 0000", " ([ 000 ]) -. 000  -. 0000", " ([ 000 ]) -. 000-. 0000", " ([ 000 ]) -.  000 -. 0000", " ([ 000 ]) -.000 -. 0000", " ([ 000 ]) - 000 -. 0000", " ([ 000 ]) . 000 -. 0000", " ([ 000 ])  -. 000 -. 0000", " ([ 000 ])-. 000 -. 0000", " ([ 000 ] -. 000 -. 0000", " ([ 000 ) -. 000 -. 0000", " ([ 000  ]) -. 000 -. 0000", " ([ 000]) -. 000 -. 0000", " ([  000 ]) -. 000 -. 0000", " ([000 ]) -. 000 -. 0000", " ( 000 ]) -. 000 -. 0000", " [ 000 ]) -. 000 -. 0000", "  ([ 000 ]) -. 000 -. 0000", "([ 000 ]) -. 000 -. 0000", "0000000000", " ([ 000 ]) -. 000 -. 0000"], "nonMatches": [" ([ 000 ]) -. 000 -. 00000", " ([ 000 ]) -. 000 -. 000", " ([ 000 ]) -. 000 -.. 0000", " ([ 000 ]) -. 000 --. 0000", " ([ 000 ]) -. 0000 -. 0000", " ([ 000 ]) -. 00 -. 0000", " ([ 000 ]) -.. 000 -. 0000", " ([ 000 ]) --. 000 -. 0000", " ([ 000 ])) -. 000 -. 0000", " ([ 000 ]]) -. 000 -. 0000", " ([ 0000 ]) -. 000 -. 0000", " ([ 00 ]) -. 000 -. 0000", " ([[ 000 ]) -. 000 -. 0000", " (([ 000 ]) -. 000 -. 0000"]}, {"regex": "^[A-Z]{2}[0-9]{6}[A-DFM]{1}$", "exceptionStackTrace": null, "matches": ["AA000000F", "AA000000A", "AA000000M"], "nonMatches": ["AA000000MM", "AA000000", "AA000000E", "AA0000000M", "AA00000M", "AAA000000M", "A000000M"]}, {"regex": "^[A-Z]{1,2}[1-9][0-9]?[A-Z]? [0-9][A-Z]{2,}|GIR 0AA$", "exceptionStackTrace": null, "matches": ["A10 0AA", "A1A 0AA", "AA10A 0AA", "A1 0AA", "GIR 0AA", "A10A 0AA"], "nonMatches": ["A10A 0A", "A10AA 0AA", "A100A 0AA", "A00A 0AA", "AAA10A 0AA", "10A 0AA"]}, {"regex": "(\\$(([0-9]?)[a-zA-Z]+)([0-9]?))", "exceptionStackTrace": null, "matches": ["$0evil00", "$0evil", "$0eVil0", "$0EVIL0", "$0ev_il0", "$0ev il0", "$0ev4il0", "$0e0", "$evil0", "$evil", "$0evil0"], "nonMatches": ["$0 0", "$060", "$0_0", "$00", "$00evil0"]}, {"regex": "^\\{(.+)|^\\\\(.+)|(\\}*)", "exceptionStackTrace": null, "matches": ["}}", "\\}", "\\{", "\\\\", "\\eVil", "\\EVIL", "\\ev_il", "\\ev il", "\\ev4il", "\\e", "\\ ", "\\6", "\\_", "\\", "{}", "{{", "{\\", "{eVil", "{EVIL", "{ev_il", "{ev il", "{ev4il", "{e", "{ ", "{6", "{_", "{", "", "}", "\\evil", "{evil"], "nonMatches": []}, {"regex": "^([a-zA-Z0-9][a-zA-Z0-9_]*(\\.{0,1})?[a-zA-Z0-9\\-_]+)*(\\.{0,1})@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|([a-zA-Z0-9\\-]+(\\.([a-zA-Z]{2,10}))(\\.([a-zA-Z]{2,10}))?(\\.([a-zA-Z]{2,10}))?))[\\s]*$", "exceptionStackTrace": null, "matches": ["0evil.evil.@evil.AA.AA.AAAAAAAAAA ", "0evil.evil.@evil.AA.AA.aA ", "0evil.evil.@evil.AA.AA ", "0evil.evil.@evil.AA.AAAAAAAAAA.AA ", "0evil.evil.@evil.AA.aA.AA ", "0evil.evil.@evil.AAAAAAAAAA.AA.AA ", "0evil.evil.@evil.aA.AA.AA ", "0evil.evil.@-.AA.AA.AA ", "0evil.evil.@eVil.AA.AA.AA ", "0evil.evil.@EVIL.AA.AA.AA ", "0evil.evil.@ev4il.AA.AA.AA ", "0evil.evil.@e.AA.AA.AA ", "0evil.evil.@6.AA.AA.AA ", "0evil.evil.@[0.0.0.  ", "0evil.evil.@[0.0.0.", "0evil.evil.@[0.0.000. ", "0evil.evil.@[0.000.0. ", "0evil.evil.@[000.0.0. ", "0evil.evil@[0.0.0. ", "0evil.evil0evil.evil.@[0.0.0. ", ".@[0.0.0. ", "0evil.-.@[0.0.0. ", "0evil.eVil.@[0.0.0. ", "0evil.EVIL.@[0.0.0. ", "0evil.ev_il.@[0.0.0. ", "0evil.ev4il.@[0.0.0. ", "0evil.e.@[0.0.0. ", "0evil.6.@[0.0.0. ", "0evil._.@[0.0.0. ", "0evilevil.@[0.0.0. ", "0eVil.evil.@[0.0.0. ", "0EVIL.evil.@[0.0.0. ", "0ev_il.evil.@[0.0.0. ", "0ev4il.evil.@[0.0.0. ", "0e.evil.@[0.0.0. ", "06.evil.@[0.0.0. ", "0_.evil.@[0.0.0. ", "0.evil.@[0.0.0. ", "aevil.evil.@[0.0.0. ", "Aevil.evil.@[0.0.0. ", "@evil.AA", "@[0.0.0.", "0evil.evil.@evil.AA.AA.AA ", "0evil.evil.@[0.0.0. "], "nonMatches": ["0evil.evil.@evil.AA.AA.AAAAAAAAAAA ", "0evil.evil.@evil.AA.AA.A ", "0evil.evil.@evil.AA.AA.AA.AA ", "0evil.evil.@evil.AA.AAAAAAAAAAA.AA ", "0evil.evil.@evil.AA.A.AA ", "0evil.evil.@evil.AAAAAAAAAAA.AA.AA ", "0evil.evil.@evil.A.AA.AA ", "0evil.evil.@[.AA.AA.AA ", "0evil.evil.@@.AA.AA.AA ", "0evil.evil.@..AA.AA.AA ", "0evil.evil.@ev_il.AA.AA.AA ", "0evil.evil.@ev il.AA.AA.AA ", "0evil.evil.@ .AA.AA.AA ", "0evil.evil.@_.AA.AA.AA ", "0evil.evil.@.AA.AA.AA ", "0evil.evil.@[0.0.0000. ", "0evil.evil.@[0.0.. ", "0evil.evil.@[0.0000.0. ", "0evil.evil.@[0..0. ", "0evil.evil.@[0000.0.0. ", "0evil.evil.@[.0.0. ", "0evil.evil..@[0.0.0. ", "0evil.[.@[0.0.0. ", "0evil.@.@[0.0.0. ", "0evil...@[0.0.0. ", "0evil.ev il.@[0.0.0. ", "0evil. .@[0.0.0. ", "0evil..@[0.0.0. ", "0evil..evil.@[0.0.0. ", "0[.evil.@[0.0.0. ", "0@.evil.@[0.0.0. ", "0..evil.@[0.0.0. ", "0-.evil.@[0.0.0. ", "0ev il.evil.@[0.0.0. ", "0 .evil.@[0.0.0. "]}, {"regex": "^[a-zA-Z\\s]+$", "exceptionStackTrace": null, "matches": ["eVil", "EVIL", "ev il", "e", " ", "evil"], "nonMatches": ["ev_il", "ev4il", "6", "_", ""]}, {"regex": "^(?&lt;path&gt;(/?(?&lt;step&gt;\\w+))+)(?&lt;predicate&gt;\\[(?&lt;comparison&gt;\\s*(?&lt;lhs&gt;@\\w+)\\s*(?&lt;operator&gt;&lt;=|&gt;=|&lt;&gt;|=|&lt;|&gt;)\\s*(?&lt;rhs&gt;(&#39;[^&#39;]*&#39;|&quot;[^&quot;]*&quot;))\\s*(and|or)?)+\\])*$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?&"}, "matches": []}, {"regex": "^[a-zA-Z][0-9][a-zA-Z]\\s?[0-9][a-zA-Z][0-9]$", "exceptionStackTrace": null, "matches": ["A0A 0a0", "A0a 0A0", "a0A 0A0", "A0A0A0", "A0A 0A0"], "nonMatches": ["A0A  0A0"]}, {"regex": "^((\\d{5}-\\d{4})|(\\d{5})|([A-Z]\\d[A-Z]\\s\\d[A-Z]\\d))$", "exceptionStackTrace": null, "matches": ["A0A 0A0", "00000", "00000-0000"], "nonMatches": ["000000", "0000", "00000-00000", "00000-000", "000000-0000", "0000-0000"]}, {"regex": "(?<=(?:\\n|:|^)\\s*?)(if|end\\sif|elseif|else|for\\seach|for|next|call|class|exit|do|loop|const|dim|erase|option\\s(?:explicit|implicit)|(?:public|private|end)\\ssub|(?:public|private|end)\\sfunction|private|public|redim|select\\scase|end\\sselect|case\\selse|case|set|while|wend|with|end\\swith|on\\serror\\sgoto\\s0|on\\serror\\sresume\\snext|exit|end\\sclass|property\\slet|property\\sget|property\\sset)(?=\\s|$)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "look-behind requires fixed-width pattern"}, "matches": []}, {"regex": "(?<=[\\s=&\\+\\-,\\(\\)])(True|False|Nothing|Empty|Null)(?=[\\s=&\\+\\-,\\(\\)])", "exceptionStackTrace": null, "matches": [], "nonMatches": ["Null", "Empty", "Nothing", "False", "True"]}, {"regex": "(?<=\\s)(And|Or|Eqv|Imp|Is|Mod|Not|Xor)(?=\\s)", "exceptionStackTrace": null, "matches": [], "nonMatches": ["Xor", "Not", "Mod", "Is", "Imp", "Eqv", "Or", "And"]}, {"regex": "[ \\t]*?(?=\\r?\\n)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\t"}, "matches": [], "nonMatches": []}, {"regex": "(?<Code>[\\s\\S]*?)(?<NonCode>&#39;.*?\\r?\\n|(?<quot>&quot;|&#39;)(?:(?:(?!\\<quot>).|\\<quot>{2})*)(?:\\<quot>))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<C"}, "matches": []}, {"regex": "(?<Code>[\\s\\S]*?)(?<Comment>&#39;.*?\\r?\\n|(?<quot>&quot;|&#39;)(?:(?:(?!\\<quot>).|\\<quot>{2})*)(?:\\<quot>))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<C"}, "matches": []}, {"regex": "Muscle XTX", "exceptionStackTrace": null, "matches": ["Muscle XTX"], "nonMatches": []}, {"regex": "((\\+351|00351|351)?)(2\\d{1}|(9(3|6|2|1)))\\d{7}", "exceptionStackTrace": null, "matches": ["+3512000000000", "+351+351200000000", "910000000", "920000000", "960000000", "930000000", "200000000", "351200000000", "00351200000000", "+351910000000", "+351920000000", "+351960000000", "+351930000000", "+351200000000"], "nonMatches": ["+35120000000"]}, {"regex": "frgvr", "exceptionStackTrace": null, "matches": ["frgvr"], "nonMatches": []}, {"regex": "^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$", "exceptionStackTrace": null, "matches": ["2000-03-29", "2000-10-31", "2000-07-31", "2000-05-31", "2000-03-31", "2000-01-31", "2000-01-29", "1992-02-29", "1976-02-29", "1956-02-29", "1936-02-29", "1916-02-29", "1984-02-29", "1980-02-29", "1968-02-29", "1948-02-29", "1928-02-29", "1908-02-29", "1900-01-01", "2000-10-29", "2000-0,-30", "2000-0,-29", "2000-12-31", "2000-08-31", "2000-10-01", "2000-01-20", "2000-01-10", "2000-01-01", "2088-02-29", "1996-02-29", "1988-02-29"], "nonMatches": ["2000-13-29", "2000-00-29", "2000-11-31", "2000-00-31", "2000-13-01", "2000-01-00", "2000-00-01", "1990-02-29", "1906-02-29", "1981-02-29", "1918-02-29"]}, {"regex": "^\\\\(\\\\[\\w-]+){1,}(\\\\[\\w-()]+(\\s[\\w-()]+)*)+(\\\\(([\\w-()]+(\\s[\\w-()]+)*)+\\.[\\w]+)?)?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character range \\w-("}, "matches": []}, {"regex": "swadcef", "exceptionStackTrace": null, "matches": ["swadcef"], "nonMatches": []}, {"regex": "^(?:\\+254|254)(\\d{9})$", "exceptionStackTrace": null, "matches": ["254000000000", "+254000000000"], "nonMatches": ["+2540000000000", "+25400000000"]}, {"regex": "^\\\u20ac?(\\d{1,3}[.](\\d{3}[.])*\\d{3}|\\d+)([,]\\d{1,2})?$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "<built-in function run> returned a result with an exception set"}, "matches": []}, {"regex": "fef", "exceptionStackTrace": null, "matches": ["fef"], "nonMatches": []}, {"regex": "^(([0-9]{3})[ \\-\\/]?([0-9]{3})[ \\-\\/]?([0-9]{3}))|([0-9]{9})|([\\+]?([0-9]{3})[ \\-\\/]?([0-9]{2})[ \\-\\/]?([0-9]{3})[ \\-\\/]?([0-9]{3}))$", "exceptionStackTrace": null, "matches": ["+000/00/000000", "+000/00/000-000", "+000/00/000 000", "+000/00000/000", "+000/00-000/000", "+000/00 000/000", "+00000/000/000", "+000-00/000/000", "+000 00/000/000", "+0000/00/000/000", "++000/00/000/000", "000/00/000/000", "0000000000", "000/000/0000", "000/000000", "000/000-000", "000/000 000", "000000/000", "000-000/000", "000 000/000", "00000000000", "+000/00/000/000", "000000000", "000/000/000"], "nonMatches": ["+000/00/000/0000", "+000/00/000/00", "+000/00/000//000", "+000/00/0000/000", "+000/00/00/000", "+000/00//000/000", "+000/000/000/000", "+000/0/000/000", "+000//00/000/000", "+00/00/000/000", "00000000", "000/000/00", "000/000//000", "000/0000/000", "000/00/000", "000//000/000", "0000/000/000", "00/000/000"]}, {"regex": "ICON=&quot;[^&quot;]+&quot;", "exceptionStackTrace": null, "matches": ["ICON=&quot;=&quot;", "ICON=&quot;eVil&quot;", "ICON=&quot;EVIL&quot;", "ICON=&quot;ev_il&quot;", "ICON=&quot;ev il&quot;", "ICON=&quot;ev4il&quot;", "ICON=&quot;e&quot;", "ICON=&quot; &quot;", "ICON=&quot;6&quot;", "ICON=&quot;_&quot;", "ICON=&quot;evil&quot;"], "nonMatches": ["ICON=&quot;;&quot;", "ICON=&quot;&&quot;", "ICON=&quot;&quot;"]}, {"regex": "^\\w+\\W+(\\w+)([a-z])(\\w+)\\s\\&\\s\\w+\\W+\\1(?!\\2)[a-z]\\3$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["evil;evilaevil & evil;;evilaevil", "evil;evilaevil & evilevilaevil", "evil;evilaevil & evilaevilaevil", "evil;evilaevil & evil_evilaevil", "evil;evilaevil & evilAevilaevil", "evil;evilaevil & evil0evilaevil", "evil;evilaevil & evil&evilaevil", "evil;evilaevil & evil evilaevil", "evil;evilaevil & eVil;evilaevil", "evil;evilaevil & EVIL;evilaevil", "evil;evilaevil & ev_il;evilaevil", "evil;evilaevil & ev il;evilaevil", "evil;evilaevil & ev4il;evilaevil", "evil;evilaevil & e;evilaevil", "evil;evilaevil &  ;evilaevil", "evil;evilaevil & 6;evilaevil", "evil;evilaevil & _;evilaevil", "evil;evilaevil & ;evilaevil", "evil;evilaeVil & evil;evilaevil", "evil;evilaEVIL & evil;evilaevil", "evil;evilaev_il & evil;evilaevil", "evil;evilaev il & evil;evilaevil", "evil;evilaev4il & evil;evilaevil", "evil;evilae & evil;evilaevil", "evil;evila  & evil;evilaevil", "evil;evila6 & evil;evilaevil", "evil;evila_ & evil;evilaevil", "evil;evila & evil;evilaevil", "evil;eVilaevil & evil;evilaevil", "evil;EVILaevil & evil;evilaevil", "evil;ev_ilaevil & evil;evilaevil", "evil;ev ilaevil & evil;evilaevil", "evil;ev4ilaevil & evil;evilaevil", "evil;eaevil & evil;evilaevil", "evil; aevil & evil;evilaevil", "evil;6aevil & evil;evilaevil", "evil;_aevil & evil;evilaevil", "evil;aevil & evil;evilaevil", "evil;;evilaevil & evil;evilaevil", "evilevilaevil & evil;evilaevil", "evilaevilaevil & evil;evilaevil", "evil_evilaevil & evil;evilaevil", "evilAevilaevil & evil;evilaevil", "evil0evilaevil & evil;evilaevil", "evil&evilaevil & evil;evilaevil", "evil evilaevil & evil;evilaevil", "eVil;evilaevil & evil;evilaevil", "EVIL;evilaevil & evil;evilaevil", "ev_il;evilaevil & evil;evilaevil", "ev il;evilaevil & evil;evilaevil", "ev4il;evilaevil & evil;evilaevil", "e;evilaevil & evil;evilaevil", " ;evilaevil & evil;evilaevil", "6;evilaevil & evil;evilaevil", "_;evilaevil & evil;evilaevil", ";evilaevil & evil;evilaevil", "evil;evilaevil & evil;evilaevil"]}, {"regex": "^\\w+\\W+[a-z]\\W+(\\w+)([a-z])(\\w+)\\s\\&\\s\\w+\\W+[a-z]\\W+\\1(?!\\2)[a-z]\\3$", "exceptionStackTrace": null, "matches": [], "nonMatches": ["evil;a;evilaevil & evil;a;;evilaevil", "evil;a;evilaevil & evil;aevilaevil", "evil;a;evilaevil & evil;aaevilaevil", "evil;a;evilaevil & evil;a_evilaevil", "evil;a;evilaevil & evil;aAevilaevil", "evil;a;evilaevil & evil;a0evilaevil", "evil;a;evilaevil & evil;a&evilaevil", "evil;a;evilaevil & evil;a evilaevil", "evil;a;evilaevil & evil;;a;evilaevil", "evil;a;evilaevil & evila;evilaevil", "evil;a;evilaevil & evilaa;evilaevil", "evil;a;evilaevil & evil_a;evilaevil", "evil;a;evilaevil & evilAa;evilaevil", "evil;a;evilaevil & evil0a;evilaevil", "evil;a;evilaevil & evil&a;evilaevil", "evil;a;evilaevil & evil a;evilaevil", "evil;a;evilaevil & eVil;a;evilaevil", "evil;a;evilaevil & EVIL;a;evilaevil", "evil;a;evilaevil & ev_il;a;evilaevil", "evil;a;evilaevil & ev il;a;evilaevil", "evil;a;evilaevil & ev4il;a;evilaevil", "evil;a;evilaevil & e;a;evilaevil", "evil;a;evilaevil &  ;a;evilaevil", "evil;a;evilaevil & 6;a;evilaevil", "evil;a;evilaevil & _;a;evilaevil", "evil;a;evilaevil & ;a;evilaevil", "evil;a;evilaeVil & evil;a;evilaevil", "evil;a;evilaEVIL & evil;a;evilaevil", "evil;a;evilaev_il & evil;a;evilaevil", "evil;a;evilaev il & evil;a;evilaevil", "evil;a;evilaev4il & evil;a;evilaevil", "evil;a;evilae & evil;a;evilaevil", "evil;a;evila  & evil;a;evilaevil", "evil;a;evila6 & evil;a;evilaevil", "evil;a;evila_ & evil;a;evilaevil", "evil;a;evila & evil;a;evilaevil", "evil;a;eVilaevil & evil;a;evilaevil", "evil;a;EVILaevil & evil;a;evilaevil", "evil;a;ev_ilaevil & evil;a;evilaevil", "evil;a;ev ilaevil & evil;a;evilaevil", "evil;a;ev4ilaevil & evil;a;evilaevil", "evil;a;eaevil & evil;a;evilaevil", "evil;a; aevil & evil;a;evilaevil", "evil;a;6aevil & evil;a;evilaevil", "evil;a;_aevil & evil;a;evilaevil", "evil;a;aevil & evil;a;evilaevil", "evil;a;;evilaevil & evil;a;evilaevil", "evil;aevilaevil & evil;a;evilaevil", "evil;aaevilaevil & evil;a;evilaevil", "evil;a_evilaevil & evil;a;evilaevil", "evil;aAevilaevil & evil;a;evilaevil", "evil;a0evilaevil & evil;a;evilaevil", "evil;a&evilaevil & evil;a;evilaevil", "evil;a evilaevil & evil;a;evilaevil", "evil;;a;evilaevil & evil;a;evilaevil", "evila;evilaevil & evil;a;evilaevil", "evilaa;evilaevil & evil;a;evilaevil", "evil_a;evilaevil & evil;a;evilaevil", "evilAa;evilaevil & evil;a;evilaevil", "evil0a;evilaevil & evil;a;evilaevil", "evil&a;evilaevil & evil;a;evilaevil", "evil a;evilaevil & evil;a;evilaevil", "eVil;a;evilaevil & evil;a;evilaevil", "EVIL;a;evilaevil & evil;a;evilaevil", "ev_il;a;evilaevil & evil;a;evilaevil", "ev il;a;evilaevil & evil;a;evilaevil", "ev4il;a;evilaevil & evil;a;evilaevil", "e;a;evilaevil & evil;a;evilaevil", " ;a;evilaevil & evil;a;evilaevil", "6;a;evilaevil & evil;a;evilaevil", "_;a;evilaevil & evil;a;evilaevil", ";a;evilaevil & evil;a;evilaevil", "evil;a;evilaevil & evil;a;evilaevil"]}, {"regex": "^(?:(?<key>.+?)\\s*?=\\s*?(?<value>\\S.+?)\\s*)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<k"}, "matches": []}, {"regex": "T(?<action>\\w)?-(?<user>\\w+.+\\d)=(?<time>\\d+(?:\\.\\d+)?)", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<a"}, "matches": []}, {"regex": "^((\\(\\d{3}\\) ?)|(\\d{3}-)|(\\(\\d{2}\\) ?)|(\\d{2}-)|(\\(\\d{1}\\) ?)|(\\d{1}-))?\\d{3}-(\\d{3}|\\d{4})", "exceptionStackTrace": null, "matches": ["(0)000-000", "(00)000-000", "(000) 000-00000", "(000)000-000", "000-0000", "000-000", "0-000-000", "(0) 000-000", "00-000-000", "(00) 000-000", "000-000-000", "(000) 000-0000", "(000) 000-000"], "nonMatches": ["-000-000", "(0)  000-000", "() 000-000", "(00)  000-000", "0000-000-000", "(000) 000-00", "(000) 0000-000", "(000) 00-000", "(000) (000) 000-000", "(000)  000-000", "(0000) 000-000"]}, {"regex": "^\\(?\\d{3}?\\)?\\-?\\d{3}?\\-?\\d{4}?$", "exceptionStackTrace": null, "matches": ["(000)-0000000", "(000)000-0000", "(000-000-0000", "000)-000-0000", "0000000000", "(000)-000-0000"], "nonMatches": ["(000)-000-00000", "(000)-000-000", "(000)-000--0000", "(000)-0000-0000", "(000)-00-0000", "(000)--000-0000", "(000))-000-0000", "(0000)-000-0000", "(00)-000-0000", "((000)-000-0000"]}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "Facebook phone number ", "exceptionStackTrace": null, "matches": ["Facebook phone number "], "nonMatches": []}, {"regex": "(?:^|\\s)([a-z]{3,6}(?=://))?(://)?((?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))(?::(\\d{2,5}))?(?:\\s|$)", "exceptionStackTrace": null, "matches": ["aaa://10.250.250.250:00 ", "aaa://00.250.250.250:00 ", "aaa://000.250.250.250:00 ", "aaa://250.10.250.250:00 ", "aaa://250.00.250.250:00 ", "aaa://250.000.250.250:00 ", "aaa://250.250.10.250:00 ", "aaa://250.250.00.250:00 ", "aaa://250.250.000.250:00 ", "aaa://250.250.250.10:00 ", "aaa://250.250.250.00:00 ", "aaa://250.250.250.000:00 ", "aaa://250.250.250.250 ", "aaa://250.250.250.250:00000 ", "://250.250.250.250:00 ", "aaaaaa://250.250.250.250:00 ", " 250.250.250.250 ", "0.250.250.250 ", "200.250.250.250 ", "250.0.250.250 ", "250.200.250.250 ", "250.250.0.250 ", "250.250.200.250 ", "250.250.250.0 ", "250.250.250.200 ", "250.250.250.250", "250.250.250.250 ", " aaa://250.250.250.250:00 ", "aaa://100.250.250.250:00 ", "aaa://200.250.250.250:00 ", "aaa://250.100.250.250:00 ", "aaa://250.200.250.250:00 ", "aaa://250.250.100.250:00 ", "aaa://250.250.200.250:00 ", "aaa://250.250.250.100:00 ", "aaa://250.250.250.200:00 ", "aaa://250.250.250.250:00", "aaa://250.250.250.250:00 "], "nonMatches": ["aaa://1000.250.250.250:00 ", "aaa://1100.250.250.250:00 ", "aaa://250.1000.250.250:00 ", "aaa://250.1100.250.250:00 ", "aaa://250.250.1000.250:00 ", "aaa://250.250.1100.250:00 ", "aaa://250.250.250.1000:00 ", "aaa://250.250.250.1100:00 ", "aaa://250.250.250.250:00:00 ", "aaa://250.250.250.250:000000 ", "aaa://250.250.250.250:0 ", "aaa://250.250.250.256:00 ", "aaa://250.250.256.250:00 ", "aaa://250.256.250.250:00 ", "aaa://256.250.250.250:00 ", "aaa://://250.250.250.250:00 ", "aaa250.250.250.250:00 ", "aaaaaaa://250.250.250.250:00 ", "aa://250.250.250.250:00 "]}, {"regex": "^([a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9]\\.)+([a-zA-Z0-9]{3,5})$", "exceptionStackTrace": null, "matches": ["0evil0.00000", "0evil0.a00", "0evil0.A00", "0evil0.0evil0.000", "0evila.000", "0evilA.000", "0-0.000", "0eVil0.000", "0EVIL0.000", "0ev4il0.000", "0e0.000", "060.000", "aevil0.000", "Aevil0.000", "00.000", "0evil0.000"], "nonMatches": ["0evil0.000000", "0evil0.00", "000", "0.0.000", "0ev_il0.000", "0ev il0.000", "0 0.000", "0_0.000"]}, {"regex": "Gmail customer service", "exceptionStackTrace": null, "matches": ["Gmail customer service"], "nonMatches": []}, {"regex": "[a-zA-Z]{3,}://[a-zA-Z0-9\\.]+/*[a-zA-Z0-9/\\\\%_.]*\\?*[a-zA-Z0-9/\\\\%_.=&amp;]*", "exceptionStackTrace": null, "matches": ["AAA://evil/evil?\\", "AAA://evil/evil??", "AAA://evil/evil?=", "AAA://evil/evil?;", "AAA://evil/evil?:", "AAA://evil/evil?/", "AAA://evil/evil?.", "AAA://evil/evil?&", "AAA://evil/evil?%", "AAA://evil/evil?eVil", "AAA://evil/evil?EVIL", "AAA://evil/evil?ev_il", "AAA://evil/evil?ev il", "AAA://evil/evil?ev4il", "AAA://evil/evil?e", "AAA://evil/evil? ", "AAA://evil/evil?6", "AAA://evil/evil?_", "AAA://evil/evil?", "AAA://evil/evil??evil", "AAA://evil/evilevil", "AAA://evil/\\?evil", "AAA://evil/??evil", "AAA://evil/=?evil", "AAA://evil/;?evil", "AAA://evil/:?evil", "AAA://evil//?evil", "AAA://evil/.?evil", "AAA://evil/&?evil", "AAA://evil/%?evil", "AAA://evil/eVil?evil", "AAA://evil/EVIL?evil", "AAA://evil/ev_il?evil", "AAA://evil/ev il?evil", "AAA://evil/ev4il?evil", "AAA://evil/e?evil", "AAA://evil/ ?evil", "AAA://evil/6?evil", "AAA://evil/_?evil", "AAA://evil/?evil", "AAA://evil//evil?evil", "AAA://evilevil?evil", "AAA://./evil?evil", "AAA://eVil/evil?evil", "AAA://EVIL/evil?evil", "AAA://ev_il/evil?evil", "AAA://ev il/evil?evil", "AAA://ev4il/evil?evil", "AAA://e/evil?evil", "AAA://6/evil?evil", "aAA://evil/evil?evil", "AAA://evil", "AAA://evil/evil?evil"], "nonMatches": ["AAA://\\/evil?evil", "AAA://?/evil?evil", "AAA://=/evil?evil", "AAA://;/evil?evil", "AAA://:/evil?evil", "AAA:////evil?evil", "AAA://&/evil?evil", "AAA://%/evil?evil", "AAA:// /evil?evil", "AAA://_/evil?evil", "AAA:///evil?evil", "AA://evil/evil?evil"]}, {"regex": "(8[^0]\\d|8\\d[^0]|[0-79]\\d{2})-\\d{3}-\\d{4}", "exceptionStackTrace": null, "matches": ["9000-000-0000", "000-000-0000", "80A-000-0000", "801-000-0000", "80--000-0000", "80 -000-0000", "8a0-000-00000", "8A0-000-0000", "810-000-0000", "8-0-000-0000", "8 0-000-0000", "900-000-0000", "80a-000-0000", "8a0-000-0000"], "nonMatches": ["90-000-0000", "8a0-000-000", "8a0-0000-0000", "8a0-00-0000", "800-000-0000"]}, {"regex": "((\\(\\d{2}\\) ?)|(\\d{2}/))?\\d{2}/\\d{4} ([0-2][0-9]\\:[0-6][0-9])", "exceptionStackTrace": null, "matches": ["000/00/0000 00:00", "0/00/0000 00:00", "(00) 000/0000 00:00", "(00) (00) 00/0000 00:00", "(00)  00/0000 00:00", "(00)00/0000 00:00", "(000) 00/0000 00:00", "(0) 00/0000 00:00", "00/0000 00:00", "00/00/0000 00:00", "(00) 00/0000 00:00"], "nonMatches": ["(00) 00/0000 00:70", "(00) 00/0000 30:00", "(00) 00/00000 00:00", "(00) 00/000 00:00", "(00) 0/0000 00:00"]}, {"regex": "facebook customer support number", "exceptionStackTrace": null, "matches": ["facebook customer support number"], "nonMatches": []}, {"regex": "^( )*(\\+?( )?\\(?( )?(\\d{1,3})?)\\)?(.|-|_ )?\\(?(\\d{3})\\)?(.|-|_ )?\\(?(\\d{3})\\)?(.|-|_ )?\\(?(\\d{4})\\)?( )*$", "exceptionStackTrace": null, "matches": [" + ( 0)a(000)a(000)a(0000)  ", " + ( 0)a(000)a(000)a(0000)", " + ( 0)a(000)a(000)a(0000 ", " + ( 0)a(000)a(000)a0000) ", " + ( 0)a(000)a(000)(0000) ", " + ( 0)a(000)a(000)_(0000) ", " + ( 0)a(000)a(000)A(0000) ", " + ( 0)a(000)a(000)0(0000) ", " + ( 0)a(000)a(000)+(0000) ", " + ( 0)a(000)a(000))(0000) ", " + ( 0)a(000)a(000)((0000) ", " + ( 0)a(000)a(000) (0000) ", " + ( 0)a(000)a(000a(0000) ", " + ( 0)a(000)a000)a(0000) ", " + ( 0)a(000)(000)a(0000) ", " + ( 0)a(000)_(000)a(0000) ", " + ( 0)a(000)A(000)a(0000) ", " + ( 0)a(000)0(000)a(0000) ", " + ( 0)a(000)+(000)a(0000) ", " + ( 0)a(000))(000)a(0000) ", " + ( 0)a(000)((000)a(0000) ", " + ( 0)a(000) (000)a(0000) ", " + ( 0)a(000a(000)a(0000) ", " + ( 0)a000)a(000)a(0000) ", " + ( 0)(000)a(000)a(0000) ", " + ( 0)_(000)a(000)a(0000) ", " + ( 0)A(000)a(000)a(0000) ", " + ( 0)0(000)a(000)a(0000) ", " + ( 0)+(000)a(000)a(0000) ", " + ( 0))(000)a(000)a(0000) ", " + ( 0)((000)a(000)a(0000) ", " + ( 0) (000)a(000)a(0000) ", " + ( 0a(000)a(000)a(0000) ", " + ( 00)a(000)a(000)a(0000) ", " + ( 000)a(000)a(000)a(0000) ", " + ( )a(000)a(000)a(0000) ", " + (0)a(000)a(000)a(0000) ", " +  0)a(000)a(000)a(0000) ", " +( 0)a(000)a(000)a(0000) ", "  ( 0)a(000)a(000)a(0000) ", "  + ( 0)a(000)a(000)a(0000) ", "+ ( 0)a(000)a(000)a(0000) ", "0000000000", " + ( 0)_ (000)a(000)a(0000) ", " + ( 0)-(000)a(000)a(0000) ", " + ( 0)a(000)_ (000)a(0000) ", " + ( 0)a(000)-(000)a(0000) ", " + ( 0)a(000)a(000)_ (0000) ", " + ( 0)a(000)a(000)-(0000) ", " + ( 0)a(000)a(000)a(0000) "], "nonMatches": [" + ( 0)a(000)a(000)a(0000)) ", " + ( 0)a(000)a(000)a(00000) ", " + ( 0)a(000)a(000)a(000) ", " + ( 0)a(000)a(000)a((0000) ", " + ( 0)a(000)a(000)aa(0000) ", " + ( 0)a(000)a(000))a(0000) ", " + ( 0)a(000)a(0000)a(0000) ", " + ( 0)a(000)a(00)a(0000) ", " + ( 0)a(000)a((000)a(0000) ", " + ( 0)a(000)aa(000)a(0000) ", " + ( 0)a(000))a(000)a(0000) ", " + ( 0)a(0000)a(000)a(0000) ", " + ( 0)a(00)a(000)a(0000) ", " + ( 0)a((000)a(000)a(0000) ", " + ( 0)aa(000)a(000)a(0000) ", " + ( 0))a(000)a(000)a(0000) ", " + ( 0000)a(000)a(000)a(0000) ", " + (  0)a(000)a(000)a(0000) ", " + (( 0)a(000)a(000)a(0000) ", " +  ( 0)a(000)a(000)a(0000) ", " ++ ( 0)a(000)a(000)a(0000) "]}, {"regex": "^\\+32(?#8DIGIT)(?:1[0-69]|[23][2-8]|4[236-9]|5\\d|6[01345789]|7[01689]|8[0-79]|9[012])\\d{6}$", "exceptionStackTrace": null, "matches": ["+3291000000", "+3290000000", "+3280000000", "+3278000000", "+3276000000", "+3271000000", "+3270000000", "+3268000000", "+3267000000", "+3265000000", "+3264000000", "+3263000000", "+3261000000", "+3260000000", "+3246000000", "+3242000000", "+3222000000", "+3210000000", "+3292000000", "+3289000000", "+3279000000", "+3269000000", "+3250000000", "+3243000000", "+3232000000", "+3219000000"], "nonMatches": ["+3293000000", "+3288000000", "+3272000000", "+3262000000", "+3240000000", "+3230000000", "+3202000000", "+32190000000", "+321900000", "+3217000000"]}, {"regex": "^(\\$)?((\\d+)|(\\d{1,3})(\\,\\d{3})*)(\\.\\d{2,})?$", "exceptionStackTrace": null, "matches": ["$0,000,000.00", "$000,000.00", "$0", "$00.00", "0.00", "0", "$0,000.00", "$0.00"], "nonMatches": ["$0,0000.00", "$0,00.00", "$0000,000.00", "$,000.00", "$0.00.00", "$0.0", "$.00", "$$0.00"]}, {"regex": "((\\+44\\s?\\(0\\)\\s?\\d{2,4})|(\\+44\\s?(01|02|03|07|08)\\d{2,3})|(\\+44\\s?(1|2|3|7|8)\\d{2,3})|(\\(\\+44\\)\\s?\\d{3,4})|(\\(\\d{5}\\))|((01|02|03|07|08)\\d{2,3})|(\\d{5}))(\\s|-|.)(((\\d{3,4})(\\s|-)(\\d{3,4}))|((\\d{6,7})))", "exceptionStackTrace": null, "matches": ["000000 000 000", "010000 000 000", "01000 000 000", "(+44) 00000 000 000", "(+44) 0000 000 000", "+44 10000 000 000", "+44 1000 000 000", "+44 010000 000 000", "+44 01000 000 000", "+44  0100 000 000", "+44 (0) 00A000 000", "+44 (0) 000000 000", "+44 (0) 00+000 000", "+44 (0) 00)000 000", "+44 (0) 00(000 000", "+44 (0) 00 00000000", "+44 (0) 00 0000000", "+44 (0) 00 000 00000", "+44 (0) 00 000 0000", "+44 (0) 00 0000 000", "+44 (0) 00000 000 000", "+44 (0) 0000 000 000", "+44 (0)00 000 000", "+44(0) 00 000 000", "(+44)000 000 000", "+44800 000 000", "+44700 000 000", "+44300 000 000", "+44200 000 000", "+44100 000 000", "+440800 000 000", "+440700 000 000", "+440300 000 000", "+440200 000 000", "+440100 000 000", "+44(0)00a000 000", "+44(0)00-000 000", "+44(0)00 000000", "+44(0)00 000-000", "+44(0)00 000 000", "00000 000 000", "0800 000 000", "0700 000 000", "0300 000 000", "0200 000 000", "0100 000 000", "(00000) 000 000", "(+44) 000 000 000", "+44 800 000 000", "+44 700 000 000", "+44 300 000 000", "+44 200 000 000", "+44 100 000 000", "+44 0800 000 000", "+44 0700 000 000", "+44 0300 000 000", "+44 0200 000 000", "+44 0100 000 000", "+44 (0) 00a000 000", "+44 (0) 00-000 000", "+44 (0) 00 000000", "+44 (0) 00 000-000", "+44 (0) 00 000 000"], "nonMatches": ["0000 000 000", "010 000 000", "(000000) 000 000", "(0000) 000 000", "(+44) 00 000 000", "(+44)  000 000 000", "+44 10 000 000", "+44  100 000 000", "+44 010 000 000", "+44 (0) 00 00000", "+44 (0) 00 000 00", "+44 (0) 00 00000 000", "+44 (0) 00 00 000", "+44 (0) 0 000 000", "+44 (0)  00 000 000", "+44  (0) 00 000 000"]}, {"regex": "^([0-9]( |-)?)?(\\(?[0-9]{3}\\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$", "exceptionStackTrace": null, "matches": ["0 (000) a000000", "0 (000) A000000", "0 (000)000 0000", "0 (000 000 0000", "0 000) 000 0000", "(000) 000 0000", "0(000) 000 0000", "0000000000", "0-(000) 000 0000", "0 000 000 0000", "0 (000)-000 0000", "0 (000) 0000000", "0 (000) 000-0000", "0 (000) 000 0000"], "nonMatches": ["0 0000 000 0000", "0 00 000 0000", "0 (000) 00000000", "0 (000) 000000", "0 (000) 000 00000", "0 (000) 000 000", "0 (000) 000  0000", "0 (000) 0000 0000", "0 (000) 00 0000", "0 (000)  000 0000", "0 (000)) 000 0000", "0 (0000) 000 0000", "0 (00) 000 0000", "0 ((000) 000 0000", "0 0 (000) 000 0000", "0  (000) 000 0000"]}, {"regex": "\\[([\\w \\.]+)\\]\\(([\\w\\.:\\/ ]*)\\)", "exceptionStackTrace": null, "matches": ["[evil](:)", "[evil](/)", "[evil](.)", "[evil]())", "[evil](eVil)", "[evil](EVIL)", "[evil](ev_il)", "[evil](ev il)", "[evil](ev4il)", "[evil](e)", "[evil]( )", "[evil](6)", "[evil](_)", "[.](evil)", "[eVil](evil)", "[EVIL](evil)", "[ev_il](evil)", "[ev il](evil)", "[ev4il](evil)", "[e](evil)", "[ ](evil)", "[6](evil)", "[_](evil)", "[evil]()", "[evil](evil)"], "nonMatches": ["[evil](])", "[evil]([)", "[evil](()", "[]](evil)", "[[](evil)", "[:](evil)", "[/](evil)", "[)](evil)", "[(](evil)", "[](evil)"]}, {"regex": "^([A-Z]{1}\\w{1,3}) (\\d{1}[A-Z]{2})$", "exceptionStackTrace": null, "matches": ["Aaaa 0AA", "A_ 0AA", "AA 0AA", "A0 0AA", "AAa 0AA", "Aa 0AA"], "nonMatches": ["Aa 0AAA", "Aa 0A", "Aa 00AA", "Aa AA", "Aaaaa 0AA", "A 0AA", "a 0AA"]}, {"regex": "([0369]*([147][0369]*([147][0369]*[258])*[0369]*[147][0369]*([258][0369]*[147])*[0369]*[0369]*([258][0369]*[147])*[0369]*[147]|[258][0369]*([258][0369]*[147])*[0369]*[258][0369]*([147][0369]*[258])*[0369]*[0369]*([147][0369]*[258])*[0369]*[258]|[147][0369]*([147][0369]*[258])*[0369]*[258]|[258][0369]*([258][0369]*[147])*[0369]*[147])*[0369]*)*", "exceptionStackTrace": null, "matches": ["989897949", "989897919", "989897909", "9898979979", "98989779", "989897679", "989897379", "989897179", "989897079", "989897897979", "989979", "989894979", "989891979", "989890979", "9898997979", "98987979", "989867979", "989837979", "989817979", "989807979", "989597979", "989297979", "989097979", "9899897979", "98897979", "986897979", "983897979", "981897979", "980897979", "959897979", "929897979", "909897979", "979798959", "979798929", "979798909", "9797989989", "97979889", "979798689", "979798389", "979798189", "979798089", "979798798989", "979989", "979795989", "979792989", "979790989", "9797998989", "97978989", "979768989", "979738989", "979718989", "979708989", "979498989", "979198989", "979098989", "9799798989", "97798989", "976798989", "973798989", "971798989", "970798989", "949798989", "919798989", "909798989", "98989798979899798959", "98989798979899798929", "98989798979899798909", "989897989798997989989", "9898979897989979889", "98989798979899798689", "98989798979899798389", "98989798979899798189", "98989798979899798089", "98989798979899798798989", "98989798979899989", "98989798979899795989", "98989798979899792989", "98989798979899790989", "989897989798997998989", "9898979897989978989", "98989798979899768989", "98989798979899738989", "98989798979899718989", "98989798979899708989", "98989798979899498989", "98989798979899198989", "98989798979899098989", "98989798979896798989", "98989798979893798989", "98989798979891798989", "98989798979890798989", "989897989798999798989", "9898979897989798989", "98989798979869798989", "98989798979839798989", "98989798979819798989", "98989798979809798989", "98989798979879899798989", "98989798999798989", "98989798979599798989", "98989798979299798989", "98989798979099798989", "989897989799899798989", "9898979897899798989", "98989798976899798989", "98989798973899798989", "98989798971899798989", "98989798970899798989", "98989798949899798989", "98989798919899798989", "98989798909899798989", "989897989979899798989", "9898979879899798989", "98989798679899798989", "98989798379899798989", "98989798179899798989", "98989798079899798989", "98989795979899798989", "98989792979899798989", "98989790979899798989", "989897998979899798989", "9898978979899798989", "98989768979899798989", "98989738979899798989", "98989718979899798989", "98989708979899798989", "98989789798979899798989", "98998979899798989", "98989498979899798989", "98989198979899798989", "98989098979899798989", "989899798979899798989", "9898798979899798989", "98986798979899798989", "98983798979899798989", "98981798979899798989", "98980798979899798989", "98959798979899798989", "98929798979899798989", "98909798979899798989", "989989798979899798989", "9889798979899798989", "98689798979899798989", "98389798979899798989", "98189798979899798989", "98089798979899798989", "95989798979899798989", "92989798979899798989", "90989798979899798989", "9797989798979989797997979897989799897979", "979798979897998979799", "9797989798979989797", "97979897989799897976", "97979897989799897973", "97979897989799897971", "97979897989799897970", "97979897989799897977979897989799897979", "99", "97979897989799897949", "97979897989799897919", "97979897989799897909", "979798979897998979979", "9797989798979989779", "97979897989799897679", "97979897989799897379", "97979897989799897179", "97979897989799897079", "97979897989799897897979", "97979897989799979", "97979897989799894979", "97979897989799891979", "97979897989799890979", "979798979897998997979", "9797989798979987979", "97979897989799867979", "97979897989799837979", "97979897989799817979", "97979897989799807979", "97979897989799597979", "97979897989799297979", "97979897989799097979", "97979897989796897979", "97979897989793897979", "97979897989791897979", "97979897989790897979", "979798979897999897979", "9797989798979897979", "97979897989769897979", "97979897989739897979", "97979897989719897979", "97979897989709897979", "97979897989789799897979", "97979897999897979", "97979897989499897979", "97979897989199897979", "97979897989099897979", "979798979899799897979", "9797989798799897979", "97979897986799897979", "97979897983799897979", "97979897981799897979", "97979897980799897979", "97979897959799897979", "97979897929799897979", "97979897909799897979", "979798979989799897979", "9797989789799897979", "97979897689799897979", "97979897389799897979", "97979897189799897979", "97979897089799897979", "97979894989799897979", "97979891989799897979", "97979890989799897979", "979798997989799897979", "9797987989799897979", "97979867989799897979", "97979837989799897979", "97979817989799897979", "97979807989799897979", "97979879897989799897979", "97997989799897979", "97979597989799897979", "97979297989799897979", "97979097989799897979", "979799897989799897979", "9797897989799897979", "97976897989799897979", "97973897989799897979", "97971897989799897979", "97970897989799897979", "97949897989799897979", "97919897989799897979", "97909897989799897979", "979979897989799897979", "9779897989799897979", "97679897989799897979", "97379897989799897979", "97179897989799897979", "97079897989799897979", "94979897989799897979", "91979897989799897979", "90979897989799897979", "997979897989799897979", "7979897989799897979", "67979897989799897979", "37979897989799897979", "17979897989799897979", "07979897989799897979", "", "989897979", "979798989", "98989798979899798989", "97979897989799897979"], "nonMatches": []}, {"regex": "[+-]?(0|[1-9]([0-9]{0,2})(,[0-9]{3})*)(\\.[0-9]+)?", "exceptionStackTrace": null, "matches": ["-10,000,000.0", "-10.0", "-10,0000.0", "-10,00.0", "-1000,000.0", "-100,000.0", "-1,000.0", "-00,000.0", "-0.0.0", "-0", "-0.00", "-0.", "--0.0", "0.0", "+0.0", "1", "0", "-10,000.0", "-0.0"], "nonMatches": []}, {"regex": "[+-]?\\d(\\.\\d+)?[Ee][+-]?\\d+", "exceptionStackTrace": null, "matches": ["-0.0e-00", "-0.0e0", "-0.0e+0", "-0.0E-0", "-0.0.0e-0", "-0e-0", "-0.00e-0", "--0.0e-0", "0.0e-0", "+0.0e-0", "0e0", "-0.0e-0"], "nonMatches": ["-0.0e-", "-0.0e--0", "-0.0a-0", "-0.0A-0", "-0.e-0"]}, {"regex": "(\\w)(\\w)?(\\w)?\\w?(?(3)\\3)(?(2)\\2)\\1", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (internal): Unexpected extension ?("}, "matches": [], "nonMatches": []}, {"regex": "[ \\t]+$", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\t"}, "matches": [], "nonMatches": []}, {"regex": "[\\uFDD0-\\uFDEF]", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported hex value 64976"}, "matches": [], "nonMatches": []}, {"regex": "^(((0[0-9])|(1[0-9])|(2[0-3])):[0-5][0-9])$", "exceptionStackTrace": null, "matches": ["20:00", "10:00", "00:00"], "nonMatches": ["24:00", "00:60"]}, {"regex": "^(([&#209;A-Z|&#241;a-z|&amp;]{3}|[A-Z|a-z]{4})\\d{2}((0[1-9]|1[012])(0[1-9]|1\\d|2[0-8])|(0[13456789]|1[012])(29|30)|(0[13578]|1[02])31)(\\w{2})([A|a|0-9]{1}))$|^(([&#209;A-Z|&#241;a-z|&amp;]{3}|[A-Z|a-z]{4})([02468][048]|[13579][26])0229)(\\w{2})([A|a|0-9]{1})$", "exceptionStackTrace": null, "matches": ["|||880229aa|", "a|||880229aa|", "A|||880229aa|", ";;;920229aa|", ";;;760229aa|", ";;;560229aa|", ";;;360229aa|", ";;;160229aa|", ";;;880229aaa", ";;;880229aaA", ";;;880229aa0", ";;;880229_a|", ";;;880229Aa|", ";;;8802290a|", ";;;840229aa|", ";;;800229aa|", ";;;680229aa|", ";;;480229aa|", ";;;280229aa|", ";;;080229aa|", "|;;880229aa|", "p;;880229aa|", "m;;880229aa|", "b;;880229aa|", "a;;880229aa|", "A;;880229aa|", "9;;880229aa|", "4;;880229aa|", "2;;880229aa|", "1;;880229aa|", "0;;880229aa|", "&;;880229aa|", "#;;880229aa|", "|||000101aa|", "a|||000101aa|", "A|||000101aa|", ";;;001031aa|", ";;;000731aa|", ";;;000531aa|", ";;;000331aa|", ";;;000131aa|", ";;;001129aa|", ";;;001029aa|", ";;;000829aa|", ";;;000729aa|", ";;;000629aa|", ";;;000529aa|", ";;;000429aa|", ";;;000329aa|", ";;;001101aa|", ";;;001001aa|", ";;;000129aa|", ";;;000101aaa", ";;;000101aaA", ";;;000101aa0", ";;;000101_a|", ";;;000101Aa|", ";;;0001010a|", "|;;000101aa|", "p;;000101aa|", "m;;000101aa|", "b;;000101aa|", "a;;000101aa|", "A;;000101aa|", "9;;000101aa|", "4;;000101aa|", "2;;000101aa|", "1;;000101aa|", "0;;000101aa|", "&;;000101aa|", "#;;000101aa|", "||||880229aa|", ";;;960229aa|", ";;;880229aa|", "||||000101aa|", ";;;001231aa|", ";;;000831aa|", ";;;001229aa|", ";;;000930aa|", ";;;000929aa|", ";;;001201aa|", ";;;000120aa|", ";;;000110aa|", ";;;000101aa|"], "nonMatches": ["|||||880229aa|", ";;;900229aa|", ";;;060229aa|", ";;;880229aa||", ";;;880229aa", ";;;880229aab", ";;;880229aaB", ";;;880229aaa|", ";;;880229a|", ";;;810229aa|", ";;;180229aa|", ";;;;880229aa|", ";;880229aa|", "3;;880229aa|", "|||||000101aa|", ";;;001131aa|", ";;;000031aa|", ";;;001329aa|", ";;;000029aa|", ";;;001301aa|", ";;;000101aa||", ";;;000101aa", ";;;000101aab", ";;;000101aaB", ";;;000101aaa|", ";;;000101a|", ";;;000100aa|", ";;;000001aa|", ";;;0000101aa|", ";;;00101aa|", ";;;;000101aa|", ";;000101aa|", "3;;000101aa|"]}, {"regex": "<!--[\\d\\D]*?-->", "exceptionStackTrace": null, "matches": ["<!-->-->", "<!--<-->", "<!----->", "<!--!-->", "<!--eVil-->", "<!--EVIL-->", "<!--ev_il-->", "<!--ev il-->", "<!--ev4il-->", "<!--e-->", "<!-- -->", "<!--6-->", "<!--_-->", "<!---->", "<!--evil-->"], "nonMatches": []}, {"regex": "^\\d{2}[0-1][0-9][0-3][0-9]-{0,1}\\d{2}-{0,1}\\d{4}$", "exceptionStackTrace": null, "matches": ["000000-000000", "00000000-0000", "000000000000", "000000-00-0000"], "nonMatches": ["000000-00-00000", "000000-00-000", "000000-00--0000", "000000-000-0000", "000000-0-0000", "000000--00-0000", "000040-00-0000", "002000-00-0000", "0000000-00-0000", "00000-00-0000"]}, {"regex": "(0[1-9]|[12][0-9]|3[01])\\s(J(anuary|uly)|Ma(rch|y)|August|(Octo|Decem)ber)\\s[1-9][0-9]{3}|\n(0[1-9]|[12][0-9]|30)\\s(April|June|(Sept|Nov)ember)\\s[1-9][0-9]{3}|\n(0[1-9]|1[0-9]|2[0-8])\\sFebruary\\s[1-9][0-9]{3}|\n29\\sFebruary\\s((0[48]|[2468][048]|[13579][26])00|[0-9]{2}(0[48]|[2468][048]|[13579][26]))", "exceptionStackTrace": null, "matches": ["\n29 February 0092", "\n29 February 0076", "\n29 February 0056", "\n29 February 0036", "\n29 February 0016", "\n29 February 0084", "\n29 February 0080", "\n29 February 0068", "\n29 February 0048", "\n29 February 0028", "\n29 February 0004", "\n29 February 9200", "\n29 February 7600", "\n29 February 5600", "\n29 February 3600", "\n29 February 1600", "\n29 February 8400", "\n29 February 8000", "\n29 February 6800", "\n29 February 4800", "\n29 February 2800", "\n29 February 0400", "\n01 February 10000", "\n10 April 1000", "\n01 April 10000", "30 January 1000", "10 January 1000", "01 January 10000", "\n29 February 0096", "\n29 February 0088", "\n29 February 0008", "\n29 February 9600", "\n29 February 8800", "\n29 February 0800", "\n20 February 1000", "\n10 February 1000", "\n01 February 1000", "\n30 April 1000", "\n20 April 1000", "\n01 November 1000", "\n01 September 1000", "\n01 June 1000", "\n01 April 1000", "31 January 1000", "20 January 1000", "01 December 1000", "01 October 1000", "01 August 1000", "01 May 1000", "01 March 1000", "01 July 1000", "01 January 1000"], "nonMatches": ["\n29 February 0090", "\n29 February 0006", "\n29 February 0081", "\n29 February 00008", "\n29 February 008", "\n29 February 9000", "\n29 February 0600", "\n29 February 8100", "\n29 February 0000", "\n29 February 1000", "\n01 February 100", "\n01 February 0000", "\n00 February 1000", "\n01 April 100", "\n01 April 0000", "\n00 April 1000", "32 January 1000", "01 January 100", "01 January 0000", "00 January 1000"]}, {"regex": "^(?:(?:\\+?1[\\s])|(?:\\+?1(?=(?:\\()|(?:\\d{10})))|(?:\\+?1[\\-](?=\\d)))?(?:\\([2-9]\\d{2}\\)\\ ?|[2-9]\\d{2}(?:\\-?|\\ ?))[2-9]\\d{2}[- ]?\\d{4}$", "exceptionStackTrace": null, "matches": ["1(200) 200 0000", "+1 200200 0000", "+1 (200) 2000000", "+1 (200) 200-0000", "+1 (200)200 0000", "(200) 200 0000", "1 (200) 200 0000", "2002000000", "(200)2000000", "+1(200) 200 0000", "+1 200 200 0000", "+1 200-200 0000", "+1 (200) 200 0000"], "nonMatches": ["++1-(200) 200 0000", "1-(200) 200 0000", "++1(200) 200 0000", "+1 200  200 0000", "+1 200--200 0000", "+1 2000-200 0000", "+1 20-200 0000", "+1 000-200 0000", "+1 (200) 200 00000", "+1 (200) 200 000", "+1 (200) 200  0000", "+1 (200) 2000 0000", "+1 (200) 20 0000", "+1 (200) 000 0000", "+1 (200)  200 0000", "+1 (2000) 200 0000", "+1 (20) 200 0000", "+1 (000) 200 0000", "+1 +1 (200) 200 0000", "++1 (200) 200 0000", "+1-(200) 200 0000"]}, {"regex": "(?:^(?:(?:\\+?1[\\s])|(?:\\+?1(?=(?:\\()|(?:\\d{10})))|(?:\\+?1[\\-](?=\\d)))?(?:\\([2-9]\\d{2}\\)\\ ?|[2-9]\\d{2}(?:\\-?|\\ ?))[2-9]\\d{2}[- ]?\\d{4}$)|(?:^[2-9]\\d{2}[- ]?\\d{4}$)", "exceptionStackTrace": null, "matches": ["200-0000", "1(200) 200 0000", "+1 200200 0000", "+1 (200) 2000000", "+1 (200) 200-0000", "+1 (200)200 0000", "(200) 200 0000", "1 (200) 200 0000", "2000000", "2002000000", "(200)2000000", "200 0000", "+1(200) 200 0000", "+1 200 200 0000", "+1 200-200 0000", "+1 (200) 200 0000"], "nonMatches": ["200 00000", "200 000", "200  0000", "2000 0000", "20 0000", "000 0000", "++1-(200) 200 0000", "1-(200) 200 0000", "++1(200) 200 0000", "+1 200  200 0000", "+1 200--200 0000", "+1 2000-200 0000", "+1 20-200 0000", "+1 000-200 0000", "+1 (200) 200 00000", "+1 (200) 200 000", "+1 (200) 200  0000", "+1 (200) 2000 0000", "+1 (200) 20 0000", "+1 (200) 000 0000", "+1 (200)  200 0000", "+1 (2000) 200 0000", "+1 (20) 200 0000", "+1 (000) 200 0000", "+1 +1 (200) 200 0000", "++1 (200) 200 0000", "+1-(200) 200 0000"]}, {"regex": "^(?<title>.*\\.\\s)*(?<firstname>([A-Z][a-z]+\\s*)+)(\\s)(?<middleinitial>([A-Z]\\.?\\s)*)(?<lastname>[A-Z][a-zA-Z-&#39;]+)(?<suffix>.*)$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<t"}, "matches": []}, {"regex": "^[a-zA-Z_][a-zA-Z0-9_]*$", "exceptionStackTrace": null, "matches": ["_eVil", "_EVIL", "_ev_il", "_ev4il", "_e", "_6", "__", "aevil", "Aevil", "_", "_evil"], "nonMatches": ["_ev il", "_ "]}, {"regex": "^((((0[1-9]|[12][0-9]|3[01])(0[13578]|10|12)(\\d{2}))|(([0][1-9]|[12][0-9]|30)(0[469]|11)(\\d{2}))|((0[1-9]|1[0-9]|2[0-8])(02)(\\d{2}))|((29)(02)(00))|((29)(02)([2468][048]))|((29)(02)([13579][26])))[-]\\d{4})$", "exceptionStackTrace": null, "matches": ["290292-0000", "290276-0000", "290256-0000", "290236-0000", "290216-0000", "290284-0000", "290280-0000", "290268-0000", "290248-0000", "290228-0000", "100900-0000", "010600-0000", "010400-0000", "300800-0000", "100800-0000", "010700-0000", "010500-0000", "010300-0000", "010100-0000", "290296-0000", "290288-0000", "290200-0000", "200200-0000", "100200-0000", "010200-0000", "300900-0000", "200900-0000", "011100-0000", "010900-0000", "310800-0000", "200800-0000", "011200-0000", "011000-0000", "010800-0000"], "nonMatches": ["290290-0000", "290206-0000", "290281-0000", "290208-0000", "0102000-0000", "01020-0000", "000200-0000", "0109000-0000", "01090-0000", "000900-0000", "320800-0000", "010800-00000", "010800-000", "0108000-0000", "01080-0000", "010000-0000", "000800-0000"]}, {"regex": "[a-z]{1}[a-z0-9\\-_\\.]{2,24}@tlen\\.pl", "exceptionStackTrace": null, "matches": ["a........................@tlen.pl", "aa.@tlen.pl", "a_.@tlen.pl", "a0.@tlen.pl", "a-.@tlen.pl", "aa..@tlen.pl", "a..@tlen.pl"], "nonMatches": ["a.........................@tlen.pl", "a.@tlen.pl", "..@tlen.pl"]}, {"regex": "[a-zA-Z_:][a-zA-Z0-9_,\\.\\-]*?", "exceptionStackTrace": null, "matches": ["::", ":.", ":-", ":,", ":eVil", ":EVIL", ":ev_il", ":ev il", ":ev4il", ":e", ": ", ":6", ":_", "aevil", "_evil", "Aevil", ":", ":evil"], "nonMatches": []}, {"regex": "do not show", "exceptionStackTrace": null, "matches": ["do not show"], "nonMatches": []}, {"regex": "(.)\\1{2,}", "exceptionStackTrace": null, "matches": ["aaa"], "nonMatches": ["aa", "_aa", "Aaa", "0aa", " aa"]}, {"regex": "<.*\\b(bgcolor\\s*=\\s*[\\&quot;|\\&#39;]*(\\#\\w{6})[\\&quot;|\\&#39;]*).*>", "exceptionStackTrace": null, "matches": ["<|bgcolor = ;#aaaaaa;evil>", "<>bgcolor = ;#aaaaaa;evil>", "<=bgcolor = ;#aaaaaa;evil>", "<<bgcolor = ;#aaaaaa;evil>", "<;bgcolor = ;#aaaaaa;evil>", "<&bgcolor = ;#aaaaaa;evil>", "<#bgcolor = ;#aaaaaa;evil>", "< bgcolor = ;#aaaaaa;evil>", "<bgcolor = ;#aaaaaa;evil>", "<bgcolor=#aaaaaa>"], "nonMatches": ["<evilbgcolor = ;#aaaaaa;|>", "<evilbgcolor = ;#aaaaaa;>>", "<evilbgcolor = ;#aaaaaa;=>", "<evilbgcolor = ;#aaaaaa;<>", "<evilbgcolor = ;#aaaaaa;;>", "<evilbgcolor = ;#aaaaaa;&>", "<evilbgcolor = ;#aaaaaa;#>", "<evilbgcolor = ;#aaaaaa;eVil>", "<evilbgcolor = ;#aaaaaa;EVIL>", "<evilbgcolor = ;#aaaaaa;ev_il>", "<evilbgcolor = ;#aaaaaa;ev il>", "<evilbgcolor = ;#aaaaaa;ev4il>", "<evilbgcolor = ;#aaaaaa;e>", "<evilbgcolor = ;#aaaaaa; >", "<evilbgcolor = ;#aaaaaa;6>", "<evilbgcolor = ;#aaaaaa;_>", "<evilbgcolor = ;#aaaaaa;>", "<evilbgcolor = ;#aaaaaa;;evil>", "<evilbgcolor = ;#aaaaaaevil>", "<evilbgcolor = ;#aaaaaa|evil>", "<evilbgcolor = ;#aaaaaauevil>", "<evilbgcolor = ;#aaaaaatevil>", "<evilbgcolor = ;#aaaaaaqevil>", "<evilbgcolor = ;#aaaaaaoevil>", "<evilbgcolor = ;#aaaaaaaevil>", "<evilbgcolor = ;#aaaaaa9evil>", "<evilbgcolor = ;#aaaaaa3evil>", "<evilbgcolor = ;#aaaaaa0evil>", "<evilbgcolor = ;#aaaaaa&evil>", "<evilbgcolor = ;#aaaaaa#evil>", "<evilbgcolor = ;#aaaaaaa;evil>", "<evilbgcolor = ;#aaaaa;evil>", "<evilbgcolor = ;#_aaaaa;evil>", "<evilbgcolor = ;#Aaaaaa;evil>", "<evilbgcolor = ;#0aaaaa;evil>", "<evilbgcolor = ;;#aaaaaa;evil>", "<evilbgcolor = #aaaaaa;evil>", "<evilbgcolor = |#aaaaaa;evil>", "<evilbgcolor = u#aaaaaa;evil>", "<evilbgcolor = t#aaaaaa;evil>", "<evilbgcolor = q#aaaaaa;evil>", "<evilbgcolor = o#aaaaaa;evil>", "<evilbgcolor = a#aaaaaa;evil>", "<evilbgcolor = 9#aaaaaa;evil>", "<evilbgcolor = 3#aaaaaa;evil>", "<evilbgcolor = 0#aaaaaa;evil>", "<evilbgcolor = &#aaaaaa;evil>", "<evilbgcolor = ##aaaaaa;evil>", "<evilbgcolor =  ;#aaaaaa;evil>", "<evilbgcolor =;#aaaaaa;evil>", "<evilbgcolor  = ;#aaaaaa;evil>", "<evilbgcolor= ;#aaaaaa;evil>", "<eVilbgcolor = ;#aaaaaa;evil>", "<EVILbgcolor = ;#aaaaaa;evil>", "<ev_ilbgcolor = ;#aaaaaa;evil>", "<ev ilbgcolor = ;#aaaaaa;evil>", "<ev4ilbgcolor = ;#aaaaaa;evil>", "<ebgcolor = ;#aaaaaa;evil>", "<6bgcolor = ;#aaaaaa;evil>", "<_bgcolor = ;#aaaaaa;evil>", "<evilbgcolor = ;#aaaaaa;evil>"]}, {"regex": "sgre", "exceptionStackTrace": null, "matches": ["sgre"], "nonMatches": []}, {"regex": "(< *balise[ *>|:(.|\\n)*>| (.|\\n)*>](.|\\n)*</balise *>)", "exceptionStackTrace": {"exceptionThrownBy": "EGRET", "exception": "ERROR (unsupported): contains unsupported character \\n"}, "matches": [], "nonMatches": []}, {"regex": "^(sip|sips)\\:\\+?([\\w|\\:?\\.?\\-?\\@?\\;?\\,?\\=\\%\\&]+)", "exceptionStackTrace": null, "matches": ["sip:+|", "sip:+@", "sip:+?", "sip:+=", "sip:+;", "sip:+:", "sip:+.", "sip:+-", "sip:+,", "sip:+&", "sip:+%", "sip:+eVil", "sip:+EVIL", "sip:+ev_il", "sip:+ev il", "sip:+ev4il", "sip:+e", "sip:+6", "sip:+_", "sips:evil", "sip:evil", "sips:+evil", "sip:+evil"], "nonMatches": ["sip:++", "sip:+ ", "sip:+", "sip:++evil"]}, {"regex": "[NS] \\d{1,}(\\:[0-5]\\d){2}.{0,1}\\d{0,},[EW] \\d{1,}(\\:[0-5]\\d){2}.{0,1}\\d{0,}", "exceptionStackTrace": null, "matches": ["S 0:00:00a0,W 0:00:00a00", "S 0:00:00a0,W 0:00:00a", "S 0:00:00a0,W 0:00:00aa0", "S 0:00:00a0,W 0:00:000", "S 0:00:00a0,W 0:00:00A0", "S 0:00:00a0,W 0:00:00:0", "S 0:00:00a0,W 0:00:0000", "S 0:00:00a0,W 0:00:00,0", "S 0:00:00a0,W 0:00:00 0", "S 0:00:00a0,W 0:00:00:00a0", "S 0:00:00a0,W 00:00:00a0", "S 0:00:00a0,E 0:00:00a0", "S 0:00:00a00,W 0:00:00a0", "S 0:00:00a,W 0:00:00a0", "S 0:00:000,W 0:00:00a0", "S 0:00:00A0,W 0:00:00a0", "S 0:00:00:0,W 0:00:00a0", "S 0:00:0000,W 0:00:00a0", "S 0:00:00,0,W 0:00:00a0", "S 0:00:00 0,W 0:00:00a0", "S 00:00:00a0,W 0:00:00a0", "N 0:00:00a0,W 0:00:00a0", "S 0:00:00,W 0:00:00", "S 0:00:00a0,W 0:00:00a0"], "nonMatches": ["S 0:00:00a0,W 0:00a0", "S 0:00:00a0,W 0:60:00a0", "S 0:00:00a0,W :00:00a0", "S 0:00:00a0,A 0:00:00a0", "S 0:00:00aa0,W 0:00:00a0", "S 0:00:00:00a0,W 0:00:00a0", "S 0:00a0,W 0:00:00a0", "S 0:60:00a0,W 0:00:00a0", "S :00:00a0,W 0:00:00a0", "A 0:00:00a0,W 0:00:00a0"]}, {"regex": "&quot;.*?[^&quot;\\\\]&quot;(?!&quot;)|&quot;&quot;", "exceptionStackTrace": null, "matches": ["&quot;evilA&quot;", "&quot;evil0&quot;", "&quot;evil &quot;", "&quot;\\a&quot;", "&quot;;a&quot;", "&quot;&a&quot;", "&quot;eVila&quot;", "&quot;EVILa&quot;", "&quot;ev_ila&quot;", "&quot;ev ila&quot;", "&quot;ev4ila&quot;", "&quot;ea&quot;", "&quot; a&quot;", "&quot;6a&quot;", "&quot;_a&quot;", "&quot;a&quot;", "&quot;&quot;", "&quot;evila&quot;"], "nonMatches": ["&quot;evilu&quot;", "&quot;evilt&quot;", "&quot;evilq&quot;", "&quot;evilo&quot;", "&quot;evil\\&quot;", "&quot;evil;&quot;", "&quot;evil&&quot;"]}, {"regex": "\\(\\s*@*(&quot;.*?[^&quot;\\\\]&quot;(?!&quot;)||&quot;&quot;)\\s*,\\s*@*(&quot;.*?[^&quot;\\\\]&quot;(?!&quot;)|&quot;&quot;)\\s*(?:\\)|(?:,\\s*@*(&quot;.*?[^&quot;\\\\]&quot;(?!&quot;)||&quot;&quot;)\\s*))?\\)", "exceptionStackTrace": null, "matches": ["( @ , @&quot;evila&quot; ))", "( @&quot;evila&quot; , @&quot;evila&quot; , @ )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evila&quot;  )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evila&quot;)", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evilA&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil@&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil0&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil,&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil)&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil(&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil &quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;\\a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;@a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;;a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;,a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;)a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;(a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;&a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;eVila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;EVILa&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;ev_ila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;ev ila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;ev4ila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;ea&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot; a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;6a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;_a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;a&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @@&quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , &quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; ,  @&quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; ,@&quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; )))", "( @&quot;evila&quot; , @&quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot;  ))", "( @&quot;evila&quot; , @&quot;evila&quot;))", "( @&quot;evila&quot; , @&quot;evilA&quot; ))", "( @&quot;evila&quot; , @&quot;evil@&quot; ))", "( @&quot;evila&quot; , @&quot;evil0&quot; ))", "( @&quot;evila&quot; , @&quot;evil,&quot; ))", "( @&quot;evila&quot; , @&quot;evil)&quot; ))", "( @&quot;evila&quot; , @&quot;evil(&quot; ))", "( @&quot;evila&quot; , @&quot;evil &quot; ))", "( @&quot;evila&quot; , @&quot;\\a&quot; ))", "( @&quot;evila&quot; , @&quot;@a&quot; ))", "( @&quot;evila&quot; , @&quot;;a&quot; ))", "( @&quot;evila&quot; , @&quot;,a&quot; ))", "( @&quot;evila&quot; , @&quot;)a&quot; ))", "( @&quot;evila&quot; , @&quot;(a&quot; ))", "( @&quot;evila&quot; , @&quot;&a&quot; ))", "( @&quot;evila&quot; , @&quot;eVila&quot; ))", "( @&quot;evila&quot; , @&quot;EVILa&quot; ))", "( @&quot;evila&quot; , @&quot;ev_ila&quot; ))", "( @&quot;evila&quot; , @&quot;ev ila&quot; ))", "( @&quot;evila&quot; , @&quot;ev4ila&quot; ))", "( @&quot;evila&quot; , @&quot;ea&quot; ))", "( @&quot;evila&quot; , @&quot; a&quot; ))", "( @&quot;evila&quot; , @&quot;6a&quot; ))", "( @&quot;evila&quot; , @&quot;_a&quot; ))", "( @&quot;evila&quot; , @&quot;a&quot; ))", "( @&quot;evila&quot; , @@&quot;evila&quot; ))", "( @&quot;evila&quot; , &quot;evila&quot; ))", "( @&quot;evila&quot; ,  @&quot;evila&quot; ))", "( @&quot;evila&quot; ,@&quot;evila&quot; ))", "( @&quot;evila&quot;  , @&quot;evila&quot; ))", "( @&quot;evila&quot;, @&quot;evila&quot; ))", "( @&quot;evilA&quot; , @&quot;evila&quot; ))", "( @&quot;evil@&quot; , @&quot;evila&quot; ))", "( @&quot;evil0&quot; , @&quot;evila&quot; ))", "( @&quot;evil,&quot; , @&quot;evila&quot; ))", "( @&quot;evil)&quot; , @&quot;evila&quot; ))", "( @&quot;evil(&quot; , @&quot;evila&quot; ))", "( @&quot;evil &quot; , @&quot;evila&quot; ))", "( @&quot;\\a&quot; , @&quot;evila&quot; ))", "( @&quot;@a&quot; , @&quot;evila&quot; ))", "( @&quot;;a&quot; , @&quot;evila&quot; ))", "( @&quot;,a&quot; , @&quot;evila&quot; ))", "( @&quot;)a&quot; , @&quot;evila&quot; ))", "( @&quot;(a&quot; , @&quot;evila&quot; ))", "( @&quot;&a&quot; , @&quot;evila&quot; ))", "( @&quot;eVila&quot; , @&quot;evila&quot; ))", "( @&quot;EVILa&quot; , @&quot;evila&quot; ))", "( @&quot;ev_ila&quot; , @&quot;evila&quot; ))", "( @&quot;ev ila&quot; , @&quot;evila&quot; ))", "( @&quot;ev4ila&quot; , @&quot;evila&quot; ))", "( @&quot;ea&quot; , @&quot;evila&quot; ))", "( @&quot; a&quot; , @&quot;evila&quot; ))", "( @&quot;6a&quot; , @&quot;evila&quot; ))", "( @&quot;_a&quot; , @&quot;evila&quot; ))", "( @&quot;a&quot; , @&quot;evila&quot; ))", "( @@&quot;evila&quot; , @&quot;evila&quot; ))", "( &quot;evila&quot; , @&quot;evila&quot; ))", "(  @&quot;evila&quot; , @&quot;evila&quot; ))", "(@&quot;evila&quot; , @&quot;evila&quot; ))", "(,&quot;a&quot;)", "(&quot;a&quot;,&quot;&quot;)", "(&quot;a&quot;,&quot;a&quot;)", "( @&quot;&quot; , @&quot;evila&quot; ))", "( @&quot;evila&quot; , @&quot;&quot; ))", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evila&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; ))"], "nonMatches": ["( @&quot;&quot;&quot;&quot; , @&quot;evila&quot; ))", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;&quot;&quot;&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evilu&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evilt&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evilq&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evilo&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil\\&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil;&quot; )", "( @&quot;evila&quot; , @&quot;evila&quot; , @&quot;evil&&quot; )", "( @&quot;evila&quot; , @&quot;evilu&quot; ))", "( @&quot;evila&quot; , @&quot;evilt&quot; ))", "( @&quot;evila&quot; , @&quot;evilq&quot; ))", "( @&quot;evila&quot; , @&quot;evilo&quot; ))", "( @&quot;evila&quot; , @&quot;evil\\&quot; ))", "( @&quot;evila&quot; , @&quot;evil;&quot; ))", "( @&quot;evila&quot; , @&quot;evil&&quot; ))", "( @&quot;evilu&quot; , @&quot;evila&quot; ))", "( @&quot;evilt&quot; , @&quot;evila&quot; ))", "( @&quot;evilq&quot; , @&quot;evila&quot; ))", "( @&quot;evilo&quot; , @&quot;evila&quot; ))", "( @&quot;evil\\&quot; , @&quot;evila&quot; ))", "( @&quot;evil;&quot; , @&quot;evila&quot; ))", "( @&quot;evil&&quot; , @&quot;evila&quot; ))"]}, {"regex": "((?=[^147]*([147][^147]*[147][^147]*[147][^147]*)*$)[^258]*([258][^258]*[258][^258]*[258][^258]*)*)|((?=[^147]*([147][^147]*[147][^147]*[147][^147]*)*[147][^147]*$)[^258]*([258][^258]*[258][^258]*[258][^258]*)*[258][^258]*)|((?=[^147]*([147][^147]*[147][^147]*[147][^147]*)*[147][^147]*[147][^147]*$)[^258]*([258][^258]*[258][^258]*[258][^258]*)*[258][^258]*[258][^258]*)", "exceptionStackTrace": null, "matches": ["evil8evil8evil8evil8evil8eVil", "evil8evil8evil8evil8evil8EVIL", "evil8evil8evil8evil8evil8ev_il", "evil8evil8evil8evil8evil8ev il", "evil8evil8evil8evil8evil8ev4il", "evil8evil8evil8evil8evil8e", "evil8evil8evil8evil8evil8 ", "evil8evil8evil8evil8evil86", "evil8evil8evil8evil8evil8_", "evil8evil8evil8evil8evil8", "evil8evil8evil8evil8evil5evil", "evil8evil8evil8evil8evil2evil", "evil8evil8evil8evil8evil0evil", "evil8evil8evil8evil8eVil8evil", "evil8evil8evil8evil8EVIL8evil", "evil8evil8evil8evil8ev_il8evil", "evil8evil8evil8evil8ev il8evil", "evil8evil8evil8evil8ev4il8evil", "evil8evil8evil8evil8e8evil", "evil8evil8evil8evil8 8evil", "evil8evil8evil8evil868evil", "evil8evil8evil8evil8_8evil", "evil8evil8evil8evil88evil", "evil8evil8evil8evil5evil8evil", "evil8evil8evil8evil2evil8evil", "evil8evil8evil8evil0evil8evil", "evil8evil8evil8evil8evil8evil8evil8evil8evil", "evil8evil8evil", "evil8evil8evil8eVil8evil8evil", "evil8evil8evil8EVIL8evil8evil", "evil8evil8evil8ev_il8evil8evil", "evil8evil8evil8ev il8evil8evil", "evil8evil8evil8ev4il8evil8evil", "evil8evil8evil8e8evil8evil", "evil8evil8evil8 8evil8evil", "evil8evil8evil868evil8evil", "evil8evil8evil8_8evil8evil", "evil8evil8evil88evil8evil", "evil8evil8evil5evil8evil8evil", "evil8evil8evil2evil8evil8evil", "evil8evil8evil0evil8evil8evil", "evil8evil8eVil8evil8evil8evil", "evil8evil8EVIL8evil8evil8evil", "evil8evil8ev_il8evil8evil8evil", "evil8evil8ev il8evil8evil8evil", "evil8evil8ev4il8evil8evil8evil", "evil8evil8e8evil8evil8evil", "evil8evil8 8evil8evil8evil", "evil8evil868evil8evil8evil", "evil8evil8_8evil8evil8evil", "evil8evil88evil8evil8evil", "evil8evil5evil8evil8evil8evil", "evil8evil2evil8evil8evil8evil", "evil8evil0evil8evil8evil8evil", "evil8eVil8evil8evil8evil8evil", "evil8EVIL8evil8evil8evil8evil", "evil8ev_il8evil8evil8evil8evil", "evil8ev il8evil8evil8evil8evil", "evil8ev4il8evil8evil8evil8evil", "evil8e8evil8evil8evil8evil", "evil8 8evil8evil8evil8evil", "evil868evil8evil8evil8evil", "evil8_8evil8evil8evil8evil", "evil88evil8evil8evil8evil", "evil5evil8evil8evil8evil8evil", "evil2evil8evil8evil8evil8evil", "evil0evil8evil8evil8evil8evil", "eVil8evil8evil8evil8evil8evil", "EVIL8evil8evil8evil8evil8evil", "ev_il8evil8evil8evil8evil8evil", "ev il8evil8evil8evil8evil8evil", "ev4il8evil8evil8evil8evil8evil", "e8evil8evil8evil8evil8evil", " 8evil8evil8evil8evil8evil", "68evil8evil8evil8evil8evil", "_8evil8evil8evil8evil8evil", "8evil8evil8evil8evil8evil", "evil8evil8evil8evil8eVil", "evil8evil8evil8evil8EVIL", "evil8evil8evil8evil8ev_il", "evil8evil8evil8evil8ev il", "evil8evil8evil8evil8ev4il", "evil8evil8evil8evil8e", "evil8evil8evil8evil8 ", "evil8evil8evil8evil86", "evil8evil8evil8evil8_", "evil8evil8evil8evil8", "evil8evil8evil8evil5evil", "evil8evil8evil8evil2evil", "evil8evil8evil8evil0evil", "evil8evil8evil8evil8evil8evil8evil8evil", "evil8evil", "evil8evil8evil8eVil8evil", "evil8evil8evil8EVIL8evil", "evil8evil8evil8ev_il8evil", "evil8evil8evil8ev il8evil", "evil8evil8evil8ev4il8evil", "evil8evil8evil8e8evil", "evil8evil8evil8 8evil", "evil8evil8evil868evil", "evil8evil8evil8_8evil", "evil8evil8evil88evil", "evil8evil8evil5evil8evil", "evil8evil8evil2evil8evil", "evil8evil8evil0evil8evil", "evil8evil8eVil8evil8evil", "evil8evil8EVIL8evil8evil", "evil8evil8ev_il8evil8evil", "evil8evil8ev il8evil8evil", "evil8evil8ev4il8evil8evil", "evil8evil8e8evil8evil", "evil8evil8 8evil8evil", "evil8evil868evil8evil", "evil8evil8_8evil8evil", "evil8evil88evil8evil", "evil8evil5evil8evil8evil", "evil8evil2evil8evil8evil", "evil8evil0evil8evil8evil", "evil8eVil8evil8evil8evil", "evil8EVIL8evil8evil8evil", "evil8ev_il8evil8evil8evil", "evil8ev il8evil8evil8evil", "evil8ev4il8evil8evil8evil", "evil8e8evil8evil8evil", "evil8 8evil8evil8evil", "evil868evil8evil8evil", "evil8_8evil8evil8evil", "evil88evil8evil8evil", "evil5evil8evil8evil8evil", "evil2evil8evil8evil8evil", "evil0evil8evil8evil8evil", "eVil8evil8evil8evil8evil", "EVIL8evil8evil8evil8evil", "ev_il8evil8evil8evil8evil", "ev il8evil8evil8evil8evil", "ev4il8evil8evil8evil8evil", "e8evil8evil8evil8evil", " 8evil8evil8evil8evil", "68evil8evil8evil8evil", "_8evil8evil8evil8evil", "8evil8evil8evil8evil", "evil8evil8evil8evil8evil8evil8evil", "evil", "evil8evil8evil8eVil", "evil8evil8evil8EVIL", "evil8evil8evil8ev_il", "evil8evil8evil8ev il", "evil8evil8evil8ev4il", "evil8evil8evil8e", "evil8evil8evil8 ", "evil8evil8evil86", "evil8evil8evil8_", "evil8evil8evil8", "evil8evil8evil5evil", "evil8evil8evil2evil", "evil8evil8evil0evil", "evil8evil8eVil8evil", "evil8evil8EVIL8evil", "evil8evil8ev_il8evil", "evil8evil8ev il8evil", "evil8evil8ev4il8evil", "evil8evil8e8evil", "evil8evil8 8evil", "evil8evil868evil", "evil8evil8_8evil", "evil8evil88evil", "evil8evil5evil8evil", "evil8evil2evil8evil", "evil8evil0evil8evil", "evil8eVil8evil8evil", "evil8EVIL8evil8evil", "evil8ev_il8evil8evil", "evil8ev il8evil8evil", "evil8ev4il8evil8evil", "evil8e8evil8evil", "evil8 8evil8evil", "evil868evil8evil", "evil8_8evil8evil", "evil88evil8evil", "evil5evil8evil8evil", "evil2evil8evil8evil", "evil0evil8evil8evil", "eVil8evil8evil8evil", "EVIL8evil8evil8evil", "ev_il8evil8evil8evil", "ev il8evil8evil8evil", "ev4il8evil8evil8evil", "e8evil8evil8evil", " 8evil8evil8evil", "68evil8evil8evil", "_8evil8evil8evil", "8evil8evil8evil", "88", "8", "", "evil8evil8evil8evil8evil8evil", "evil8evil8evil8evil8evil", "evil8evil8evil8evil"], "nonMatches": []}, {"regex": "([1-3]{0,1}\\n{0,1}\\s{0,1}\\n{0,1}[a-zA-Z]+\\s{1}\\n{0,1}\\d{1,2}:{1}\\s{0,1}\\d{1,2}){1}(,{1}\\n{0,1}\\s{0,1}\\d{1,2}({1}\\s{0,9}\\n{0,1}\\d{1,2}){0,9}){0,9}(-{1}\\s{0,1}\\n{0,1}\\d{1,2}){0,9}(,{1}\\s{0,1}\\d{1,2}){0,9}(;\\s{0,1}\\n{0,1}\\d{1,2}\\s{0,1}:{1}\\s{0,1}\\d{1,2}(-{1}\\s{0,9}\\n{0,1}\\d{1,2}){0,9}(,{1}\\s{0,9}\\d{1,2}(-{1}\\s{0,9}\\n{0,1}\\d{1,2}){0,9}){0,9}){0,9}", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "nothing to repeat"}, "matches": []}, {"regex": "^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])(\\D?([01]\\d|2[0-3])\\D?([0-5]\\d)\\D?([0-5]\\d)?)?$", "exceptionStackTrace": null, "matches": ["0000a01a30a10a00a00", "0000a01a20", "0000a01a20a10a00a", "0000a01a20a10a0000", "0000a01a20a10a00_00", "0000a01a20a10a00A00", "0000a01a20a10a00 00", "0000a01a20a1000a00", "0000a01a20a10_00a00", "0000a01a20a10A00a00", "0000a01a20a10 00a00", "0000a01a20a00a00a00", "0000a01a2010a00a00", "0000a01a20_10a00a00", "0000a01a20A10a00a00", "0000a01a20 10a00a00", "0000a01a10a10a00a00", "0000a0120a10a00a00", "0000a01_20a10a00a00", "0000a01A20a10a00a00", "0000a01 20a10a00a00", "000001a20a10a00a00", "0000_01a20a10a00a00", "0000A01a20a10a00a00", "0000 01a20a10a00a00", "00001020", "00000131", "00000101", "00000120", "0000a10a20a10a00a00", "0000a01a31a10a00a00", "0000a01a01a10a00a00", "0000a01a20a20a00a00", "0000a01a20a10a00a00"], "nonMatches": ["0000a13a20a10a00a00", "0000a01a32a10a00a00", "0000a01a20a24a00a00", "0000a01a20a10a00a00a10a00a00", "0000a01a20a10a00a0000", "0000a01a20a10a00a60", "0000a01a20a10a00aa00", "0000a01a20a10a00000", "0000a01a20a10a60a00", "0000a01a20a10aa00a00", "0000a01a20a10000a00", "0000a01a20aa10a00a00", "0000a01a20010a00a00", "0000a01a00a10a00a00", "0000a01aa20a10a00a00", "0000a01020a10a00a00", "0000a00a20a10a00a00", "0000aa01a20a10a00a00", "0000001a20a10a00a00", "00000a01a20a10a00a00", "000a01a20a10a00a00"]}, {"regex": "^((\\d{1,3}((,\\d{3})*|\\d*)(\\.{0,1})\\d+)|\\d+)$", "exceptionStackTrace": null, "matches": ["000.0", "0,000.00", "0,0000", "0,000,000.0", "0.0", "000,000.0", "00", "0", "00.0", "0,000.0"], "nonMatches": ["", "0,000.", "0,000..0", "0,0000.0", "0,00.0", "0000,000.0", ",000.0"]}, {"regex": "(((0[1-9]|[12][0-9]|3[01])([/])(0[13578]|10|12)([/])(\\d{4}))|(([0][1-9]|[12][0-9]|30)([/])(0[469]|11)([/])(\\d{4}))|((0[1-9]|1[0-9]|2[0-8])([/])(02)([/])(\\d{4}))|((29)(\\.|-|\\/)(02)([/])([02468][048]00))|((29)([/])(02)([/])([13579][26]00))|((29)([/])(02)([/])([0-9][0-9][0][48]))|((29)([/])(02)([/])([0-9][0-9][2468][048]))|((29)([/])(02)([/])([0-9][0-9][13579][26])))", "exceptionStackTrace": null, "matches": ["29/02/0092", "29/02/0076", "29/02/0056", "29/02/0036", "29/02/0016", "29/02/0084", "29/02/0080", "29/02/0068", "29/02/0048", "29/02/0028", "29/02/0004", "29/02/9200", "29/02/7600", "29/02/5600", "29/02/3600", "29/02/1600", "29.02/8400", "29.02/8000", "29.02/6800", "29.02/4800", "29.02/2800", "29.02/0800", "29/02/0000", "01/02/00000", "10/09/0000", "01/09/00000", "01/06/0000", "01/04/0000", "30/08/0000", "10/08/0000", "01/08/00000", "01/07/0000", "01/05/0000", "01/03/0000", "01/01/0000", "29/02/0096", "29/02/0088", "29/02/0008", "29/02/9600", "29/02/8800", "29-02/8800", "29.02/8800", "20/02/0000", "10/02/0000", "01/02/0000", "30/09/0000", "20/09/0000", "01/11/0000", "01/09/0000", "31/08/0000", "20/08/0000", "01/12/0000", "01/10/0000", "01/08/0000"], "nonMatches": ["29/02/0090", "29/02/0006", "29/02/0081", "29/02/9000", "29/02/0600", "29.02/8100", "29.02/1800", "01/02/000", "00/02/0000", "01/09/000", "00/09/0000", "32/08/0000", "01/08/000", "01/00/0000", "00/08/0000"]}, {"regex": "lkihigo", "exceptionStackTrace": null, "matches": ["lkihigo"], "nonMatches": []}, {"regex": "^([+]?\\d{1,4})?([\\s-.+]?\\(?\\d{3}\\)?)?([\\s-.]?\\d{3})([\\s-.]?\\d{4})\\s?([eE]?[xX]?[tT]?[\\s-.:]?\\s?\\d{4})?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "bad character range \\s-."}, "matches": []}, {"regex": "&lt;(?:[^&quot;&#39;]+?|.+?(?:&quot;|&#39;).*?(?:&quot;|&#39;)?.*?)*?&gt;", "exceptionStackTrace": null, "matches": ["&lt;evil&quot;evil&quot;;&gt;", "&lt;evil&quot;evil&quot;&&gt;", "&lt;evil&quot;evil&quot;#&gt;", "&lt;evil&quot;evil&quot;eVil&gt;", "&lt;evil&quot;evil&quot;EVIL&gt;", "&lt;evil&quot;evil&quot;ev_il&gt;", "&lt;evil&quot;evil&quot;ev il&gt;", "&lt;evil&quot;evil&quot;ev4il&gt;", "&lt;evil&quot;evil&quot;e&gt;", "&lt;evil&quot;evil&quot; &gt;", "&lt;evil&quot;evil&quot;6&gt;", "&lt;evil&quot;evil&quot;_&gt;", "&lt;evil&quot;evil&quot;&gt;", "&lt;evil&quot;evil&quot;&quot;evil&gt;", "&lt;evil&quot;evilevil&gt;", "&lt;evil&quot;;&quot;evil&gt;", "&lt;evil&quot;&&quot;evil&gt;", "&lt;evil&quot;#&quot;evil&gt;", "&lt;evil&quot;eVil&quot;evil&gt;", "&lt;evil&quot;EVIL&quot;evil&gt;", "&lt;evil&quot;ev_il&quot;evil&gt;", "&lt;evil&quot;ev il&quot;evil&gt;", "&lt;evil&quot;ev4il&quot;evil&gt;", "&lt;evil&quot;e&quot;evil&gt;", "&lt;evil&quot; &quot;evil&gt;", "&lt;evil&quot;6&quot;evil&gt;", "&lt;evil&quot;_&quot;evil&gt;", "&lt;evil&quot;&quot;evil&gt;", "&lt;;&quot;evil&quot;evil&gt;", "&lt;&&quot;evil&quot;evil&gt;", "&lt;#&quot;evil&quot;evil&gt;", "&lt;eVil&quot;evil&quot;evil&gt;", "&lt;EVIL&quot;evil&quot;evil&gt;", "&lt;ev_il&quot;evil&quot;evil&gt;", "&lt;ev il&quot;evil&quot;evil&gt;", "&lt;ev4il&quot;evil&quot;evil&gt;", "&lt;e&quot;evil&quot;evil&gt;", "&lt; &quot;evil&quot;evil&gt;", "&lt;6&quot;evil&quot;evil&gt;", "&lt;_&quot;evil&quot;evil&gt;", "&lt;&quot;evil&quot;evil&gt;", "&lt;evilevil&gt;", "&lt;eVil&gt;", "&lt;EVIL&gt;", "&lt;ev_il&gt;", "&lt;ev il&gt;", "&lt;ev4il&gt;", "&lt;e&gt;", "&lt; &gt;", "&lt;6&gt;", "&lt;_&gt;", "&lt;&gt;", "&lt;evil&#39;evil&quot;evil&gt;", "&lt;evil&quot;evil&#39;evil&gt;", "&lt;evil&quot;evil&quot;evil&gt;", "&lt;evil&gt;"], "nonMatches": ["&lt;;&gt;", "&lt;&&gt;", "&lt;#&gt;"]}, {"regex": "((http|ftp|https):\\/\\/w{3}[\\d]*.|(http|ftp|https):\\/\\/|w{3}[\\d]*.)([\\w\\d\\._\\-#\\(\\)\\[\\]\\\\,;:]+@[\\w\\d\\._\\-#\\(\\)\\[\\]\\\\,;:])?([a-z0-9]+.)*[a-z\\-0-9]+.([a-z]{2,3})?[a-z]{2,6}(:[0-9]+)?(\\/[\\/a-z0-9\\._\\-,]+)*[a-z0-9\\-_\\.\\s\\%]+(\\?[a-z0-9=%&amp;\\.\\-,#]+)?", "exceptionStackTrace": null, "matches": ["www0_evil@:evilaevilaaaaa:0/evilevil?evil", "www0]evil@:evilaevilaaaaa:0/evilevil?evil", "www0\\evil@:evilaevilaaaaa:0/evilevil?evil", "www0[evil@:evilaevilaaaaa:0/evilevil?evil", "www0Aevil@:evilaevilaaaaa:0/evilevil?evil", "www0@evil@:evilaevilaaaaa:0/evilevil?evil", "www0?evil@:evilaevilaaaaa:0/evilevil?evil", "www0=evil@:evilaevilaaaaa:0/evilevil?evil", "www0;evil@:evilaevilaaaaa:0/evilevil?evil", "www0:evil@:evilaevilaaaaa:0/evilevil?evil", "www00evil@:evilaevilaaaaa:0/evilevil?evil", "www0/evil@:evilaevilaaaaa:0/evilevil?evil", "www0.evil@:evilaevilaaaaa:0/evilevil?evil", "www0-evil@:evilaevilaaaaa:0/evilevil?evil", "www0,evil@:evilaevilaaaaa:0/evilevil?evil", "www0)evil@:evilaevilaaaaa:0/evilevil?evil", "www0(evil@:evilaevilaaaaa:0/evilevil?evil", "www0&evil@:evilaevilaaaaa:0/evilevil?evil", "www0%evil@:evilaevilaaaaa:0/evilevil?evil", "www0#evil@:evilaevilaaaaa:0/evilevil?evil", "www0 evil@:evilaevilaaaaa:0/evilevil?evil", "www00aevil@:evilaevilaaaaa:0/evilevil?evil", "wwwaevil@:evilaevilaaaaa:0/evilevil?evil", "wwww0aevil@:evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/evilevil?evil?evil", "http://www0aevil@:evilaevilaaaaa:0/evilevil", "http://www0aevil@:evilaevilaaaaa:0/evilevil?]", "http://www0aevil@:evilaevilaaaaa:0/evilevil?\\", "http://www0aevil@:evilaevilaaaaa:0/evilevil?[", "http://www0aevil@:evilaevilaaaaa:0/evilevil?@", "http://www0aevil@:evilaevilaaaaa:0/evilevil??", "http://www0aevil@:evilaevilaaaaa:0/evilevil?=", "http://www0aevil@:evilaevilaaaaa:0/evilevil?;", "http://www0aevil@:evilaevilaaaaa:0/evilevil?:", "http://www0aevil@:evilaevilaaaaa:0/evilevil?/", "http://www0aevil@:evilaevilaaaaa:0/evilevil?.", "http://www0aevil@:evilaevilaaaaa:0/evilevil?-", "http://www0aevil@:evilaevilaaaaa:0/evilevil?,", "http://www0aevil@:evilaevilaaaaa:0/evilevil?)", "http://www0aevil@:evilaevilaaaaa:0/evilevil?(", "http://www0aevil@:evilaevilaaaaa:0/evilevil?&", "http://www0aevil@:evilaevilaaaaa:0/evilevil?%", "http://www0aevil@:evilaevilaaaaa:0/evilevil?#", "http://www0aevil@:evilaevilaaaaa:0/evilevil?eVil", "http://www0aevil@:evilaevilaaaaa:0/evilevil?EVIL", "http://www0aevil@:evilaevilaaaaa:0/evilevil?ev_il", "http://www0aevil@:evilaevilaaaaa:0/evilevil?ev il", "http://www0aevil@:evilaevilaaaaa:0/evilevil?ev4il", "http://www0aevil@:evilaevilaaaaa:0/evilevil?e", "http://www0aevil@:evilaevilaaaaa:0/evilevil? ", "http://www0aevil@:evilaevilaaaaa:0/evilevil?6", "http://www0aevil@:evilaevilaaaaa:0/evilevil?_", "http://www0aevil@:evilaevilaaaaa:0/evilevil?", "http://www0aevil@:evilaevilaaaaa:0/evil]?evil", "http://www0aevil@:evilaevilaaaaa:0/evil\\?evil", "http://www0aevil@:evilaevilaaaaa:0/evil[?evil", "http://www0aevil@:evilaevilaaaaa:0/evil@?evil", "http://www0aevil@:evilaevilaaaaa:0/evil??evil", "http://www0aevil@:evilaevilaaaaa:0/evil=?evil", "http://www0aevil@:evilaevilaaaaa:0/evil;?evil", "http://www0aevil@:evilaevilaaaaa:0/evil:?evil", "http://www0aevil@:evilaevilaaaaa:0/evil/?evil", "http://www0aevil@:evilaevilaaaaa:0/evil.?evil", "http://www0aevil@:evilaevilaaaaa:0/evil-?evil", "http://www0aevil@:evilaevilaaaaa:0/evil,?evil", "http://www0aevil@:evilaevilaaaaa:0/evil)?evil", "http://www0aevil@:evilaevilaaaaa:0/evil(?evil", "http://www0aevil@:evilaevilaaaaa:0/evil&?evil", "http://www0aevil@:evilaevilaaaaa:0/evil%?evil", "http://www0aevil@:evilaevilaaaaa:0/evil#?evil", "http://www0aevil@:evilaevilaaaaa:0/evileVil?evil", "http://www0aevil@:evilaevilaaaaa:0/evilEVIL?evil", "http://www0aevil@:evilaevilaaaaa:0/evilev_il?evil", "http://www0aevil@:evilaevilaaaaa:0/evilev il?evil", "http://www0aevil@:evilaevilaaaaa:0/evilev4il?evil", "http://www0aevil@:evilaevilaaaaa:0/evile?evil", "http://www0aevil@:evilaevilaaaaa:0/evil ?evil", "http://www0aevil@:evilaevilaaaaa:0/evil6?evil", "http://www0aevil@:evilaevilaaaaa:0/evil_?evil", "http://www0aevil@:evilaevilaaaaa:0/evil/evilevil?evil", "http://www0aevil@:evilaevilaaaaa:0evil?evil", "http://www0aevil@:evilaevilaaaaa:0/]evil?evil", "http://www0aevil@:evilaevilaaaaa:0/\\evil?evil", "http://www0aevil@:evilaevilaaaaa:0/[evil?evil", "http://www0aevil@:evilaevilaaaaa:0/@evil?evil", "http://www0aevil@:evilaevilaaaaa:0/?evil?evil", "http://www0aevil@:evilaevilaaaaa:0/=evil?evil", "http://www0aevil@:evilaevilaaaaa:0/;evil?evil", "http://www0aevil@:evilaevilaaaaa:0/:evil?evil", "http://www0aevil@:evilaevilaaaaa:0//evil?evil", "http://www0aevil@:evilaevilaaaaa:0/.evil?evil", "http://www0aevil@:evilaevilaaaaa:0/-evil?evil", "http://www0aevil@:evilaevilaaaaa:0/,evil?evil", "http://www0aevil@:evilaevilaaaaa:0/)evil?evil", "http://www0aevil@:evilaevilaaaaa:0/(evil?evil", "http://www0aevil@:evilaevilaaaaa:0/&evil?evil", "http://www0aevil@:evilaevilaaaaa:0/%evil?evil", "http://www0aevil@:evilaevilaaaaa:0/#evil?evil", "http://www0aevil@:evilaevilaaaaa:0/eVilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/EVILevil?evil", "http://www0aevil@:evilaevilaaaaa:0/ev_ilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/ev ilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/ev4ilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/eevil?evil", "http://www0aevil@:evilaevilaaaaa:0/ evil?evil", "http://www0aevil@:evilaevilaaaaa:0/6evil?evil", "http://www0aevil@:evilaevilaaaaa:0/_evil?evil", "http://www0aevil@:evilaevilaaaaa:0/evil?evil", "http://www0aevil@:evilaevilaaaaa:0:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaa/evilevil?evil", "http://www0aevil@:evilaevilaaaaa:00/evilevil?evil", "http://www0aevil@:evilaevilaaaaa:/evilevil?evil", "http://www0aevil@:evilaevilaaaaaaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaa:0/evilevil?evil", "http://www0aevil@:evilaevil_aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil]aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil\\aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil[aaaa:0/evilevil?evil", "http://www0aevil@:evilaevilAaaaa:0/evilevil?evil", "http://www0aevil@:evilaevil@aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil?aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil=aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil;aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil:aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil0aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil/aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil.aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil-aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil,aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil)aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil(aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil&aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil%aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil#aaaa:0/evilevil?evil", "http://www0aevil@:evilaevil aaaa:0/evilevil?evil", "http://www0aevil@:evila]aaaaa:0/evilevil?evil", "http://www0aevil@:evila\\aaaaa:0/evilevil?evil", "http://www0aevil@:evila[aaaaa:0/evilevil?evil", "http://www0aevil@:evila@aaaaa:0/evilevil?evil", "http://www0aevil@:evila?aaaaa:0/evilevil?evil", "http://www0aevil@:evila=aaaaa:0/evilevil?evil", "http://www0aevil@:evila;aaaaa:0/evilevil?evil", "http://www0aevil@:evila:aaaaa:0/evilevil?evil", "http://www0aevil@:evila/aaaaa:0/evilevil?evil", "http://www0aevil@:evila.aaaaa:0/evilevil?evil", "http://www0aevil@:evila-aaaaa:0/evilevil?evil", "http://www0aevil@:evila,aaaaa:0/evilevil?evil", "http://www0aevil@:evila)aaaaa:0/evilevil?evil", "http://www0aevil@:evila(aaaaa:0/evilevil?evil", "http://www0aevil@:evila&aaaaa:0/evilevil?evil", "http://www0aevil@:evila%aaaaa:0/evilevil?evil", "http://www0aevil@:evila#aaaaa:0/evilevil?evil", "http://www0aevil@:evilaeVilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaEVILaaaaa:0/evilevil?evil", "http://www0aevil@:evilaev_ilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaev ilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaev4ilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaeaaaaa:0/evilevil?evil", "http://www0aevil@:evila aaaaa:0/evilevil?evil", "http://www0aevil@:evila6aaaaa:0/evilevil?evil", "http://www0aevil@:evila_aaaaa:0/evilevil?evil", "http://www0aevil@:evilaaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil_evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil]evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil\\evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil[evilaaaaa:0/evilevil?evil", "http://www0aevil@:evilAevilaaaaa:0/evilevil?evil", "http://www0aevil@:evil@evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil?evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil=evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil;evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil:evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil0evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil/evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil.evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil-evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil,evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil)evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil(evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil&evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil%evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil#evilaaaaa:0/evilevil?evil", "http://www0aevil@:evil evilaaaaa:0/evilevil?evil", "http://www0aevil@:eVilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:EVILaevilaaaaa:0/evilevil?evil", "http://www0aevil@:ev_ilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:ev ilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:ev4ilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:eaevilaaaaa:0/evilevil?evil", "http://www0aevil@: aevilaaaaa:0/evilevil?evil", "http://www0aevil@:6aevilaaaaa:0/evilevil?evil", "http://www0aevil@:_aevilaaaaa:0/evilevil?evil", "http://www0aevil@:aevilaaaaa:0/evilevil?evil", "http://www0aevil@:evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0aevilaevilaaaaa:0/evilevil?evil", "http://www0aevil@aevilaevilaaaaa:0/evilevil?evil", "http://www0aevil@_evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@]evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@\\evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@[evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@Aevilaevilaaaaa:0/evilevil?evil", "http://www0aevil@;evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@0evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@.evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@-evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@,evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@)evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@(evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@#evilaevilaaaaa:0/evilevil?evil", "http://www0a]@:evilaevilaaaaa:0/evilevil?evil", "http://www0a\\@:evilaevilaaaaa:0/evilevil?evil", "http://www0a[@:evilaevilaaaaa:0/evilevil?evil", "http://www0a;@:evilaevilaaaaa:0/evilevil?evil", "http://www0a:@:evilaevilaaaaa:0/evilevil?evil", "http://www0a.@:evilaevilaaaaa:0/evilevil?evil", "http://www0a-@:evilaevilaaaaa:0/evilevil?evil", "http://www0a,@:evilaevilaaaaa:0/evilevil?evil", "http://www0a)@:evilaevilaaaaa:0/evilevil?evil", "http://www0a(@:evilaevilaaaaa:0/evilevil?evil", "http://www0a#@:evilaevilaaaaa:0/evilevil?evil", "http://www0aeVil@:evilaevilaaaaa:0/evilevil?evil", "http://www0aEVIL@:evilaevilaaaaa:0/evilevil?evil", "http://www0aev_il@:evilaevilaaaaa:0/evilevil?evil", "http://www0aev il@:evilaevilaaaaa:0/evilevil?evil", "http://www0aev4il@:evilaevilaaaaa:0/evilevil?evil", "http://www0ae@:evilaevilaaaaa:0/evilevil?evil", "http://www0a6@:evilaevilaaaaa:0/evilevil?evil", "http://www0a_@:evilaevilaaaaa:0/evilevil?evil", "http://www0a@:evilaevilaaaaa:0/evilevil?evil", "http://www0_evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0]evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0\\evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0[evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0Aevil@:evilaevilaaaaa:0/evilevil?evil", "http://www0@evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0?evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0=evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0;evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0:evil@:evilaevilaaaaa:0/evilevil?evil", "http://www00evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0/evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0.evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0-evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0,evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0)evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0(evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0&evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0%evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0#evil@:evilaevilaaaaa:0/evilevil?evil", "http://www0 evil@:evilaevilaaaaa:0/evilevil?evil", "http://www00aevil@:evilaevilaaaaa:0/evilevil?evil", "http://wwwaevil@:evilaevilaaaaa:0/evilevil?evil", "http://wwww0aevil@:evilaevilaaaaa:0/evilevil?evil", "http://ww0aevil@:evilaevilaaaaa:0/evilevil?evil", "wwwaevilaaaevil", "https://evilaaaevil", "ftp://evilaaaevil", "http://evilaaaevil", "https://wwwaevilaaaevil", "ftp://wwwaevilaaaevil", "http://wwwaevilaaaevil", "www0aevil@:evilaevilaaaaa:0/evilevil?evil", "https://evil@:evilaevilaaaaa:0/evilevil?evil", "ftp://evil@:evilaevilaaaaa:0/evilevil?evil", "http://evil@:evilaevilaaaaa:0/evilevil?evil", "https://www0aevil@:evilaevilaaaaa:0/evilevil?evil", "ftp://www0aevil@:evilaevilaaaaa:0/evilevil?evil", "http://www0aevil@:evilaevilaaaaa:0/evilevil?evil"], "nonMatches": ["ww0aevil@:evilaevilaaaaa:0/evilevil?evil", "http://www0a@@:evilaevilaaaaa:0/evilevil?evil", "http://www0a?@:evilaevilaaaaa:0/evilevil?evil", "http://www0a=@:evilaevilaaaaa:0/evilevil?evil", "http://www0a/@:evilaevilaaaaa:0/evilevil?evil", "http://www0a&@:evilaevilaaaaa:0/evilevil?evil", "http://www0a%@:evilaevilaaaaa:0/evilevil?evil", "http://www0a @:evilaevilaaaaa:0/evilevil?evil"]}, {"regex": "0{3,}|1{3,}|2{3,}|3{3,}|4{3,}|5{3,}|6{3,}|7{3,}|8{3,}|9{3,}", "exceptionStackTrace": null, "matches": ["999", "888", "777", "666", "555", "444", "333", "222", "111", "000"], "nonMatches": ["99", "88", "77", "66", "55", "44", "33", "22", "11", "00"]}, {"regex": "^(?<hours>\\d{2}):(?<minutes>\\d{2}):(?<seconds>\\d{2}) (?<month>[a-zA-Z]{3}) (?<day>\\d{1,}), (?<year>\\d{4}) (?<timezone>[a-zA-Z]{3})$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<h"}, "matches": []}, {"regex": "^(?<dayOfWeek>\\w{3}) (?<monthName>\\w{3}) (?<day>\\d{1,2}) (?<year>\\d{4})? ?(?<hours>\\d{1,2}):(?<minutes>\\d{1,2}):(?<seconds>\\d{1,2}) (GMT|UTC)(?<timeZoneOffset>[-+]?\\d{4}) (?<year>\\d{4})?\\(?(?<timeZoneName>[a-zA-Z\\s]+)?\\)?$", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<d"}, "matches": []}, {"regex": "^([07][1-7]|1[0-6]|2[0-7]|[35][0-9]|[468][0-8]|9[0-589])-?\\d{7}$", "exceptionStackTrace": null, "matches": ["98-0000000", "90-0000000", "60-0000000", "40-0000000", "30-0000000", "11-0000000", "01-0000000", "990000000", "800000000", "500000000", "200000000", "100000000", "710000000", "99-0000000", "80-0000000", "50-0000000", "20-0000000", "10-0000000", "71-0000000"], "nonMatches": ["96-0000000", "89-0000000", "00-0000000", "28-0000000", "17-0000000", "71-00000000", "71-000000", "71--0000000", "70-0000000"]}, {"regex": "(?<protocol>(http|ftp|https|ftps):\\/\\/)?(?<site>[\\w\\-_\\.]+\\.(?<tld>([0-9]{1,3})|([a-zA-Z]{2,3})|(aero|arpa|asia|coop|info|jobs|mobi|museum|name|travel))+(?<port>:[0-9]+)?\\/?)((?<resource>[\\w\\-\\.,@^%:/~\\+#]*[\\w\\-\\@^%/~\\+#])(?<queryString>(\\?[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\~&#39;,]*=[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\~&#39;,]*)+(&[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\~&#39;,]*=[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\~&#39;,]*)*)?)?", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<p"}, "matches": []}, {"regex": "((http|ftp|https|ftps):\\/\\/)?[\\w\\-_\\.]+\\.(([0-9]{1,3})|([a-zA-Z]{2,3})|(aero|arpa|asia|coop|info|jobs|mobi|museum|name|travel))+(:[0-9]+)?\\/?(([\\w\\-\\.,@^%:/~\\+#]*[\\w\\-\\@^%/~\\+#])((\\?[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\=~&#39;,]*=[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\=~&#39;,]*)+(&[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\=~&#39;,]*=[a-zA-Z0-9\\[\\]\\-\\._+%\\$#\\=~&#39;,]*)*)?)?", "exceptionStackTrace": null, "matches": ["http://evil.AAAA:0/evil#?evil=evil&evil=evil", "http://evil.AAA:0/evil#?evil=evil&evil=evil", "http://evil.aA:0/evil#?evil=evil&evil=evil", "http://evil.0:0/evil#?evil=evil&evil=evilevil#?evil=evil&evil=evil", "http://evil.0:0/", "http://evil.0:0/evil#?evil=evil&evil=evil?evil=evil&evil=evil", "http://evil.0:0/evil#", "http://evil.0:0/evil#?evil=evil&evil=evil&evil=evil", "http://evil.0:0/evil#?evil=evil", "http://evil.0:0/evil#?evil=evil&evil=~", "http://evil.0:0/evil#?evil=evil&evil=^", "http://evil.0:0/evil#?evil=evil&evil=]", "http://evil.0:0/evil#?evil=evil&evil=[", "http://evil.0:0/evil#?evil=evil&evil=@", "http://evil.0:0/evil#?evil=evil&evil=?", "http://evil.0:0/evil#?evil=evil&evil==", "http://evil.0:0/evil#?evil=evil&evil=;", "http://evil.0:0/evil#?evil=evil&evil=:", "http://evil.0:0/evil#?evil=evil&evil=/", "http://evil.0:0/evil#?evil=evil&evil=.", "http://evil.0:0/evil#?evil=evil&evil=-", "http://evil.0:0/evil#?evil=evil&evil=,", "http://evil.0:0/evil#?evil=evil&evil=+", "http://evil.0:0/evil#?evil=evil&evil=&", "http://evil.0:0/evil#?evil=evil&evil=%", "http://evil.0:0/evil#?evil=evil&evil=$", "http://evil.0:0/evil#?evil=evil&evil=#", "http://evil.0:0/evil#?evil=evil&evil=eVil", "http://evil.0:0/evil#?evil=evil&evil=EVIL", "http://evil.0:0/evil#?evil=evil&evil=ev_il", "http://evil.0:0/evil#?evil=evil&evil=ev il", "http://evil.0:0/evil#?evil=evil&evil=ev4il", "http://evil.0:0/evil#?evil=evil&evil=e", "http://evil.0:0/evil#?evil=evil&evil= ", "http://evil.0:0/evil#?evil=evil&evil=6", "http://evil.0:0/evil#?evil=evil&evil=_", "http://evil.0:0/evil#?evil=evil&evil=", "http://evil.0:0/evil#?evil=evil&~=evil", "http://evil.0:0/evil#?evil=evil&^=evil", "http://evil.0:0/evil#?evil=evil&]=evil", "http://evil.0:0/evil#?evil=evil&[=evil", "http://evil.0:0/evil#?evil=evil&@=evil", "http://evil.0:0/evil#?evil=evil&?=evil", "http://evil.0:0/evil#?evil=evil&==evil", "http://evil.0:0/evil#?evil=evil&;=evil", "http://evil.0:0/evil#?evil=evil&:=evil", "http://evil.0:0/evil#?evil=evil&/=evil", "http://evil.0:0/evil#?evil=evil&.=evil", "http://evil.0:0/evil#?evil=evil&-=evil", "http://evil.0:0/evil#?evil=evil&,=evil", "http://evil.0:0/evil#?evil=evil&+=evil", "http://evil.0:0/evil#?evil=evil&&=evil", "http://evil.0:0/evil#?evil=evil&%=evil", "http://evil.0:0/evil#?evil=evil&$=evil", "http://evil.0:0/evil#?evil=evil&#=evil", "http://evil.0:0/evil#?evil=evil&eVil=evil", "http://evil.0:0/evil#?evil=evil&EVIL=evil", "http://evil.0:0/evil#?evil=evil&ev_il=evil", "http://evil.0:0/evil#?evil=evil&ev il=evil", "http://evil.0:0/evil#?evil=evil&ev4il=evil", "http://evil.0:0/evil#?evil=evil&e=evil", "http://evil.0:0/evil#?evil=evil& =evil", "http://evil.0:0/evil#?evil=evil&6=evil", "http://evil.0:0/evil#?evil=evil&_=evil", "http://evil.0:0/evil#?evil=evil&=evil", "http://evil.0:0/evil#?evil=evil?evil=evil&evil=evil", "http://evil.0:0/evil#&evil=evil", "http://evil.0:0/evil#?evil=~&evil=evil", "http://evil.0:0/evil#?evil=^&evil=evil", "http://evil.0:0/evil#?evil=]&evil=evil", "http://evil.0:0/evil#?evil=[&evil=evil", "http://evil.0:0/evil#?evil=@&evil=evil", "http://evil.0:0/evil#?evil=?&evil=evil", "http://evil.0:0/evil#?evil==&evil=evil", "http://evil.0:0/evil#?evil=;&evil=evil", "http://evil.0:0/evil#?evil=:&evil=evil", "http://evil.0:0/evil#?evil=/&evil=evil", "http://evil.0:0/evil#?evil=.&evil=evil", "http://evil.0:0/evil#?evil=-&evil=evil", "http://evil.0:0/evil#?evil=,&evil=evil", "http://evil.0:0/evil#?evil=+&evil=evil", "http://evil.0:0/evil#?evil=&&evil=evil", "http://evil.0:0/evil#?evil=%&evil=evil", "http://evil.0:0/evil#?evil=$&evil=evil", "http://evil.0:0/evil#?evil=#&evil=evil", "http://evil.0:0/evil#?evil=eVil&evil=evil", "http://evil.0:0/evil#?evil=EVIL&evil=evil", "http://evil.0:0/evil#?evil=ev_il&evil=evil", "http://evil.0:0/evil#?evil=ev il&evil=evil", "http://evil.0:0/evil#?evil=ev4il&evil=evil", "http://evil.0:0/evil#?evil=e&evil=evil", "http://evil.0:0/evil#?evil= &evil=evil", "http://evil.0:0/evil#?evil=6&evil=evil", "http://evil.0:0/evil#?evil=_&evil=evil", "http://evil.0:0/evil#?evil=&evil=evil", "http://evil.0:0/evil#?~=evil&evil=evil", "http://evil.0:0/evil#?^=evil&evil=evil", "http://evil.0:0/evil#?]=evil&evil=evil", "http://evil.0:0/evil#?[=evil&evil=evil", "http://evil.0:0/evil#?@=evil&evil=evil", "http://evil.0:0/evil#??=evil&evil=evil", "http://evil.0:0/evil#?==evil&evil=evil", "http://evil.0:0/evil#?;=evil&evil=evil", "http://evil.0:0/evil#?:=evil&evil=evil", "http://evil.0:0/evil#?/=evil&evil=evil", "http://evil.0:0/evil#?.=evil&evil=evil", "http://evil.0:0/evil#?-=evil&evil=evil", "http://evil.0:0/evil#?,=evil&evil=evil", "http://evil.0:0/evil#?+=evil&evil=evil", "http://evil.0:0/evil#?&=evil&evil=evil", "http://evil.0:0/evil#?%=evil&evil=evil", "http://evil.0:0/evil#?$=evil&evil=evil", "http://evil.0:0/evil#?#=evil&evil=evil", "http://evil.0:0/evil#?eVil=evil&evil=evil", "http://evil.0:0/evil#?EVIL=evil&evil=evil", "http://evil.0:0/evil#?ev_il=evil&evil=evil", "http://evil.0:0/evil#?ev il=evil&evil=evil", "http://evil.0:0/evil#?ev4il=evil&evil=evil", "http://evil.0:0/evil#?e=evil&evil=evil", "http://evil.0:0/evil#? =evil&evil=evil", "http://evil.0:0/evil#?6=evil&evil=evil", "http://evil.0:0/evil#?_=evil&evil=evil", "http://evil.0:0/evil#?=evil&evil=evil", "http://evil.0:0/evil~?evil=evil&evil=evil", "http://evil.0:0/evila?evil=evil&evil=evil", "http://evil.0:0/evil_?evil=evil&evil=evil", "http://evil.0:0/evil^?evil=evil&evil=evil", "http://evil.0:0/evilA?evil=evil&evil=evil", "http://evil.0:0/evil@?evil=evil&evil=evil", "http://evil.0:0/evil0?evil=evil&evil=evil", "http://evil.0:0/evil/?evil=evil&evil=evil", "http://evil.0:0/evil-?evil=evil&evil=evil", "http://evil.0:0/evil+?evil=evil&evil=evil", "http://evil.0:0/evil%?evil=evil&evil=evil", "http://evil.0:0/~#?evil=evil&evil=evil", "http://evil.0:0/^#?evil=evil&evil=evil", "http://evil.0:0/]#?evil=evil&evil=evil", "http://evil.0:0/[#?evil=evil&evil=evil", "http://evil.0:0/@#?evil=evil&evil=evil", "http://evil.0:0/?#?evil=evil&evil=evil", "http://evil.0:0/=#?evil=evil&evil=evil", "http://evil.0:0/;#?evil=evil&evil=evil", "http://evil.0:0/:#?evil=evil&evil=evil", "http://evil.0:0//#?evil=evil&evil=evil", "http://evil.0:0/.#?evil=evil&evil=evil", "http://evil.0:0/-#?evil=evil&evil=evil", "http://evil.0:0/,#?evil=evil&evil=evil", "http://evil.0:0/+#?evil=evil&evil=evil", "http://evil.0:0/&#?evil=evil&evil=evil", "http://evil.0:0/%#?evil=evil&evil=evil", "http://evil.0:0/$#?evil=evil&evil=evil", "http://evil.0:0/##?evil=evil&evil=evil", "http://evil.0:0/eVil#?evil=evil&evil=evil", "http://evil.0:0/EVIL#?evil=evil&evil=evil", "http://evil.0:0/ev_il#?evil=evil&evil=evil", "http://evil.0:0/ev il#?evil=evil&evil=evil", "http://evil.0:0/ev4il#?evil=evil&evil=evil", "http://evil.0:0/e#?evil=evil&evil=evil", "http://evil.0:0/ #?evil=evil&evil=evil", "http://evil.0:0/6#?evil=evil&evil=evil", "http://evil.0:0/_#?evil=evil&evil=evil", "http://evil.0:0/#?evil=evil&evil=evil", "http://evil.0:0//evil#?evil=evil&evil=evil", "http://evil.0:0evil#?evil=evil&evil=evil", "http://evil.0:0:0/evil#?evil=evil&evil=evil", "http://evil.0/evil#?evil=evil&evil=evil", "http://evil.0:00/evil#?evil=evil&evil=evil", "http://evil.0:/evil#?evil=evil&evil=evil", "http://evil.00:0/evil#?evil=evil&evil=evil", "http://evil.0000:0/evil#?evil=evil&evil=evil", "http://evil.000:0/evil#?evil=evil&evil=evil", "http://..0:0/evil#?evil=evil&evil=evil", "http://-.0:0/evil#?evil=evil&evil=evil", "http://eVil.0:0/evil#?evil=evil&evil=evil", "http://EVIL.0:0/evil#?evil=evil&evil=evil", "http://ev_il.0:0/evil#?evil=evil&evil=evil", "http://ev il.0:0/evil#?evil=evil&evil=evil", "http://ev4il.0:0/evil#?evil=evil&evil=evil", "http://e.0:0/evil#?evil=evil&evil=evil", "http://6.0:0/evil#?evil=evil&evil=evil", "http://_.0:0/evil#?evil=evil&evil=evil", "http://http://evil.0:0/evil#?evil=evil&evil=evil", "evil.0:0/evil#?evil=evil&evil=evil", "evil.travel", "evil.name", "evil.museum", "evil.mobi", "evil.jobs", "evil.info", "evil.coop", "evil.asia", "evil.arpa", "evil.aero", "evil.AA", "evil.0", "ftps://evil.0:0/evil#?evil=evil&evil=evil", "https://evil.0:0/evil#?evil=evil&evil=evil", "ftp://evil.0:0/evil#?evil=evil&evil=evil", "http://evil.travel:0/evil#?evil=evil&evil=evil", "http://evil.name:0/evil#?evil=evil&evil=evil", "http://evil.museum:0/evil#?evil=evil&evil=evil", "http://evil.mobi:0/evil#?evil=evil&evil=evil", "http://evil.jobs:0/evil#?evil=evil&evil=evil", "http://evil.info:0/evil#?evil=evil&evil=evil", "http://evil.coop:0/evil#?evil=evil&evil=evil", "http://evil.asia:0/evil#?evil=evil&evil=evil", "http://evil.arpa:0/evil#?evil=evil&evil=evil", "http://evil.aero:0/evil#?evil=evil&evil=evil", "http://evil.AA:0/evil#?evil=evil&evil=evil", "http://evil.0:0/evil#?evil=evil&evil=evil"], "nonMatches": ["http://evil.A:0/evil#?evil=evil&evil=evil", "http://evil.:0/evil#?evil=evil&evil=evil", "http://~.0:0/evil#?evil=evil&evil=evil", "http://^.0:0/evil#?evil=evil&evil=evil", "http://].0:0/evil#?evil=evil&evil=evil", "http://[.0:0/evil#?evil=evil&evil=evil", "http://@.0:0/evil#?evil=evil&evil=evil", "http://?.0:0/evil#?evil=evil&evil=evil", "http://=.0:0/evil#?evil=evil&evil=evil", "http://;.0:0/evil#?evil=evil&evil=evil", "http://:.0:0/evil#?evil=evil&evil=evil", "http:///.0:0/evil#?evil=evil&evil=evil", "http://,.0:0/evil#?evil=evil&evil=evil", "http://+.0:0/evil#?evil=evil&evil=evil", "http://&.0:0/evil#?evil=evil&evil=evil", "http://%.0:0/evil#?evil=evil&evil=evil", "http://$.0:0/evil#?evil=evil&evil=evil", "http://#.0:0/evil#?evil=evil&evil=evil", "http:// .0:0/evil#?evil=evil&evil=evil", "http://.0:0/evil#?evil=evil&evil=evil"]}, {"regex": "^(?![DFIOQU])([ABCEGHJ-NPRSTVXY]\\d[A-Z][ ]\\d[A-Z]\\d)$", "exceptionStackTrace": null, "matches": ["X0A 0A0", "V0A 0A0", "T0A 0A0", "S0A 0A0", "R0A 0A0", "P0A 0A0", "J0A 0A0", "H0A 0A0", "G0A 0A0", "E0A 0A0", "C0A 0A0", "B0A 0A0", "A0A 0A0", "Y0A 0A0"], "nonMatches": ["D0A 0A0"]}, {"regex": "^(?=.*\\d)(?=.*[A-Za-z])(?!.*[!@#\\$%\\^&\\*\\(\\)\\+=\\|;&#39;&quot;{}<>\\.\\?\\-_\\\\/:,~`]).{6,20}$", "exceptionStackTrace": null, "matches": ["0aaaaa"], "nonMatches": ["aaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaa", "aaaaa", "~aaaaa", "}aaaaa", "|aaaaa", "{aaaaa", "`aaaaa", "_aaaaa", "^aaaaa", "\\aaaaa", "Aaaaaa", "@aaaaa", "?aaaaa", ">aaaaa", "=aaaaa", "<aaaaa", ";aaaaa", ":aaaaa", "/aaaaa", ".aaaaa", "-aaaaa", ",aaaaa", "+aaaaa", "*aaaaa", ")aaaaa", "(aaaaa", "&aaaaa", "%aaaaa", "$aaaaa", "#aaaaa", "!aaaaa", " aaaaa", "aaaaaa"]}, {"regex": "\\?<.+?>", "exceptionStackTrace": null, "matches": ["?<?>", "?<>>", "?<<>", "?<eVil>", "?<EVIL>", "?<ev_il>", "?<ev il>", "?<ev4il>", "?<e>", "?< >", "?<6>", "?<_>", "?<evil>"], "nonMatches": ["?<>"]}, {"regex": "(?<username>#?[+_a-zA-Z0-9+-]+(\\.[+_a-zA-Z0-9+-]+)*)@(?<domain>[a-zA-Z0-9]+(-(?!-)|[a-zA-Z0-9\\.])*?[a-zA-Z0-9]+\\.([0-9]{1,3}|[a-zA-Z]{2,3}|(aero|arpa|asia|coop|info|jobs|mobi|museum|name|travel)))", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<u"}, "matches": []}, {"regex": "\\(?(?<areacode>[1]?[2-9]\\d{2})\\)?[\\s-]?(?<prefix>[2-9]\\d{2})[\\s-]?(?<linenumber>[\\d]{4})", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "unknown extension ?<a"}, "matches": []}, {"regex": "((&#[0-9]+|&[a-zA-Z]+[0-9]*?);)", "exceptionStackTrace": null, "matches": ["&evil00;", "&eVil0;", "&EVIL0;", "&e0;", "&#00;", "&evil;", "&evil0;", "&#0;"], "nonMatches": ["&ev_il0;", "&ev il0;", "&ev4il0;", "& 0;", "&60;", "&_0;", "&0;", "&#;"]}, {"regex": "^-?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$", "exceptionStackTrace": null, "matches": ["-0", "-0.000000", "-90", "-90.000000", "90.0", "10", "0", "90", "-10.0", "-0.0", "-90.0"], "nonMatches": ["-00.0", "-0.0.0", "-0.0000000", "-0.", "-90.0.0", "-90.0000000", "-90.", "--90.0"]}, {"regex": "^-?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[1-7][0-9])(?:(?:\\.[0-9]{1,6})?))$", "exceptionStackTrace": null, "matches": ["-0", "-0.000000", "-180", "-180.000000", "180.0", "110", "10", "0", "180", "-110.0", "-10.0", "-0.0", "-180.0"], "nonMatches": ["-100.0", "-00.0", "-0.0.0", "-0.0000000", "-0.", "-180.0.0", "-180.0000000", "-180.", "--180.0"]}, {"regex": "gdgdhb", "exceptionStackTrace": null, "matches": ["gdgdhb"], "nonMatches": []}, {"regex": "<\\s*/?\\s*\\w+(\\s*\\w+\\s*=\\s*([&#39;&quot;][^&#39;&quot;]*[&#39;&quot;]|[\\w#]+))*\\s*/?\\s*>", "exceptionStackTrace": null, "matches": ["< / evil evil = # / >", "< / evil evil = eVil / >", "< / evil evil = EVIL / >", "< / evil evil = ev_il / >", "< / evil evil = ev4il / >", "< / evil evil = e / >", "< / evil evil = 6 / >", "< / evil evil = _ / >", "< / evil evil = ;evil; /  >", "< / evil evil = ;evil; />", "< / evil evil = ;evil;  >", "< / evil evil = ;evil;  / >", "< / evil evil = ;evil;/ >", "< / evil evil = ;evil; evil = ;evil; / >", "< / evil / >", "< / evil evil = ;evilu / >", "< / evil evil = ;evilt / >", "< / evil evil = ;evilq / >", "< / evil evil = ;evilo / >", "< / evil evil = ;evil9 / >", "< / evil evil = ;evil3 / >", "< / evil evil = ;evil& / >", "< / evil evil = ;evil# / >", "< / evil evil = ;>; / >", "< / evil evil = ;=; / >", "< / evil evil = ;<; / >", "< / evil evil = ;/; / >", "< / evil evil = ;eVil; / >", "< / evil evil = ;EVIL; / >", "< / evil evil = ;ev_il; / >", "< / evil evil = ;ev il; / >", "< / evil evil = ;ev4il; / >", "< / evil evil = ;e; / >", "< / evil evil = ; ; / >", "< / evil evil = ;6; / >", "< / evil evil = ;_; / >", "< / evil evil = ;; / >", "< / evil evil = uevil; / >", "< / evil evil = tevil; / >", "< / evil evil = qevil; / >", "< / evil evil = oevil; / >", "< / evil evil = 9evil; / >", "< / evil evil = 3evil; / >", "< / evil evil = &evil; / >", "< / evil evil = #evil; / >", "< / evil evil =  ;evil; / >", "< / evil evil =;evil; / >", "< / evil evil  = ;evil; / >", "< / evil evil= ;evil; / >", "< / evil eVil = ;evil; / >", "< / evil EVIL = ;evil; / >", "< / evil ev_il = ;evil; / >", "< / evil ev4il = ;evil; / >", "< / evil e = ;evil; / >", "< / evil   = ;evil; / >", "< / evil 6 = ;evil; / >", "< / evil _ = ;evil; / >", "< / evil  = ;evil; / >", "< / evil  evil = ;evil; / >", "< / evilevil = ;evil; / >", "< / eVil evil = ;evil; / >", "< / EVIL evil = ;evil; / >", "< / ev_il evil = ;evil; / >", "< / ev4il evil = ;evil; / >", "< / e evil = ;evil; / >", "< /   evil = ;evil; / >", "< / 6 evil = ;evil; / >", "< / _ evil = ;evil; / >", "< /  evil = ;evil; / >", "< /  evil evil = ;evil; / >", "< /evil evil = ;evil; / >", "<  evil evil = ;evil; / >", "<  / evil evil = ;evil; / >", "</ evil evil = ;evil; / >", "<evil>", "< / evil evil = evil / >", "< / evil evil = ;evil; / >"], "nonMatches": ["< / evil evil = > / >", "< / evil evil = = / >", "< / evil evil = < / >", "< / evil evil = ; / >", "< / evil evil = / / >", "< / evil evil = & / >", "< / evil evil = ev il / >", "< / evil evil =   / >", "< / evil evil =  / >", "< / evil evil = ;evil; // >", "< / evil evil = ;evila / >", "< / evil evil = ;evil0 / >", "< / evil evil = ;;; / >", "< / evil evil = ;&; / >", "< / evil evil = ;#; / >", "< / evil evil = aevil; / >", "< / evil evil = 0evil; / >", "< / evil ev il = ;evil; / >", "< / ev il evil = ;evil; / >", "< // evil evil = ;evil; / >"]}, {"regex": "How do find the phone number for Quicken support? ", "exceptionStackTrace": null, "matches": ["How do find the phone number for Quicken suppor ", "How do find the phone number for Quicken support "], "nonMatches": ["How do find the phone number for Quicken supportt "]}, {"regex": "Suitable Quicken online chat support ", "exceptionStackTrace": null, "matches": ["Suitable Quicken online chat support "], "nonMatches": []}, {"regex": "(?<=(\\n|^))(>\\s*)+", "exceptionStackTrace": {"exceptionThrownBy": "Python", "exception": "look-behind requires fixed-width pattern"}, "matches": []}, {"regex": "(\\s{1,})", "exceptionStackTrace": null, "matches": ["  ", " "], "nonMatches": [""]}, {"regex": "^[a-zA-Z_]{1}[a-zA-Z0-9_@$#]*$", "exceptionStackTrace": null, "matches": ["_@", "_$", "_#", "_eVil", "_EVIL", "_ev_il", "_ev4il", "_e", "_6", "__", "__evil", "evil", "aevil", "Aevil", "_", "_evil"], "nonMatches": ["_ev il", "_ "]}]